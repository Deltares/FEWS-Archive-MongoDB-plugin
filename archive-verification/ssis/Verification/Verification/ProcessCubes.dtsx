<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/16/2024 2:38:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CHADWHH01"
  DTS:CreatorName="TVA\emroush-wa"
  DTS:DTSID="{2A1E5369-7B7A-452D-859A-AF9AF3DC4000}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessCubes"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="121"
  DTS:VersionGUID="{23810F31-89EF-4B66-B3EF-257249502B6F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3376DF3A-C5DA-4BD3-B830-3B635FACC292}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Execute">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Complete"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{13df2463-f766-487d-b83e-7d3db944e768}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Complete"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f21f1a3ffa864259a3e934608f1397dd"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        /// <summary>
        /// 
        /// </summary>
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
                
                Complete(settings, settingsPath);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Complete
		/// </summary>
		/// <param name="settings"></param>
		/// <param name="settingsPath"></param>
		/// <returns></returns>
		private void Complete(dynamic settings, string settingsPath)
        {
            settings["execute"] = false;
			File.WriteAllText(settingsPath, new JavaScriptSerializer().Serialize(settings));
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_f21f1a3ffa864259a3e934608f1397dd</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:DisplayName>
    <msb:ProjectId>{6E928546-3CCD-46BF-B2C5-8B8AFAE4B682}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f21f1a3ffa864259a3e934608f1397dd.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.dll">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
bCUAAAAAgxg4BgYABQB0JQAAAACTCOkFhwIFAKAlAAAAAJMIqgGMAgUApyUAAAAAkwi2AZECBQCv
JQAAAACWCLMHlwIGALYlAAAAAIYYOAYGAAYAviUAAAAAkRg+BpwCBgAAAAEAXQcAAAIAKQQAAAEA
pAcAAAIAIAEAAAEA6AMJADgGAQARADgGBgAZADgGCgApADgGEAAxADgGEAA5ADgGEABBADgGEABJ
ADgGEABRADgGEABZADgGEABhADgGEABpADgGBgCJADgGBgCRADgGBgDhADgGBgABATgGFQARAWEB
IgAZAf0FJgBxAHwHKgAhARwHMAApAecENgAxAd4DPQAZAZYHQQB5ACAEJgA5AZEBSQDBADgGBgBB
AeUHTwDBAO4DVADJAEoBXwBRAQYCZwBhAa4FcQAMAAYCmwAMAKwHpwAUACgBtgAhAb8HAQAhAYQH
wgAZAZYHyAAZARAIzgCBAS4G0QAZAY8H2gBhAfoH4QAcAAYCmwAcAKwHpwAkACgBDgEsAAYCmwAs
AKwHpwA0AAYCmwA0AKwHpwA8ACgBRAFEACgBtgBMAAYCmwBMAKwHpwBhAUUG4QBUAAYCmwBUAKwH
pwBhAfEH4QBcAAYCmwBcAKwHpwBkACgBRAFsACgBRAF0ACgBsgGBARQEwgFxADgGBgB5ADgGBgDJ
AAMIywHpADgG0QEJATgGBgAkAGsAfAMpAIMA1wIuAAsArwIuABMAuAIuABsA1wIuACMA4AIuACsA
CQMuADMACQMuADsADwMuAEMA4AIuAEsAGAMuAFMACQMuAFsAMgNDAGMAfANJAIMA1wJjAHsAfAOB
AHMAfAOjAHMAfAPDAHMAfAPjAHMAfAMbAFoBAwABAAQAAwAAAO0FoAIAAMoBpQIAALcHqgICAAYA
AwACAAcABQABAAgABQACAAkABwCMAKsA9AADARsBKgE5AU8BYAFxAYEBjwGZAaUBBIAAAAEAAACC
InFRAAAAAAAA7AAAAAQAAAAAAAAAAAAAANkByAAAAAAAEAAAAAAAAAAAAAAA4gE2BAAAAAAEAAAA
AAAAAAAAAADZAZ4BAAAAAAQAAAAAAAAAAAAAAOsBZgcAAAAABAAAAAAAAAAAAAAA2QHwBAAAAAAQ
AAAAAAAAAAAAAADiAYUAAAAAAAQAAAAAAAAAAAAAAPQBnQUAAAAAAAAAAAEAAACbBgAABQACAAYA
AgAHAAIAOQBbAAAAADw+cF9fMAA8Pm9fXzEAPD5wX18xAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVg
MQA8Pm9fXzIAPD5wX18yADw+b19fMwA8PnBfXzMAPD5wX180AEZ1bmNgNABBY3Rpb25gNABGdW5j
YDUAQWN0aW9uYDYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYgBtc2NvcmxpYgBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBTVF9mMjFmMWEzZmZhODY0MjU5YTNlOTM0NjA4ZjEzOTdkZABk
ZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTWFjaGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGxldGUAQ2Fs
bFNpdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAERlc2VyaWFs
aXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdhcm5pbmcAVG9TdHJpbmcAc2V0dGlu
Z3NQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1haWwAU1RfZjIxZjFhM2ZmYTg2NDI1OWEzZTkzNDYw
OGYxMzk3ZGQuZGxsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAF9sb2Nh
dGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2Vi
LlNjcmlwdC5TZXJpYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJl
SW5mbwBDU2hhcnBBcmd1bWVudEluZm8ATWljcm9zb2Z0LkNTaGFycABJbnZva2VNZW1iZXIATWlj
cm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAVG9VcHBlcgBFdmVudHNPYmplY3RXcmFwcGVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IASW52b2tlQ29uc3RydWN0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81ODk0
NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdzAENTaGFycEJpbmRl
ckZsYWdzAFNldHRpbmdzAHNldHRpbmdzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBnZXRfRHRzAGdl
dF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAc3ViamVjdABUYXJnZXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABSZWFkQWxsVGV4dABHZXRJbmRl
eABTZXRJbmRleABnZXRfQXNzZW1ibHkARW1wdHkAAAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAA
J1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoA
VABhAHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABh
AHQAaAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AABFDAG8AbQBwAGwAZQB0AGUAAAd7ADAA
fQAAE0UAUgBSAE8AUgAgAC0AIAAoAAEDKQAAD2UAeABlAGMAdQB0AGUAABlXAHIAaQB0AGUAQQBs
AGwAVABlAHgAdAAAE1MAZQByAGkAYQBsAGkAegBlAAAJUwBlAG4AZAAAFXMAbQB0AHAAUwBlAHIA
dgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAAAhdABvAEUAbQBhAGkAbABB
AGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcA
YgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAKOXEYA1B/NOvLzKZXamr/4ABCABAQgDIAABBSABARERBCABAQ4F
IAEBEX0GBwMOHBJBAwAADgMgAA4FIAASgJEFIAASgJUGIAESgJkcAyAAHAcABA4OHBwcBQACDg4O
BAABDg4GMAEBHgAOAwoBHAcAARJlEYClCQACEoCpEYCtDhoABRKAtRGAuQ4VEoC9ARJlEmUVEoC9
ARKAqQ4VEk0BFRJRBBJVEggcDgsAARUSTQETABKAtQMGEwAKFRJRBBJVEggcDgsgBAETABMBEwIT
AwUgABKAwQUAAg4OHAIGDgggBQIIDg4OCAYAAw4ODg4SAAMSgLURgLkSZRUSgL0BEoCpDhUSTQEV
ElkFElUcDgIcChUSWQUSVRwOAhwMIAQTBBMAEwETAhMDDhUSTQEVElEEElUSZQ4cDhUSTQEVEl0E
ElUSYRwcChUSXQQSVRJhHBwKIAMTAxMAEwETAgoVElEEElUSZQ4cBQcCHBJBEBUSTQEVEm0GElUS
aRwcDg4PFRJNARUSXQQSVRJlHBJpDRUSTQEVEl0EElUcDhwJFRJdBBJVHA4cCxUSXQQSVRJlHBJp
DBUSbQYSVRJpHBwODg8gBgETABMBEwITAxMEEwUIIAUBCA4ODggFIAASgMUHIAIBDhKAxQi3elxW
GTTgiQiJhF3NgIDMkQgxvzhWrTZONQiwP19/EdUKOgMGEnUDBhJ5AwYSEA8GFRJNARUSUQQSVRII
HA4PBhUSTQEVElkFElUcDgIcDwYVEk0BFRJdBBJVEmEcHA8GFRJNARUSUQQSVRJlDhwOBhUSTQEV
El0EElUcDhwQBhUSTQEVEl0EElUSZRwSaREGFRJNARUSbQYSVRJpHBwODgUgAgEcDgUgAgEODgQA
ABJ1BAAAEnkFAAEBEnkEAAASEAMAAAEECAASdQQIABJ5BAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUy
MmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAzDoAAAAAAAAAAAAA5joAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAANg6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQBxUYIiAAABAHFRgiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABUAFYAQQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADMANAAuADIAMAA4ADQAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBmADIAMQBmADEAYQAzAGYAZgBhADgANgA0ADIANQA5AGEAMwBlADkAMwA0ADYAMAA4AGYA
MQAzADkANwBkAGQALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAVgBBACAAMgAwADIANAAAAAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AZgAyADEAZgAxAGEAMwBmAGYAYQA4ADYANAAyADUAOQBhADMA
ZQA5ADMANAA2ADAAOABmADEAMwA5ADcAZABkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUA
MgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMAA4ADQAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMAA4ADQAOQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD4OgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DeployCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{07483abf-6af0-4671-960a-4fb6f7df47c8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DeployCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5b6adba25bc54be0be84d43b4b60cb08"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_5b6adba25bc54be0be84d43b4b60cb08</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using Task = System.Threading.Tasks.Task;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

                dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];
                string[] reprocessCubes = settings["reprocessCubes"].ToString().Split(',');

                var tasks = Directory.GetFiles(bimPath, "*.bim").Select(bimFile => Task.Run(() =>
                {
	                Deploy(tabularConnectionString, reprocessCubes, bimFile);
                }));
                Task.WaitAll(tasks.ToArray());

				Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}
		
				/// <summary>
		/// Deploy
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="reprocessCubes"></param>
		/// <param name="bimFile"></param>
		private void Deploy(string tabularConnectionString, string[] reprocessCubes, string bimFile)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
                    server.Connect(tabularConnectionString);
                    var databaseName = Path.GetFileNameWithoutExtension(bimFile);
                    var bim = File.ReadAllText(bimFile);

                    dynamic cube = new JavaScriptSerializer { MaxJsonLength = int.MaxValue }.Deserialize<dynamic>(bim);
                    var database = server.Databases.FindByName(databaseName);

                    if (!UpdateCapable(cube, database) || reprocessCubes.Contains(databaseName) || reprocessCubes.Any(r => r.ToUpper().Equals("ALL")))
                        server.Execute($"{{\"delete\": {{\"object\": {{\"database\": \"{databaseName}\"}}}}}}");

                    var command = $"{{\"createOrReplace\": {{\"object\": {{\"database\": \"{databaseName}\"}}, \"database\": {bim}}}}}";
                    var result = server.Execute(command);
                    if (result.ContainsErrors)
                        throw new Exception($"{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}\n\n{command}\n{bimFile} -> {tabularConnectionString}");
                    
                    bool fireAgain = true;
                    Dts.Events.FireInformation(0, _location, $"{bimFile} -> {tabularConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, _location, $"{bimFile} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }
        
        /// <summary>
        /// UpdateCapable
        /// </summary>
        /// <param name="cube"></param>
        /// <param name="database"></param>
        /// <returns></returns>
        private bool UpdateCapable(dynamic cube, Database database)
        {
            var compatibilityLevel = (int)cube["compatibilityLevel"];
            var clientCompatibilityLevel = cube["model"]["annotations"][0]["value"];

            var existingCompatibilityLevel = database?.CompatibilityLevel;
            var existingClientCompatibilityLevel = database?.Model.Annotations.Find("ClientCompatibilityLevel").Value;

            return database == null || compatibilityLevel == existingCompatibilityLevel && clientCompatibilityLevel == existingClientCompatibilityLevel;
        }

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:DisplayName>
    <msb:ProjectId>{23A66DCF-E027-4278-A19C-D01575B8E160}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.dll">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
I0dVSUQAAAD4GgAAYAYAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAAEkAAAAL
AAAALAAAABUAAAAMAAAAfgAAAAEAAAAYAAAABAAAAAIAAAADAAAABAAAACEAAAABAAAACQAAAAEA
AAAHAAAACQAAAAAAqAYBAAAAAAAGAKkEdAkGADgFdAkGAPUDUgkPAAMKAAAGACIEtQcGAIwEtQcG
AG0EtQcGAB8FtQcGAMkEtQcGAOIEtQcGADkEtQcGAFQEmAUKAP0EFQYKAEEDFQYGAGcL2QYGAB8I
2QYOAHUDfwgOAA0JfwgGADkGuwoSAAoIlAkWAKwDdAkGAH8A2QYGAL0DdAkGAN8A2QYSALULlAkG
AIoA9QESADEClAkWAJgAdAkGACkB2QYWAKMDdAkGABQB2QYGAD4B2QYGAOgC2QYaAM8LhwYGAEwB
2QYGANgDUgkGAOEIrwkGAD0IeQcaAI4DWgYaAAkEWgYaAF0DWQcGANoL2QYGANgF2QYKAEgGFQYe
AF0KtgIeAEwCtgIiABQJjgcGAN8FmwEGAJYCmwEGAG8C2QYmANYIrwgWAM4IdAkmAJYKrwgmAEkI
rwgmAH4KrwgGADMMmwEWAGQCcwgKAPkIFQYSAA0J+QIOAN0HfwgWAN4C+AoGAGMCIAsGABAChwUG
ALMA2QYSAHUD+QIOAGoGfwgOAPAHfwgOAOYAfwgOAG4HfwgGAOwG2QYGABQMtQcSAMcHlAkGAK4H
2QYAAAAAkgEAAAAAAQABAAEAEAD0BsQBOQABAAEAAAAQALYJKgo9AAMABgAAARAAqAoqCqUABQAK
AAMhEADxAQAAPQAGAA0AAwEQAAEAAAA9AAoAEgADARAAQAAAAD0ADQAUAIMBEADRAAAAPQAPABYA
gwEQAAYBAAA9ABcAFgCDARAAGwEAAD0AHgAWAIMBEAAwAQAAPQAoABYAUYAfCicEAQAgB6UBEQDg
BioEEQAxAy8EEQAhAjQENgCHATgEFgC5ADwEFgAWAEQEFgBVAFIEBgCxClsEBgC+BaUBBgBlCV8E
BgCTAqUBBgCjAGMEFgA5AGcEFgB4AHYEFgDYAGcEFgANAXYEFgAiAWcEFgA3AYQEFgBFAZIEFgBV
AaEEFgA5ALAEFgB4AIQEFgDYAMMEFgANAdIEFgAiAcMEFgA3AdIEFgBFAdIEFgA5AGcEFgB4AOAE
FgDYAGcEFgANAWcEFgAiAe4EFgA3AWcEFgBFAWcEFgBVAf0EFgCAAf0EFgCLAdIEFgA5AGcEFgB4
AGcEFgDYAGcEFgANAQwFFgAiAR8FUCAAAAAAhgD6BgYAAQAMJAAAAACBACwMMwUBAIgoAAAAAIEA
VQI7BQQALCwAAAAAgQCXBkIFBgCQLgAAAACGGDMJBgAIAJguAAAAAIMYMwkGAAgAoC4AAAAAkwjd
CEgFCADMLgAAAACTCBkDTgUIANMuAAAAAJMIJQNUBQgA2y4AAAAAlgiXC1sFCQDiLgAAAACGGDMJ
BgAJAOouAAAAAJEYOQlgBQkA9i4AAAAAkRg5CWAFCQCYLgAAAACGGDMJBgAJAAIvAAAAAIMAwgDm
AwkAFC8AAAAAgwAfAGQFCgAhLwAAAACDAF4AbwULAJguAAAAAIYYMwkGAAwAKS8AAAAAgwAuAHUF
DACYLgAAAACGGDMJBgANAE4vAAAAAIMAbQAGAA0AAAABAL4FAAACAGUJAAADAJMCAAABABwCAAAC
AH4DAAABAG4LAAACAD0CAAABAHUFAAABAFAJAAABAFAJAAABAN4GAAABAJMCCQAzCQEAEQAzCQYA
GQAzCQoAKQAzCRAAMQAzCRAAOQAzCRAAQQAzCRAASQAzCRAAUQAzCRAAWQAzCRAAYQAzCRAAaQAz
CQYAqQAzCQYAuQAzCQYAIQEzCQYAQQEzCRUAUQGbAiUAWQHxCCkAcQBGCy0AYQFZCjMAaQHQBjkA
cQFeBUAAWQFgC0QAeQEzCQYAeQDWBSkAgQHWAkwAiQHzC1IAeQF7BVcACQGBAmIAmQHmC2sADACH
A4cADACQC5MAsQGHA5cAmQH/C6EAFACHA4cAFACQC5MAHABFAswAJABFAuAANACHA4cANACQC5MA
mQGiCPoAPACHA4cAPACQC5MARACHA4cARACQC5MATABFAuAAVABFAswAXABFAuAAwQFnCk0BZAAz
CVwByQF2C2IByQEIDIABmQCgBpIBYQHACwEAYQFOC5kBWQFgC58BWQE9DKUB0QEpCagBWQFZC7EB
kQAzCQYA2QF9CxAAgQEEB1IAeQHkBQEAkQBwCssB4QGrAtEBmQE6B9cBbACHA4cAbACQC5MAdABF
Ag0CfACHA4cAfACQC5MAhABFAuAAmQFJB9cBjACHA4cAjACQC5MAyQHZCj4ClABFAswAnAAzCVwB
yQEdDGAC2QFWBXICWQFZC3gCoQAzC34CyQHuC4ICpAAzCVwByQEhDKECrAAzCVwBWQH/BtICgQAz
CRAA0QEqB9wC0QGyBecC+QFcCPAC2QGFCwYAtACHA4cAtACQC5MAvABFAuAAxACHA4cAxACQC5MA
zABFAswACQJwBjsD1AAzCT8DiQA+BkUDEQIQC0sD3AAXAl0DKQJeBSkA5ACHA4cA5ACQC5MA1ACj
C3ED1ABoBX4C7ABFAswA9ACHA4cA9ACQC5MAmQFACaEA/ACHA4cA/ACQC5MABAFFAswADAFFAsgD
cQAzCQYAeQAzCQYACQEQDNgDKQEzCd4DSQEzCQYAWQHSCuYDyQASCusD2QApCCkASQIzCVwBmQA5
CPYDCAAEACIEKQCDALQFLgALAIwFLgATAJUFLgAbALQFLgAjAL0FLgArAOYFLgAzAOYFLgA7AOwF
LgBDAL0FLgBLAPUFLgBTAOYFLgBbAA8GQwBjAFkGSQCDALQFYwB7AFkGhABrAFkGoQBzAFkGowBz
AFkGwwBzAFkG4wBzAFkGAwFzAFkGIwFzAFkGQwFzAFkGYwFzAFkGHAC4AfUCgAMDAAEABAADAAAA
4Qh7BQAAOQOBBQAArQuHBQIABwADAAIACAAFAAEACQAFAAIACgAHAHoAtADCANcA6QDsABUBIwEw
ATkBQwFUAe0B/wEaAicCMAJPAlkClALEAgcDFAMdAysDNQNRA2MDdgOGA5kDqwO5AwSAAAABAAAA
vSIQRwAAAAAAAFwBAAAEAAAAAAAAAAAAAAD+A+gBAAAAABAAAAAAAAAAAAAAAAcE9gUAAAAADwAA
AAAAAAAAAAAABwR/CAAAAAAPAAAAAAAAAAAAAAAHBPkCAAAAAAQAAAAAAAAAAAAAAP4D7QIAAAAA
BAAAAAAAAAAAAAAA/gPZBgAAAAAQAAAAAAAAAAAAAAAHBKUBAAAAAAQAAAAAAAAAAAAAABAE4goA
AAAABAAAAAAAAAAAAAAAGQRiCAAAAAAAAAAAAQAAAMAJAAAFAAIABgACAAcAAgAIAAIACQACAAoA
AgALAAIAOQBeAGcAegFpAI0BmQBLAp8ASwKnAI8CqwC9AmcAzAKnAPEDAAAAAAA8PmNfX0Rpc3Bs
YXlDbGFzczJfMAA8PjlfXzNfMAA8RGVwbG95PmJfXzNfMAA8TWFpbj5iX18wADw+cF9fMAA8PmNf
X0Rpc3BsYXlDbGFzczJfMQA8PjlfXzNfMQA8RGVwbG95PmJfXzNfMQA8TWFpbj5iX18xADw+cF9f
MQBOdWxsYWJsZWAxAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVgMQBDUyQ8PjhfX2xvY2FsczEASW50
MzIAPD45X18zXzIAPERlcGxveT5iX18zXzIAPD5vX18yADw+cF9fMgBGdW5jYDIATmFtZWRNZXRh
ZGF0YU9iamVjdENvbGxlY3Rpb25gMgA8Pm9fXzMAPD5wX18zAEZ1bmNgMwA8Pm9fXzQAPD5wX180
AEZ1bmNgNAA8Pm9fXzUAPD5wX181AEZ1bmNgNQA8PnBfXzYAQWN0aW9uYDYAPD5wX183AFNUXzVi
NmFkYmEyNWJjNTRiZTBiZTg0ZDQzYjRiNjBjYjA4ADw+cF9fOAA8PjkAPD5wX185ADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBh
NGRlN2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
cmljAFRocmVhZABGaW5kAGN1YmUAZGVmYXVsdEluc3RhbmNlAFhtbGFNZXNzYWdlAG1lc3NhZ2UA
SW52b2tlAFZhcmlhYmxlAFVwZGF0ZUNhcGFibGUASUVudW1lcmFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAYmltRmlsZQBnZXRfTWFjaGluZU5hbWUARmluZEJ5TmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbWJpbmUARXhwcmVzc2lvblR5cGUAU3lz
dGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAGRhdGFiYXNlAENyZWF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDYWxsU2l0ZQBEeW5hbWljQXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBFeGVjdXRlAGdldF9W
YWx1ZQBnZXRfSGFzVmFsdWUAdmFsdWUARGVzZXJpYWxpemUAU3lzdGVtLlRocmVhZGluZwBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJuaW5nAHRhYnVsYXJDb25uZWN0aW9uU3RyaW5n
AFRvU3RyaW5nAFBhdGgAc2V0X01heEpzb25MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAZ2V0X01vZGVs
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABnZXRfQ29tcGF0aWJpbGl0
eUxldmVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABXYWl0QWxsAFNUXzViNmFkYmEyNWJjNTRi
ZTBiZTg0ZDQzYjRiNjBjYjA4LmRsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AQm9vbGVh
bgBTY3JpcHRNYWluAEpvaW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAF9sb2NhdGlvbgBG
aXJlSW5mb3JtYXRpb24AVW5hcnlPcGVyYXRpb24AQmluYXJ5T3BlcmF0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAEFubm90YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldlYi5TY3Jp
cHQuU2VyaWFsaXphdGlvbgBBY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AWG1sYU1lc3NhZ2VDb2xs
ZWN0aW9uAERhdGFiYXNlQ29sbGVjdGlvbgBNb2RlbEFubm90YXRpb25Db2xsZWN0aW9uAFhtbGFS
ZXN1bHRDb2xsZWN0aW9uAEV4Y2VwdGlvbgBnZXRfRGVzY3JpcHRpb24AUnVuAEN1bHR1cmVJbmZv
AENTaGFycEFyZ3VtZW50SW5mbwBTbGVlcABNaWNyb3NvZnQuQ1NoYXJwAFN5c3RlbS5MaW5xAE1p
Y3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzLlRhYnVsYXIASW52b2tlTWVtYmVyAE1pY3Jvc29mdC5D
U2hhcnAuUnVudGltZUJpbmRlcgBDYWxsU2l0ZUJpbmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRv
VXBwZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTZXJ2ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmly
ZUVycm9yAC5jdG9yAC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
cmVwcm9jZXNzQ3ViZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNyb3NvZnQu
QW5hbHlzaXNTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUy
MmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBnZXRfTWVzc2FnZXMATWF4UmV0cmllcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFj
ODEzYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAZ2V0X0RhdGFiYXNlcwBDU2hh
cnBBcmd1bWVudEluZm9GbGFncwBDU2hhcnBCaW5kZXJGbGFncwBTZXR0aW5ncwA8PjRfX3RoaXMA
U3lzdGVtLlRocmVhZGluZy5UYXNrcwBFcXVhbHMAQ29udGFpbnMAU3lzdGVtLldlYi5FeHRlbnNp
b25zAFN5c3RlbS5MaW5xLkV4cHJlc3Npb25zAGdldF9Bbm5vdGF0aW9ucwBTeXN0ZW0uQ29sbGVj
dGlvbnMAZ2V0X0NvbnRhaW5zRXJyb3JzAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0
AE9iamVjdABzdWJqZWN0AFNlbGVjdABDb25uZWN0AERpc2Nvbm5lY3QAVGFyZ2V0AGdldF9EZWZh
dWx0AEdldFZhbHVlT3JEZWZhdWx0AFhtbGFSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVu
dABFbnZpcm9ubWVudABDb252ZXJ0AENhc3QAUmVhZEFsbFRleHQAR2V0SW5kZXgAVG9BcnJheQBn
ZXRfQXNzZW1ibHkAQW55AFNlbGVjdE1hbnkARGVwbG95AERpcmVjdG9yeQBFbXB0eQAAABd7ADAA
fQA6AHsAMQB9ADoAewAyAH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBl
AAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUAByAG8AagBlAGMAdAA6ADoA
UwBlAHQAdABpAG4AZwBzAFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMALgBqAHMAbwBuAAAPYgBp
AG0AUABhAHQAaAAAL3QAYQBiAHUAbABhAHIAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4A
ZwAAC1MAcABsAGkAdAAAEVQAbwBTAHQAcgBpAG4AZwAAHXIAZQBwAHIAbwBjAGUAcwBzAEMAdQBi
AGUAcwAACyoALgBiAGkAbQAAB3sAMAB9AAATRQBSAFIATwBSACAALQAgACgAAQMpAAAbVQBwAGQA
YQB0AGUAQwBhAHAAYQBiAGwAZQAASXsAIgBkAGUAbABlAHQAZQAiADoAIAB7ACIAbwBiAGoAZQBj
AHQAIgA6ACAAewAiAGQAYQB0AGEAYgBhAHMAZQAiADoAIAAiAAAJIgB9AH0AfQAAW3sAIgBjAHIA
ZQBhAHQAZQBPAHIAUgBlAHAAbABhAGMAZQAiADoAIAB7ACIAbwBiAGoAZQBjAHQAIgA6ACAAewAi
AGQAYQB0AGEAYgBhAHMAZQAiADoAIAAiAAAhIgB9ACwAIAAiAGQAYQB0AGEAYgBhAHMAZQAiADoA
IAAABX0AfQAAAwoAAAUKAAoAAAkgAC0APgAgAAEdewAwAH0AIAAtAD4AIAB7ADEAfQAKAHsAMgB9
AAElYwBvAG0AcABhAHQAaQBiAGkAbABpAHQAeQBMAGUAdgBlAGwAAAttAG8AZABlAGwAABdhAG4A
bgBvAHQAYQB0AGkAbwBuAHMAAAt2AGEAbAB1AGUAADFDAGwAaQBlAG4AdABDAG8AbQBwAGEAdABp
AGIAaQBsAGkAdAB5AEwAZQB2AGUAbAAACVMAZQBuAGQAABVzAG0AdABwAFMAZQByAHYAZQByAAAh
ZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBFAG0AYQBpAGwAQQBkAGQAcgBl
AHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIA
MgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAdBAEwATAAAAAAAy8CYInYCvUqMkEtAz3SjHQAEIAEBCAMgAAEFIAEBEREEIAEB
DgYgAQERgJ0IBwQSGBwOEkEDAAAOAyAADgUgABKAsQUgABKAtQYgARKAuRwDIAAcBwAEDg4cHBwF
AAIODg4EAAEODgYwAQEeAA4DCgEcCAABEoCFEYDJDgADEoDREYDVEoCFEoCFDBUScQEVEn0DEnkc
DgsAARUScQETABKA0QMGEwAJAAISgNkRgN0OEgADEoDREYDVEoCFFRJpARKA2Q0VEnEBFRJ1BBJ5
HA4cCRUSdQQSeRwOHAogAxMDEwATARMCCBUSfQMSeRwOCCACEwITABMBAh0ODRUScQEVEn0DEnkc
HQ4aAAUSgNERgNUOFRJpARKAhRKAhRUSaQESgNkNFRJxARUSdQQSeRwDHAwVEnEBFRJ9AxJ5HBwI
FRJ9AxJ5HBwJFRJ1BBJ5HAMcCRUSfQMSeRwdDgYAAh0ODg4HFRJhAg4STQUgAgEcGBcQAgIVEmkB
HgEVEmkBHgAVEmECHgAeAQUKAg4STQwQAQEdHgAVEmkBHgAECgESTQYAAQEdEk0FIAASgOkFAAIO
DhwCBg4IIAUCCA4ODggGAAMODg4OEgcMCBJJDg4cEkUOElECHBwSQQUgABKA8QUgARJFDhUABBKA
0RGA1RGA9RKAhRUSaQESgNkRFRJxARUSgIEFEnkSCBwSRRwNFRKAgQUSeRIIHBJFHAwgBBMEEwAT
ARMCEwMMFRJxARUSfQMSeRwCCBUSfQMSeRwCDRUScQEVEnUEEnkcAhwMEAECAhUSaQEeAB4AAwoB
DgkVEnUEEnkcAhwGFRJhAg4CERABAgIVEmkBHgAVEmECHgACBSABElEOBQABDh0OAyAAAgwQAQEV
EmkBHgASgPkECgESZQwVEmECEmUVEmkBEm0bEAICFRJpAR4BFRJpAR4AFRJhAh4AFRJpAR4BBgoC
EmUSbQcVEmECEm0OBQoCEm0OCQACDg4VEmkBDgogBgEIDg4OCBACCCAFAQgODg4IBAABAQgRBwcI
HBURWQEIDhURWQEIAgIMFRJxARUSfQMSeRwICBUSfQMSeRwIDRUScQEVEnUEEnkcCBwJFRJ1BBJ5
HAgcBRURWQEIAyAACAUgAQETAAUgABKBCQUgABKBDQsVEoERAhKBFRKBCQUgARMADg0VEnEBFRJ1
BBJ5AhwcBCAAEwAJFRJ1BBJ5AhwcBQcCHBJBEhUScQEVEoCNBhJ5EoCJHBwODhEVEnEBFRJ1BBJ5
EoCFHBKAiQ0VEnUEEnkSgIUcEoCJDhUSgI0GEnkSgIkcHA4ODyAGARMAEwETAhMDEwQTBQUgABKB
HQcgAgEOEoEdBCABAg4FIAASgSEECgESbQcAARJNEoElCLd6XFYZNOCJCImEXc2AgMyRCDG/OFat
Nk41CLA/X38R1Qo6BAUAAAACBggEBhKAlQQGEoCZAwYSEAMGEhQHBhUSYQIOAg0GFRJhAhJlFRJp
ARJtCAYVEmECEm0OAwYSCAMGHQ4DBhIYDgYVEnEBFRJ1BBJ5HA4cDQYVEnEBFRJ9AxJ5HA4NBhUS
cQEVEn0DEnkcHA4GFRJxARUSdQQSeRwDHA4GFRJxARUSfQMSeRwdDhIGFRJxARUSgIEFEnkSCBwS
RRwOBhUScQEVEnUEEnkcAhwNBhUScQEVEn0DEnkcAg0GFRJxARUSfQMSeRwIDgYVEnEBFRJ1BBJ5
HAgcDgYVEnEBFRJ1BBJ5AhwcEgYVEnEBFRJ1BBJ5EoCFHBKAiRMGFRJxARUSgI0GEnkSgIkcHA4O
ByADAQ4dDg4GIAICHBJFBSACAQ4OBQAAEoCVBQAAEoCZBgABARKAmQQAABIQAwAAAQogARUSaQES
bRJlBSABDhJtBSABEk0OBQgAEoCVBQgAEoCZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZk
MWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAC0UQAAAAAAAAAAAADOUQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwFEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAmBAAAAAAA
AAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
EEe9IgAAAQAQR70iPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEhgMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
VABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANQA4
ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEA
MwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAOAA5ADMALgAx
ADgAMQA5ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQBiADYA
YQBkAGIAYQAyADUAYgBjADUANABiAGUAMABiAGUAOAA0AGQANAAzAGIANABiADYAMABjAGIAMAA4
AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADUAYgA2AGEAZABiAGEAMgA1AGIAYwA1ADQAYgBlADAAYgBlADgANABkADQAMwBi
ADQAYgA2ADAAYwBiADAAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADgAOAA5ADMALgAxADgAMQA5ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADMALgAxADgAMQA5ADIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA4DEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\EmptyPartitions"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{523455c2-7287-4395-ba25-06bc42c200e6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="EmptyPartitions"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_eb97788c1c6343608c7bca9f6a486cbf"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_eb97788c1c6343608c7bca9f6a486cbf.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_eb97788c1c6343608c7bca9f6a486cbf</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.AdomdClient, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft.NET\ADOMD.NET\160\Microsoft.AnalysisServices.AdomdClient.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Task = System.Threading.Tasks.Task;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using Microsoft.AnalysisServices.AdomdClient;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
	{
		private static string _location;

		/// <summary>
		/// Main
		/// </summary>
		public void Main()
		{
			try
			{
				_location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
				string tabularConnectionString = settings["tabularConnectionString"];

				var empty = new ConcurrentDictionary<string, List<string>>();

				var semaphore = new SemaphoreSlim(Environment.ProcessorCount*2);
				var tasks = GetDatabaseNames(tabularConnectionString).OrderBy(s => s).Select(databaseName => Task.Run(() => {
					semaphore.Wait();
					try
					{
						empty[databaseName] = Process(tabularConnectionString, databaseName);
					}
					finally
					{
						semaphore.Release();
					}
				}));
				Task.WaitAll(tasks.ToArray());

				if (empty.Any(k => k.Value.Count > 0))
					SendMail($"{Environment.MachineName.ToUpper()} Missing Partition Data", string.Join("\n\n", empty.OrderBy(k => k.Key).Where(k => k.Value.Count > 0).Select(k => $"{k.Key}\n\t{string.Join("\n\t", k.Value)}")));

				Dts.TaskResult = (int)DTSExecResult.Success;
			}
			catch (Exception ex)
			{
				Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Process 
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="databaseName"></param>
		private List<string> Process(string tabularConnectionString, string databaseName)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				var database = server.Databases.FindByName(databaseName);
				var table = database.Model.Tables["ForecastObserved"];
				return table.Partitions.AsParallel().Where(p =>
				{
					var month = DateTime.ParseExact(p.Name, "yyyy-MM", null);
					using (var adomdConnection = new AdomdConnection($"{tabularConnectionString};Catalog={databaseName}"))
					{
						adomdConnection.Open();
						using (var adomdCommand = new AdomdCommand($"EVALUATE ROW(\"Count\", COALESCE(COUNTROWS(FILTER(ForecastObserved, [forecastTime] >= DATEVALUE(\"{month:yyyy-MM-dd}\") && [forecastTime] < DATEVALUE(\"{month.AddMonths(1):yyyy-MM-dd}\"))), 0))", adomdConnection))
						{
							using (var adomdDataReader = adomdCommand.ExecuteReader())
							{
								adomdDataReader.Read();
								return adomdDataReader.GetInt32(0) == 0;
							}
						}
					}
				}).OrderBy(t => t.Name).Select(p => $"{{\"database\": \"{database.Name}\", \"table\": \"{table.Name}\", \"partition\": \"{p.Name}\"}}").ToList();
					
			}
			catch (Exception ex)
			{
				Dts.Events.FireError(0, _location, $"{databaseName} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{databaseName} -> {tabularConnectionString}\n{ex}");
				throw;
			}
			finally
			{
				server.Disconnect();
			}
		}

		private List<string> GetDatabaseNames(string tabularConnectionString)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				return server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_")).Select(d => d.Name).ToList();
			}
			finally
			{
				server.Disconnect();
			}
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_eb97788c1c6343608c7bca9f6a486cbf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_eb97788c1c6343608c7bca9f6a486cbf</msb:DisplayName>
    <msb:ProjectId>{58C78483-8363-42D3-B172-865C7BDE368B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_eb97788c1c6343608c7bca9f6a486cbf.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_eb97788c1c6343608c7bca9f6a486cbf.dll">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
AnsTAAAEew8AAARvZQAACgJ7EwAABHsQAAAEAnsSAAAEAnsTAAAEew4AAAQCexMAAAR7EQAABAJ7
EgAABCgCAAAGb2YAAAreEgJ7EwAABHsPAAAEb2cAAAom3CoBEAAAAgAQADlJABIAAAAAGzAEAJUA
AAAFAAARA29gAAAKcmsCAHAUKGgAAAoKAnsUAAAEcnsCAHACexUAAAQoOgAACnNpAAAKCwdvagAA
CnKPAgBwBowbAAABEgAXKGsAAAqMGwAAAShsAAAKB3NtAAAKDAhvbgAACg0Jb28AAAomCRZvcAAA
Chb+ARME3h4JLAYJb3EAAArcCCwGCG9xAAAK3AcsBgdvcQAACtwRBCoAAAABKAAAAgBfABV0AAoA
AAAAAgBYACZ+AAoAAAAAAgAuAFqIAAoAAAAAEzAEAFEAAAAAAAAAHY0uAAABJRZy3gMAcKIlFwJ7
FgAABG9hAAAKoiUYcvwDAHCiJRkCexcAAARvYAAACqIlGnIYBABwoiUbA29gAAAKoiUccjwEAHCi
KHIAAAoqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAfAoAACN+AADoCgAA
NA0AACNTdHJpbmdzAAAAABwYAABEBAAAI1VTAGAcAAAQAAAAI0dVSUQAAABwHAAAXAYAACNCbG9i
AAAAAAAAAAIAAAFXFaIJCQsAAAD6ATMAFgAAAQAAAE4AAAALAAAAHgAAAB4AAAARAAAAcgAAABcA
AAAFAAAAAgAAAAMAAAAEAAAAFAAAAAEAAAAKAAAAAQAAAAcAAAARAAAAAACVBwEAAAAAAAYAmgUh
CgYAKQYhCgYA5gQOCg8AsAoAAAYAEwVgCAYAfQVgCAYAXgVgCAYAEAZgCAYAugVgCAYA0wVgCAYA
KgVgCAYARQWYBgoA7gUOBwoAMwQOBwYA/QvPBwYAwwjPBw4AZwQNCQ4AyQkNCQYAMgdtCwYAJAGz
AgYArgQhCgYAhgHPBwYArQGzAg4AuQgNCQYA1geHBgYAvAGaDAYAmQPPBxIAqQhNDBIA0wJNDBIA
PQlNDA4A/wINCRYAGQEhCgYAGwLPBxYApQQhCgYA8AHPBwYAygPPBxoAdAx0BwYAQwLPBwYAyQQO
CgYAnQlcCgYA0QgkCBoAkARTBxoA+gRTBxoATwQPCAYAfwzPBwYA2AbPBwoAQQcOBx4A/QqiAx4A
BQOiAwYA3wZZAiIA0Ak5CAYAYwNZAgYAPwPPByYAkglrCRYAigkhCiYAPgtrCSYA3QhrCSYAJgtr
CQYA9gCzAhYAIgMBCRYABAEBCQoAtQkOByoAyQnhAw4AgggNCQ4AYwcNCQ4AcggNCQ4AjQENCQ4A
lQgNCRYAGgMBCRYAMgEBCRYAKwEBCQYADgOaCwYAGg1gCA4A8AsNCSoAiwxBCgYAWQjPBwYAWwnP
BwYALQPPBwAAAABQAgAAAAABAAEAAQAQAPUHggI5AAEAAQAAABAAYwq/Cj0AAgAGAAABEABQC78K
sQAEAAoAAyEQAK8CAAA9AAUADQADARAAFwAAAD0ADgAXAAMBEAB4AAAAPQASABkAAwEQACwAAAA9
ABQAGwADARAApgAAAD0AFgAdAIMBEADoAAAAPQAYAB8AgwEQAA0CAAA9ABoAHwARAAUI8AERAOQH
PwQRACMERAQRAOACSQQ2AEwCTQQWAAEAUQQWAFsBWQQWANMBagQWAPcBWQQWACICagQWAI0AewQW
AEEAhAQWALsAjQQGAGMLlgQGAAEEmgQGAC0NngQGAL4G8AEGAIED8AEGAEIBqgQGAL4G8AEGAIED
8AEGAHAErgQGADkDsgQWAHEAtgQWAO8AyAQWAHEAtgQWAO8AtgQWAH8BtgQWAOkB2QQWABQC7wRQ
IAAAAACGAPsHBgABAEAjAAAAAIEAvAsFBQEAuCQAAAAAgQAHCw8FAwBIJQAAAACBAIQHGAUEAKgn
AAAAAIYY7wkGAAYAsCcAAAAAgxjvCQYABgC4JwAAAACTCJkJHgUGAOQnAAAAAJMICwQkBQYA6ycA
AAAAkwgXBCoFBgDzJwAAAACWCDIMMQUHAPonAAAAAIYY7wkGAAcAAigAAAAAkRj1CTYFBwAOKAAA
AACRGPUJNgUHALAnAAAAAIYY7wkGAAcAGigAAAAAgwAKADoFBwAdKAAAAACDAGQBPwUIAC4oAAAA
AIMA3AFNBQkAHSgAAAAAgwAAAj8FCgA3KAAAAACDACsCTQULAFsoAAAAAIMAlgBbBQwAYygAAAAA
gwBKAGEFDQB1KAAAAACDAMQAZwUOALAnAAAAAIYY7wkGAA8AfSgAAAAAgwDdAG0FDwCwJwAAAACG
GO8JBgAQAKQoAAAAAIMAOAIGABAAsCcAAAAAhhjvCQYAEAAcKQAAAACDAGMAcwUQALAnAAAAAIYY
7wkGABEA6CkAAAAAgwBxAVsFEQAAAAEAvgYAAAIAgQMAAAEAvgYAAAEABAwAAAIA8AIAAAEAUQYA
AAEA1QsAAAEANQcAAAEANQcAAAEANQcAAAEANQcAAAEA8wwAAAEA3gIAAAEA3gIAAAEAgQMAAAEA
/wgAAAEA/wgJAO8JAQARAO8JBgAZAO8JCgApAO8JEAAxAO8JEAA5AO8JEABBAO8JEABJAO8JEABR
AO8JEABZAO8JEABhAO8JEABpAO8JBgCpAO8JBgA5Ae8JBgBZAe8JFQBpAXEDJQBxAa0JKQBxAMQL
LQB5AfkKMwCBAb0HOQCJAUcGQABxAd4LRAB5ANYGKQCRAcIDTACZAe8JBgChAekMUgCZAVcGVwAh
AVEDYgCxAdUMawAMAIkEigAMACYMlwDJAYkEmwCxAfUMpQAUAIkEigAUACYMlwAcAPgC1gAkAPgC
7AAsAO8JBgBpAcIMAAHJAO8JAQA0AO8JCwHhAf4MEQE8AO8JCwHhAQwMOAHhAQYNWAGZAI0HawFE
AO8JCwHhASMNggFxAdcLTABMAO8JCwHhAc8DwAFxAQAI2QF5AT4MAQB5AcwL5AFxAd4L6gFxAScN
8AHxAeUJ8wFxAdcL/AGRAO8JBgD5ARMMEACRABgLEwIBAo4DGQKJADcHHwIJAu4KJQJUAL0HNgL5
AK0LPAIpAmkHQgJcAO8JCwEpAs8DYQJkAO8JCwEpAv4MggIpAgwMogIpAuIMvAL5ARsMBgDhAd0M
2wJsAO8JCwF0AO8JCwHhAeIMBAOxATAJGwN8AIkEigB8ACYMlwCxAfwJpQCEAIkEigCEACYMlwCM
APgC1gCUAPgCggPxAbIGkgNxAO8JBgB5AO8JBgAhARYNmwNBAe8JoQNhAe8JBgCcAEcGtAOkALgM
vwOcAA4NwwNRAmgDKQBZAmgDKQBxAeQGyANhAu8JCwGZAM0IzQPJAC0MBgAsAMYH1QPJAHkEvwPZ
AOUL6QPhAO8JEADhAPAHBgDZAFkL8wNxAd4L+QPpAO8JAATpAE0JBwTxAM4CDATxAFIBEARxAoEE
BgBxAdcLFQQpAHsAsgUuAAsAigUuABMAkwUuABsAsgUuACMAuwUuACsA5AUuADMA5AUuADsA6gUu
AEMAuwUuAEsA8wUuAFMA5AUuAFsADQZDAGMAVwZJAHsAsgVjAHMAVwaBAGsAVwajAGsAVwbDAGsA
VwbjAGsAVwYDAWsAVwYjAWsAVwZDAWsAVwZjAWsAVwYcAAMC0QIVA90DAwABAAQAAwAAAJ0JeQUA
ACsEfwUAADYMhQUCAAcAAwACAAgABQABAAkABQACAAoABwB6ALkAygDhAPUABAEwAXIBogErAlkC
egLuAvYCOANNA2IDcgOpA7kDBIAAAAEAAADOIs0rAAAAAAAAYwYAAAQAAAAAAAAAAAAAABsEpgIA
AAAAEAAAAAAAAAAAAAAAJATvBgAAAAAPAAAAAAAAAAAAAAAkBA0JAAAAAA8AAAAAAAAAAAAAACQE
TQwAAAAABAAAAAAAAAAAAAAAGwTVAwAAAAAEAAAAAAAAAAAAAAAbBM8HAAAAABAAAAAAAAAAAAAA
ACQEYwIAAAAABAAAAAAAAAAAAAAALQSECwAAAAAEAAAAAAAAAAAAAAA2BPAIAAAAAA8AAAAAAAAA
AAAAACQE4QMAAAAAAAAAAAEAAABtCgAABQACAAYAAgAHAAIACAACAAkAAgAKAAIACwACADcAXgBV
ACsBWQBSAVsAZgFhAJUBVQCyAWcAlQFZALIBhwBUAosAVAKPAJwCkQCcApMAzQKXAOkCZwDpAlkA
/gKdAM0CAAAAPD45X18xXzAAPE1haW4+Yl9fMV8wADw+Y19fRGlzcGxheUNsYXNzMV8wADw+Y19f
RGlzcGxheUNsYXNzMl8wADw+OV9fM18wADxHZXREYXRhYmFzZU5hbWVzPmJfXzNfMAA8UHJvY2Vz
cz5iX18wADw+cF9fMAA8PmNfX0Rpc3BsYXlDbGFzczFfMQA8PjlfXzJfMQA8UHJvY2Vzcz5iX18y
XzEAPD5jX19EaXNwbGF5Q2xhc3MyXzEAPD45X18zXzEAPEdldERhdGFiYXNlTmFtZXM+Yl9fM18x
ADxNYWluPmJfXzEAPD5vX18xADw+cF9fMQBJRW51bWVyYWJsZWAxAElPcmRlcmVkRW51bWVyYWJs
ZWAxAENhbGxTaXRlYDEATGlzdGAxAE9yZGVyZWRQYXJhbGxlbFF1ZXJ5YDEAQ1MkPD44X19sb2Nh
bHMxAEdldEludDMyADw+OV9fMV8yADxNYWluPmJfXzFfMgA8UHJvY2Vzcz5iX18yADw+cF9fMgBG
dW5jYDIATmFtZWRNZXRhZGF0YU9iamVjdENvbGxlY3Rpb25gMgBLZXlWYWx1ZVBhaXJgMgBDb25j
dXJyZW50RGljdGlvbmFyeWAyADw+OV9fMV8zADxNYWluPmJfXzFfMwA8PnBfXzMARnVuY2AzADw+
OV9fMV80ADxNYWluPmJfXzFfNAA8Pm9fXzQAPD5wX180AEZ1bmNgNAA8PjlfXzFfNQA8TWFpbj5i
X18xXzUAPE1haW4+Yl9fNgBBY3Rpb25gNgA8PjkAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEz
YgBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZABBZG9tZENvbW1h
bmQAZGVmYXVsdEluc3RhbmNlAG1lc3NhZ2UASW52b2tlAFRhYmxlAFZhcmlhYmxlAElFbnVtZXJh
YmxlAFBhcmFsbGVsRW51bWVyYWJsZQBJRGlzcG9zYWJsZQB0YWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAGdldF9OYW1lAGdldF9NYWNoaW5lTmFtZQBkYXRhYmFz
ZU5hbWUARmluZEJ5TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AENvbWJpbmUAVHlwZQBXaGVyZQBTeXN0ZW0uQ29yZQBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNl
cy5Db3JlAHNlbWFwaG9yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERhdGFi
YXNlAGRhdGFiYXNlAFJlbGVhc2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q2FsbFNpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBTVF9lYjk3Nzg4
YzFjNjM0MzYwOGM3YmNhOWY2YTQ4NmNiZgBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcARmlyZVdhcm5pbmcAdGFidWxhckNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcA
UGF0aABTdGFydHNXaXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAGdldF9Nb2RlbABTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAQXNQYXJhbGxlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1h
aWwAV2FpdEFsbABTVF9lYjk3Nzg4YzFjNjM0MzYwOGM3YmNhOWY2YTQ4NmNiZi5kbGwAZ2V0X0l0
ZW0Ac2V0X0l0ZW0AU3lzdGVtAFNlbWFwaG9yZVNsaW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRN
YWluAEpvaW4AX2xvY2F0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AQWN0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAFRhYmxlQ29sbGVjdGlvbgBEYXRhYmFzZUNvbGxlY3Rpb24AUGFydGl0aW9uQ29sbGVjdGlv
bgBBZG9tZENvbm5lY3Rpb24AUGFydGl0aW9uAEV4Y2VwdGlvbgBSdW4AQ3VsdHVyZUluZm8AQ1No
YXJwQXJndW1lbnRJbmZvAE1pY3Jvc29mdC5DU2hhcnAAU3lzdGVtLkxpbnEATWljcm9zb2Z0LkFu
YWx5c2lzU2VydmljZXMuVGFidWxhcgBJbnZva2VNZW1iZXIAQWRvbWREYXRhUmVhZGVyAEV4ZWN1
dGVSZWFkZXIASUZvcm1hdFByb3ZpZGVyAE1pY3Jvc29mdC5DU2hhcnAuUnVudGltZUJpbmRlcgBD
YWxsU2l0ZUJpbmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRvVXBwZXIARXZlbnRzT2JqZWN0V3Jh
cHBlcgBTZXJ2ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBJ
bnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNU
XzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEz
Yi5Qcm9wZXJ0aWVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxlcwBHZXREYXRhYmFzZU5hbWVzAGdl
dF9EYXRhYmFzZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0
dGluZ3MAQWRkTW9udGhzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAFN5c3RlbS5X
ZWIuRXh0ZW5zaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcnRpdGlvbnMAUHJvY2VzcwBn
ZXRfRHRzAGdldF9FdmVudHMAQ29uY2F0AEZvcm1hdABQYXJzZUV4YWN0AE5hbWVkTWV0YWRhdGFP
YmplY3QAc3ViamVjdABTZWxlY3QAQ29ubmVjdABEaXNjb25uZWN0AFRhcmdldABXYWl0AGdldF9E
ZWZhdWx0AHNldF9UYXNrUmVzdWx0AE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzLkFkb21kQ2xp
ZW50AFNtdHBDbGllbnQARW52aXJvbm1lbnQATmFtZWRDb21wb25lbnQAU3lzdGVtLkNvbGxlY3Rp
b25zLkNvbmN1cnJlbnQAZ2V0X0NvdW50AGdldF9Qcm9jZXNzb3JDb3VudABDb252ZXJ0AENhc3QA
VG9MaXN0AFJlYWRBbGxUZXh0AEdldEluZGV4AE9yZGVyQnkAVG9BcnJheQBnZXRfS2V5AGdldF9B
c3NlbWJseQBBbnkARW1wdHkAZW1wdHkAAAAXewAwAH0AOgB7ADEAfQA6AHsAMgB9AAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBr
AE4AYQBtAGUAAC0kAFAAcgBvAGoAZQBjAHQAOgA6AFMAZQB0AHQAaQBuAGcAcwBQAGEAdABoAAAb
UwBlAHQAdABpAG4AZwBzAC4AagBzAG8AbgAAL3QAYQBiAHUAbABhAHIAQwBvAG4AbgBlAGMAdABp
AG8AbgBTAHQAcgBpAG4AZwAALyAATQBpAHMAcwBpAG4AZwAgAFAAYQByAHQAaQB0AGkAbwBuACAA
RABhAHQAYQAABQoACgAAB3sAMAB9AAATRQBSAFIATwBSACAALQAgACgAAQMpAAAhRgBvAHIAZQBj
AGEAcwB0AE8AYgBzAGUAcgB2AGUAZAAAHXsAMAB9ACAALQA+ACAAewAxAH0ACgB7ADIAfQABCVMA
ZQBuAGQAABVzAG0AdABwAFMAZQByAHYAZQByAAAhZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBl
AHMAcwAAIXQAbwBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUA
MQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAUKAAkAABtWAGUAcgBpAGYA
aQBjAGEAdABpAG8AbgBfAAAPeQB5AHkAeQAtAE0ATQABEzsAQwBhAHQAYQBsAG8AZwA9AACBTUUA
VgBBAEwAVQBBAFQARQAgAFIATwBXACgAIgBDAG8AdQBuAHQAIgAsACAAQwBPAEEATABFAFMAQwBF
ACgAQwBPAFUATgBUAFIATwBXAFMAKABGAEkATABUAEUAUgAoAEYAbwByAGUAYwBhAHMAdABPAGIA
cwBlAHIAdgBlAGQALAAgAFsAZgBvAHIAZQBjAGEAcwB0AFQAaQBtAGUAXQAgAD4APQAgAEQAQQBU
AEUAVgBBAEwAVQBFACgAIgB7ADAAOgB5AHkAeQB5AC0ATQBNAC0AZABkAH0AIgApACAAJgAmACAA
WwBmAG8AcgBlAGMAYQBzAHQAVABpAG0AZQBdACAAPAAgAEQAQQBUAEUAVgBBAEwAVQBFACgAIgB7
ADEAOgB5AHkAeQB5AC0ATQBNAC0AZABkAH0AIgApACkAKQAsACAAMAApACkAAR17ACIAZABhAHQA
YQBiAGEAcwBlACIAOgAgACIAABsiACwAIAAiAHQAYQBiAGwAZQAiADoAIAAiAAAjIgAsACAAIgBw
AGEAcgB0AGkAdABpAG8AbgAiADoAIAAiAAAFIgB9AAAAACK8bp9xCmdJpPgqN/3PdH4ABCABAQgD
IAABBSABARERBCABAQ4GIAEBEYCpCAcEEhgOHBJBAwAADgMgAA4FIAASgL0FIAASgMEGIAESgMUc
AyAAHAcABA4OHBwcBQACDg4OBAABDg4GMAEBHgAOAwoBHAgAARKAkRGA1Q4AAxKA3RGA4RKAkRKA
kQ8VEoCBARUSgI0DEoCJHA4MAAEVEoCBARMAEoDdAwYTAAkAAhKA5RGA6Q4TAAMSgN0RgOESgJEV
EoDtARKA5RAVEoCBARUSgIUEEoCJHA4cCxUSgIUEEoCJHA4cCiADEwMTABMBEwIKFRKAjQMSgIkc
DgggAhMCEwATAQoVEmkCDhUSUQEOAwAACAYVElkCDg4FIAIBHBgZEAICFRKA9QEeABUSgO0BHgAV
ElkCHgAeAQQKAg4OBxUSWQIOEk0ZEAICFRKA7QEeARUSgO0BHgAVElkCHgAeAQUKAg4STQ0QAQEd
HgAVEoDtAR4ABAoBEk0GAAEBHRJNDxUSWQIVEV0CDhUSUQEOAhIQAQICFRKA7QEeABUSWQIeAAIM
CgEVEV0CDhUSUQEODxUSWQIVEV0CDhUSUQEODg0KAhURXQIOFRJRAQ4OGBABAhUSgO0BHgAVEoDt
AR4AFRJZAh4AAgoAAg4OFRKA7QEOBSAAEoD5BQACDg4cAgYOCCAFAggODg4IBgADDg4ODg8HBRIg
EkkSJBUSUQEOEkEFIAASgQEFIAESRQ4FIAASgQUFIAASgQkKFRKBDQISfRKBBQUgARMADgUgABKB
EREQAQEVEoEZAR4AFRKA7QEeAAQKARJhBxUSWQISYQIYEAECFRKBGQEeABUSgRkBHgAVElkCHgAC
BxUSWQISYQ4ZEAICFRKBHQEeABUSgRkBHgAVElkCHgAeAQUKAhJhDhkQAgIVEoEZAR4BFRKBGQEe
ABUSWQIeAB4BEBABARUSUQEeABUSgRkBHgADCgEOCQcCEkkVElEBDg0QAQEVEoDtAR4AEoEhBAoB
EkUHFRJZAhJFAgcVElkCEkUOBQoCEkUOEBABARUSUQEeABUSgO0BHgAFBwIcEkEcAAUSgN0RgOEO
FRKA7QESgJESgJEVEoDtARKA5RQVEoCBARUSgJkGEoCJEoCVHBwODhQVEoCBARUSgIUEEoCJEoCR
HBKAlQ8VEoCFBBKAiRKAkRwSgJUPFRKAmQYSgIkSgJUcHA4ODyAGARMAEwETAhMDEwQTBQggBQEI
Dg4OCAUgABKBJQcgAgEOEoElChURXQIOFRJRAQ4EIAATAQUVElEBDgMgAAgEIAATAAQgAQIOBwAB
Ek0SgTEHIAIBEwATAQsHBRFtEnESdRJ5AgkAAxFtDg4SgTUFIAERbQgGAAMODhwcBiACAQ4ScQQg
ABJ5AyAAAgQgAQgIBQABDh0OCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6BAYS
gKEEBhKApQMGEhADBhIUBwYVElkCDg4QBhUSWQIVEV0CDhUSUQEOAhAGFRJZAhURXQIOFRJRAQ4O
CAYVElkCEmEOCAYVElkCEkUCCAYVElkCEkUOAwYSCAMGEmULBhUSaQIOFRJRAQ4DBhIYAwYSRQMG
En0RBhUSgIEBFRKAhQQSgIkcDhwQBhUSgIEBFRKAjQMSgIkcDhUGFRKAgQEVEoCFBBKAiRKAkRwS
gJUVBhUSgIEBFRKAmQYSgIkSgJUcHA4OCSACFRJRAQ4ODgggARUSUQEODgUgAgEODgUAABKAoQUA
ABKApQYAAQESgKUEAAASEAMAAAEEIAEODg0gAQIVEV0CDhUSUQEODSABDhURXQIOFRJRAQ4FIAEO
EmEFIAECEkUFIAEOEkUFIAESTQ4FIAECEmEFCAASgKEFCAASgKUECAASEAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNTg5NDUxNTAxYzBhNGRl
N2IwZTIyY2E1NmQxYzgxM2IAAAUBAAAAAAgBAANUVkEAABkBABRDb3B5cmlnaHQgQCBUVkEgMjAy
NAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0TQAAAAAAAAAAAAAOTgAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAJgQAAAAA
AAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AM0rziIAAAEAzSvOIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBIYDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AFQAVgBBAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADUA
OAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAx
ADMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADkAMQAwAC4A
MQAxADIAMQAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUAYgA5
ADcANwA4ADgAYwAxAGMANgAzADQAMwA2ADAAOABjADcAYgBjAGEAOQBmADYAYQA0ADgANgBjAGIA
ZgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAVABWAEEAIAAyADAAMgA0AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBlAGIAOQA3ADcAOAA4AGMAMQBjADYAMwA0ADMANgAwADgAYwA3AGIAYwBhADkA
ZgA2AGEANAA4ADYAYwBiAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUA
NgBkADEAYwA4ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADkAMQAwAC4AMQAxADIAMQAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADkAMQAwAC4AMQAxADIAMQAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACA+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{4e6b99fc-19ee-4f34-bc50-7101e6970b40}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_bfca5fc1f2354faca5c43958c60d9504"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath"
          ReadWriteVariables="User::Execute">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                
                Execute(settings);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Execute
		/// </summary>
		/// <param name="settings"></param>
		/// <returns></returns>
		private void Execute(dynamic settings)
        {
             Dts.Variables["User::Execute"].Value = settings["execute"];
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_bfca5fc1f2354faca5c43958c60d9504</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:DisplayName>
    <msb:ProjectId>{27DC566E-74A9-4D67-8A1E-EA731ECF6D6A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_bfca5fc1f2354faca5c43958c60d9504.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.dll">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
AAAFAGwAAAC4BQAAI34AACQGAAAICAAAI1N0cmluZ3MAAAAALA4AAOABAAAjVVMADBAAABAAAAAj
R1VJRAAAABwQAADsAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAAMAAAAAcA
AAALAAAACwAAAAQAAAA6AAAAFAAAAAEAAAACAAAAAwAAAAQAAAAIAAAAAQAAAAcAAAABAAAAAwAA
AAEAAAAAALkEAQAAAAAABgAhA2QGBgCwA2QGBgBtAlEGDwDYBgAABgCaAlwFBgAEA1wFBgDlAlwF
BgCXA1wFBgBBA1wFBgBaA1wFBgCxAlwFBgDMAvwDCgB1A08ECgDLAU8EBgCXB+oEBgBuBeoEDgAk
AmQGBgA1AmQGDgAkAGQGBgBLAOoEDgAbAmQGBgB/AOoEBgCSAeoEEgDIB6AEBgCGAOoEBgBQAlEG
BgDnBYQGBgB4BScFEgAGAooEEgCBAooEEgDnARIFBgDTB+oEBgAkBOoECgB4BE8EFgAaB2oBFgAo
AWoBGgATBjwFBgArBJgABgBVAZgABgAxAeoEHgCEBbUFHgAkB7UFHgDcBbUFDgDUBWQGHgA8B7UF
BgAWAO4ACgD/BU8EBgD4B1wFAAAAAI8AAAAAAAEAAQABABAA/QTBADkAAQABAAAAEACLBucGPQAC
AAUAAAEQAE4H5wZ9AAQACQCDARAACAAAAD0ABQAMAIMBEAAvAAAAPQAGAAwAgwEQAD0AAAA9AAcA
DAABAAgFyQARAPEEnAERALsBoAERAAkBpAEWAAEAqAEWAAEAtwEWAAEAtwEWAA8AtwEWADYAtwEW
AEQAxgEWAHgA1wFQIAAAAACGAAMFBgABALwhAAAAAIEAzgMSAQEAOCIAAAAAgQCwBOkBAgCcJAAA
AACGGDIGBgAEAKQkAAAAAIMYMgYGAAQArCQAAAAAkwjjBe8BBADYJAAAAACTCKMB9AEEAN8kAAAA
AJMIrwH5AQQA5yQAAAAAlgitB/8BBQDuJAAAAACGGDIGBgAFAPYkAAAAAJEYOAYEAgUAAAABAFcH
AAABAJ4HAAACABkBAAABAOoDCQAyBgEAEQAyBgYAGQAyBgoAKQAyBhAAMQAyBhAAOQAyBhAAQQAy
BhAASQAyBhAAUQAyBhAAWQAyBhAAYQAyBhAAaQAyBgYAiQAyBgYAkQAyBgYA0QAyBgYA8QAyBhUA
AQFaASEACQH3BSUAcQB2BykAEQEWBy8AGQHhBDUAIQHWAzwACQGQB0AAKQEyBgYAeQAiBCUAMQGK
AUgAOQHfB04AKQHwA1MAuQBDAV4ASQH/AWYAWQGoBXAADAD/AZkADACmB6UAFAAhAbMAEQG5BwEA
EQF+B70ACQGQB8MACQEBCMkAeQEoBswACQGJB9UAWQHrB9wAHAD/AZkAHACmB6UAJAAhAQcBIQHg
AxIBLAD/AZkALACmB6UAWQE/BtwANAD/AZkANACmB6UAPAAhAQcBRAAhAVEBeQEWBGEBcQAyBgYA
eQAyBgYAuQD0B2oB2QAyBnAB+QAyBgYAJABrAOQCKQCDAD8CLgALABcCLgATACACLgAbAD8CLgAj
AEgCLgArAHECLgAzAHECLgA7AHcCLgBDAEgCLgBLAIACLgBTAHECLgBbAJoCQwBjAOQCSQCDAD8C
YwB7AOQCgQBzAOQCowBzAOQCwwBzAOQC4wBzAOQCGwADAAEABAADAAAA5wUIAgAAwwENAgAAsQcS
AgIABgADAAIABwAFAAEACAAFAAIACQAHAIsAqQDvAP0AFwEoATgBRAEEgAAAAQAAAIIiz1EAAAAA
AABUAAAABAAAAAAAAAAAAAAAeAHlAAAAAAAQAAAAAAAAAAAAAACBATAEAAAAAAQAAAAAAAAAAAAA
AHgBlwEAAAAABAAAAAAAAAAAAAAAeAHqBAAAAAAQAAAAAAAAAAAAAACBAaIAAAAAAAQAAAAAAAAA
AAAAAIoBYAcAAAAABAAAAAAAAAAAAAAAkwGXBQAAAAAAAAAAAQAAAJUGAAAFAAIABgACAAcAAgA5
AFoAAAAAPD5wX18wADw+b19fMQA8PnBfXzEASUVudW1lcmFibGVgMQBDYWxsU2l0ZWAxADw+b19f
MgA8PnBfXzIAPD5vX18zADw+cF9fMwBBY3Rpb25gMwBTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5
NThjNjBkOTUwNAA8PnBfXzQARnVuY2A0AEFjdGlvbmA2ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQx
YzgxM2IAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNl
AG1lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEZpbGUAZ2V0X01hY2hpbmVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
Q29tYmluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENhbGxTaXRlAER5bmFtaWNBdHRyaWJ1dGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJuaW5nAFRvU3RyaW5nAFBhdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5O
ZXQuTWFpbABTZW5kTWFpbABTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5NThjNjBkOTUwNC5kbGwA
Z2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AX2xvY2F0aW9uAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAENTaGFycEFy
Z3VtZW50SW5mbwBNaWNyb3NvZnQuQ1NoYXJwAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJw
LlJ1bnRpbWVCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVy
AEV2ZW50c09iamVjdFdyYXBwZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAC5jdG9y
AC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdi
MGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzAGdldF9W
YXJpYWJsZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0dGlu
Z3MAc2V0dGluZ3MAU3lzdGVtLldlYi5FeHRlbnNpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25j
YXQARm9ybWF0AE9iamVjdABzdWJqZWN0AFRhcmdldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3Vs
dABTbXRwQ2xpZW50AEVudmlyb25tZW50AFJlYWRBbGxUZXh0AEdldEluZGV4AGdldF9Bc3NlbWJs
eQBFbXB0eQAAABd7ADAAfQA6AHsAMQB9ADoAewAyAH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMA
awBhAGcAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUABy
AG8AagBlAGMAdAA6ADoAUwBlAHQAdABpAG4AZwBzAFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMA
LgBqAHMAbwBuAAAPRQB4AGUAYwB1AHQAZQAAB3sAMAB9AAATRQBSAFIATwBSACAALQAgACgAAQMp
AAAbVQBzAGUAcgA6ADoARQB4AGUAYwB1AHQAZQAAD2UAeABlAGMAdQB0AGUAAAlTAGUAbgBkAAAV
cwBtAHQAcABTAGUAcgB2AGUAcgAAIWYAcgBvAG0ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAACF0
AG8ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAZQBzAABxUwBUAF8ANQA4ADkANAA1ADEANQAwADEA
YwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAH68GfRriCU6qG8tHjWgcQQAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERdQUHAhwSQQMAAA4DIAAOBSAAEoCJBSAAEoCNBiABEoCRHAMgABwH
AAQODhwcHAUAAg4ODgQAAQ4OBjABAR4ADgMKARwHAAESXRGAoQkAAhKApRGAqQ4aAAUSgLERgLUO
FRKAuQESXRJdFRKAuQESgKUNFRJNARUSUQMSVRIIHAsAARUSTQETABKAsQMGEwAJFRJRAxJVEggc
CSADARMAEwETAgUgABKAvQUAAg4OHAIGDgggBQIIDg4OCAYAAw4ODg4SAAMSgLERgLUSXRUSgLkB
EoClDRUSTQEVElkEElUcDhwJFRJZBBJVHA4cCiADEwMTABMBEwIEIAEBHBAVEk0BFRJlBhJVEmEc
HA4ODxUSTQEVElkEElUSXRwSYQsVElkEElUSXRwSYQwVEmUGElUSYRwcDg4PIAYBEwATARMCEwMT
BBMFCCAFAQgODg4IBSAAEoDBByACAQ4SgMEIt3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUIsD9f
fxHVCjoDBhJtAwYScQMGEhAOBhUSTQEVElEDElUSCBwOBhUSTQEVElkEElUcDhwQBhUSTQEVElkE
ElUSXRwSYREGFRJNARUSZQYSVRJhHBwODgUgAgEODgQAABJtBAAAEnEFAAEBEnEEAAASEAMAAAEE
CAASbQQIABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAAAFAQAAAAAIAQAD
VFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA7DgAAAAAAAAAAAAABjkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPg4AAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAz1GCIgAAAQDPUYIiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAVABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUA
NgBkADEAYwA4ADEAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAOAAzADQALgAyADAAOQA0ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYgBmAGMAYQA1AGYAYwAxAGYAMgAzADUANABmAGEAYwBhADUAYwA0ADMAOQA1ADgAYwA2
ADAAZAA5ADUAMAA0AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfAGIAZgBjAGEANQBmAGMAMQBmADIAMwA1ADQAZgBhAGMAYQA1
AGMANAAzADkANQA4AGMANgAwAGQAOQA1ADAANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABl
ADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgAOAAzADQALgAyADAAOQA0ADMAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAAzADQALgAyADAAOQA0ADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAGDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProcessCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{B6E07C53-B81E-4748-9710-C370A55DE0A4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProcessCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_589451501c0a4de7b0e22ca56d1c813b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_589451501c0a4de7b0e22ca56d1c813b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Microsoft.AnalysisServices.Tabular;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Globalization;
using ST_589451501c0a4de7b0e22ca56d1c813b.Properties;
using System.IO.Compression;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
	[SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
	{
		private const int MaxRetries = 5;

		private const int ReprocessDays = 4 * 7;

		private static string _location;

		/// <summary>
		/// Main
		/// </summary>
		public void Main()
		{
			try
			{
				_location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
				var timingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Timings.json");

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
				string tabularConnectionString = settings["tabularConnectionString"];

				ConcurrentDictionary<string, int> timings;
				try
				{
					timings = File.Exists(timingsPath) ? new JavaScriptSerializer().Deserialize<ConcurrentDictionary<string, int>>(File.ReadAllText(timingsPath)) ?? new ConcurrentDictionary<string, int>() : new ConcurrentDictionary<string, int>();
				}
				catch (Exception ex)
				{
					Dts.Events.FireWarning(0, _location, $"Timings -> {tabularConnectionString}\n{ex}", string.Empty, 0);
					timings = new ConcurrentDictionary<string, int>();
				}
				int parallelPartitions = settings["parallelPartitions"];
				string acquisitionType = settings["acquisitionType"];
				string csvPath = settings["cavPath"];
				var semaphore = new SemaphoreSlim(settings["threads"]);
				var threads = new List<Thread>();

				foreach (var databaseName in GetDatabaseNames(tabularConnectionString).OrderByDescending(d => timings.TryGetValue(d, out var t) ? t : 0))
				{
					var thread = new Thread(() =>
					{
						semaphore.Wait();
						try
						{
							var then = DateTime.Now;
							var reprocessDays = settings["reprocessDays"][databaseName] ?? ReprocessDays;
							Process(tabularConnectionString, databaseName, parallelPartitions, reprocessDays, acquisitionType, csvPath);
							timings[databaseName] = (int)(DateTime.Now - then).TotalSeconds;
						}
						finally
						{
							semaphore.Release();
						}
					});
					thread.Start();
					threads.Add(thread);
				}

				foreach (var thread in threads)
				{
					thread.Join();
				}

				File.WriteAllText(timingsPath, new JavaScriptSerializer().Serialize(timings));

				Dts.TaskResult = (int)DTSExecResult.Success;
			}
			catch (Exception ex)
			{
				Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Process 
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="databaseName"></param>
		/// <param name="parallelPartitions"></param>
		/// <param name="reprocessDays"></param>
		private void Process(string tabularConnectionString, string databaseName, int parallelPartitions, int reprocessDays, string acquisitionType, string csvPath)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				var database = server.Databases.FindByName(databaseName);
				ProcessDimensions(database);
				ProcessFacts(database, parallelPartitions, reprocessDays, acquisitionType, csvPath);
			}
			catch (Exception ex)
			{
				Dts.Events.FireError(0, _location, $"{databaseName} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{databaseName} -> {tabularConnectionString}\n{ex}");
				throw;
			}
			finally
			{
				server.Disconnect();
			}
		}

		/// <summary>
		/// Process
		/// </summary>
		/// <param name="database"></param>
		/// <returns></returns>
		private void ProcessDimensions(Database database)
		{
			var objects = database.Model.Tables.Where(t => t.Partitions.Count == 1).Select(t => $"{{\"database\": \"{database.Name}\", \"table\": \"{t.Name}\"}}").ToList();
			ProcessObjects(database, objects);
		}

		/// <summary>
		/// ProcessFacts
		/// </summary>
		/// <param name="database">The database.</param>
		/// <param name="parallelPartitions">The parallel partitions.</param>
		/// <param name="reprocessDays">The reprocess days.</param>
		/// <param name="acquisitionType">Type of the acquisition.</param>
		/// <param name="csvPath">The CSV path.</param>
		private void ProcessFacts(Database database, int parallelPartitions, int reprocessDays, string acquisitionType, string csvPath)
		{
			var objects = database.Model.Tables.
				Where(t => t.Partitions.Count > 1).
				SelectMany(t => t.Partitions.
					Where(p => p.State != ObjectState.Ready || p.RefreshedTime < DateTime.ParseExact(p.Name, "yyyy-MM", CultureInfo.InvariantCulture).AddMonths(1).AddDays(reprocessDays)).
					Select(p => (p.Name, Partition: $"{{\"database\": \"{database.Name}\", \"table\": \"{t.Name}\", \"partition\": \"{p.Name}\"}}")));

			foreach (var group in objects.Select((o, i) => new { o, i }).GroupBy(o => o.i / parallelPartitions).Select(g => g.Select(s => s.o).ToList()))
			{
				if (acquisitionType == "csv")
				{
					var study = database.Name.Replace("Verification_", "");
					var dataPath = Path.Combine(csvPath, "data", study, "ForecastObserved");
					try
					{
						foreach (var p in group)
							ZipFile.ExtractToDirectory(Path.Combine(dataPath, $"{study}_ForecastObserved_{p.Name}.csv.zip"), dataPath);
						ProcessObjects(database, group.Select(s => s.Partition).ToList());
					}
					finally
					{
						foreach (var p in group)
						{
							try { File.Delete(Path.Combine(dataPath, $"{study}_ForecastObserved_{p.Name}.csv")); } catch (IOException) { /*IGNORE*/ }
						}
					}
				}
				else
				{
					ProcessObjects(database, group.Select(s => s.Partition).ToList());
				}
			}
		}

		/// <summary>
		/// ProcessObjects
		/// var command = $"{{\"refresh\": {{\"type\": \"full\", \"objects\": [{string.Join(",", objects)}]}}}}";
		/// </summary>
		/// <param name="objects"></param>
		/// <param name="database"></param>
		private void ProcessObjects(Database database, List<string> objects)
		{
			for (int retry = 1; retry <= MaxRetries; retry++)
			{
				try
				{
					var operations = string.Join(",", objects.Select(p => $"{{\"refresh\": {{\"type\": \"full\", \"objects\": [{p}]}}}}"));
					var command = $"{{\"sequence\": {{\"maxParallelism\": {objects.Count},\"operations\": [{operations}]}}}}";

					var fireAgain = true;
					Dts.Events.FireInformation(0, _location, $"EXECUTE:\n{database.Name} -> {database.Parent.ConnectionString}\n{command}", string.Empty, 0, ref fireAgain);

					var result = database.Parent.Execute(command);

					if (result.ContainsErrors)
						throw new Exception($"{database.Name} -> {database.Parent.ConnectionString}\n{command}\n{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}");

					Dts.Events.FireInformation(0, _location, $"COMPLETE:\n{database.Name} -> {database.Parent.ConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
					break;
				}
				catch (Exception ex)
				{
					if (retry >= MaxRetries)
					{
						Dts.Events.FireError(0, _location, $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}", string.Empty, 0);
						SendMail($"ERROR - ({_location})", $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}");
						throw;
					}
					else
					{
						Dts.Events.FireWarning(0, _location, $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}", string.Empty, 0);
						SendMail($"WARNING - ({_location})", $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}");
					}
					Thread.Sleep(1000 * 30);
				}
			}
		}

		private List<string> GetDatabaseNames(string tabularConnectionString)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				return server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_")).Select(d => d.Name).ToList();
			}
			finally
			{
				server.Disconnect();
			}
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:DisplayName>
    <msb:ProjectId>{3B40AA29-CCAC-4FF3-877D-4596A22C95CD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_589451501c0a4de7b0e22ca56d1c813b.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.dll">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
AgAAABcAAAAAACAKAQAAAAAABgAOCFwNBgCdCFwNBgAMBzgNDwDrDQAABgBUB0MLBgDWB0MLBgC3
B0MLBgCECEMLBgAuCEMLBgBHCEMLBgBrB0MLBgCGBxgJBgDUBlwNBgDYD3QKBgB7BjgNBgAgBzgN
BgCfBzgNCgBiCKwJCgAUBqwJBgDkAUcEBgBiBPUIBgDDC3QKBgDWAUcEBgBmAnQKUwAODQAADgBI
BjsMDgDZDDsMBgBtAnQKBgDBC+0DEgCiC3wNDgDEBDsMBgDzB1wNBgDfAnQKFgB6AhkMEgAZEHwN
BgCVAUcEEgCpBHwNBgChAnAQBgB7CvUIFgDDBlwNBgBaBXQKBgChCnQKDgC3CzsMFgC4AVwNBgAL
A3QKFgC6BlwNBgCWBXQKBgCrA3QKGgAzEAcKBgBYA3QKBgDvBjgNBgCtDJcNBgDjC/8KGgCSBvEJ
GgA7B/EJGgAwBuoKBgDDAUcEBgBtCXQKBgBrDHQKBgA+EHQKCgDfCawJHgBQDmMFHgDKBGMFBgB3
Ce0DIgDgDBQLBgASBe0DBgDrBHQKJgCiDHsMFgCaDFwNJgCRDnsMJgDvC3sMJgB5DnsMCgDFDKwJ
BgAJAnQKFgDUBBkMFgCjARkMBgCYEPUIBgD/DAAPBgDfBHQKEgDZDK0FDgB7CzsMDgABCjsMDgBr
CzsMEgBKEHwNKgAPBboKBgDTBAAPBgD3EEMLDgCOCzsMDgCGAjsMEgBVC3wNDgDLDzsMDgCnBjsM
AAAAAOQDAAAAAAEAAQAAARAAUAIAADkAAQABAAEAEACqChYETQADAAcAAAAQAJ4NEg45AAYADwAA
ARAAqw4SDuEACAATAAMhEABDBAAAOQAJABYAAwEQAAkAAAA5ABYAJAADARAA7AAAADkAHwAmAAMB
EABBAAAAOQAhACgAAwEQAHQAAAA5ACIAKgADARAAAQEAADkAJwAuAIMBEADRAgAAOQApADAAgwEQ
ANYDAAA5ADYAMAAhAHkEMQAhAG0ENQBRgAcOYwdRgJYPYwcRANAKlwERAIkKZgcRAO8FawcRAI0E
cAc2ALQDdAcWAB4AeAcWAFYAeAcWAOYCgQcWAGEDmgcWADMDsQcWALgD0gcWAIYD0gcWAIkA3wcW
ABYB5wcWAA8C+AcWAKkAAggWADYBCwgGAMcOFAgGAKMOGAgGAM0FIQgGALQOJggGAFMJlwEGACIP
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
BAEZDfEB0QG1CssEDAGOENwE0QBZEOAEgQI+CXYA0QGyD+UESQLaCusEgQK7CPYE8QA1Dz4CWQKs
EPwEFAEZDfEBHAEZDfEBsQAZDRAAqQACDDkFJAEZDfEBLAEZDfEBIQJeDGkFNAFqBgwBNAEBEDEA
PAFqBgwBPAEBEDEARAG9BFQBTAG9BNAFmQAZDQYAeQHzEOAFoQEZDeYFwQEZDQYA+QATD+4FVAGO
ENwEXAEZDQsGZAEZDfEBXAHdCywC9AC4AjUAGQH6DUYGKQHNC3YA0QF8CVIGVADNCFsGOQEIEAYA
SQHaEG4GbAFqBgwBbAEBEDEAdAG9BJsGSQE0C68GUQFLDbsGVABRCgsGOQFaBtwE2QIXBXYAfAEZ
DfEBhAEZDfEBWQFxBvsGWQFIBQEHqQH/BQcHSQHADw0HSQG9DhgHSQGODx8HSQGVCiYHXAGHCTAH
9AAZDQsGCAAMAFkHCAAQAF4HIQBrAOAKLgALAA4KLgATABcKLgAbADYKLgAjAD8KLgArAGgKLgAz
AGgKLgA7AG4KLgBDAD8KLgBLAHcKLgBTAGgKLgBbAJEKQQBrAOAKQwBjANsKYABzANsKYwB7ANsK
aQCbADYKgABzANsKgwCTANsKiQCbADYKoABzANsKwABzANsKwwBjANsK4wBjANsKAQFjANsKAwFj
ANsKIwFjANsKQwFjANsKYwFjANsKgQGDAOkKgwFjANsKoQGDAOkKowFjANsKwQGDAOkK4QGDABAL
AQKDABALBAODABALIQOLANsKJAODABALZAODABALhAODABALpAODABALxAODABAL5AODABALBASD
ABALwQSDABALBAWDABALZAWDABALhAWDABALOQBsAIcAcwKIAgEDtAQ+BWMFVwZkBr8G9QYCAAEA
BAADAAUABQAAAAAM8wkAAIsJ+AkAAK0M/QkAAAwGAwoAABEQCQoCAAEAAwACAAIABQACABAABwAC
ABEACQABABIACQACABMACwAoAEQAXgBzAHoA/AA3AUgBXwF4AaMBswG+AdMB4wHqARYCJgJLAp4C
xAJGA4IDygMLBEkEWQR8BIcEkgSZBL8E1gQQBSkFTQVVBYYFmwWwBcAF9AX/BRMGdAaKBswG2wYE
gAAAAQAAAAUk828AAAAAAAAWBAAABAAAAAAAAAAAAAAANQc6BAAAAAAQAAAAAAAAAAAAAAA+B40J
AAAAAA8AAAAAAAAAAAAAAD4HOwwAAAAADwAAAAAAAAAAAAAAPgetBQAAAAAEAAAAAAAAAAAAAAA1
B6EFAAAAAAQAAAAAAAAAAAAAADUHdAoAAAAAEAAAAAAAAAAAAAAAPgf3AwAAAAAEAAAAAAAAAAAA
AABHB+oOAAAAAAQAAAAAAAAAAAAAAFAHCAwAAAAABAAAAAAAAAAAAAAANQdaCgAAAAAAAAAAAQAA
AKgNAAAGAAMABwADAAgAAwAJAAMACgADAAsAAwAMAAMADQADAAAAAAAEADAMAQAAAAQAJQxTAOAA
UwCAAYcAEQK9AL8CwQDmAsMA/QLHAHcDywC2A88A/APBACsEwQClBMEAxgQBAQoFxwAgBcEAMgUB
AUgFvQBIBcEAXQXBACkGwwA9BgEBTAa9ANUGwQDpBgAAAAAAPD5wX18xMAA8PmNfX0Rpc3BsYXlD
bGFzczNfMAA8PjlfXzVfMAA8UHJvY2Vzc0RpbWVuc2lvbnM+Yl9fNV8wADw+Y19fRGlzcGxheUNs
YXNzNV8wADw+OV9fNl8wADxQcm9jZXNzRmFjdHM+Yl9fNl8wADw+Y19fRGlzcGxheUNsYXNzNl8w
ADw+OV9fN18wADxQcm9jZXNzT2JqZWN0cz5iX183XzAAPD45X184XzAAPEdldERhdGFiYXNlTmFt
ZXM+Yl9fOF8wADw+OV9fMAA8TWFpbj5iX18wADw+cF9fMAA8PnBfXzExADw+Y19fRGlzcGxheUNs
YXNzM18xADw+Y19fRGlzcGxheUNsYXNzNl8xADw+OV9fN18xADxQcm9jZXNzT2JqZWN0cz5iX183
XzEAPD45X184XzEAPEdldERhdGFiYXNlTmFtZXM+Yl9fOF8xADxNYWluPmJfXzEAPFByb2Nlc3NE
aW1lbnNpb25zPmJfXzEAPFByb2Nlc3NGYWN0cz5iX18xADw+cF9fMQBJRW51bWVyYWJsZWAxAElP
cmRlcmVkRW51bWVyYWJsZWAxAENhbGxTaXRlYDEARXF1YWxpdHlDb21wYXJlcmAxAElFbnVtZXJh
dG9yYDEATGlzdGAxAEl0ZW0xAENTJDw+OF9fbG9jYWxzMQA8PnBfXzEyAEludDMyADw+OV9fN18y
ADxQcm9jZXNzT2JqZWN0cz5iX183XzIAPD45X18yADxQcm9jZXNzRmFjdHM+Yl9fMgA8PnBfXzIA
PD5mX19Bbm9ueW1vdXNUeXBlMGAyAEZ1bmNgMgBWYWx1ZVR1cGxlYDIASUdyb3VwaW5nYDIATWV0
YWRhdGFPYmplY3RDb2xsZWN0aW9uYDIAQ29uY3VycmVudERpY3Rpb25hcnlgMgBJdGVtMgA8UHJv
Y2Vzc0ZhY3RzPmJfXzMAPD5vX18zADw+cF9fMwBGdW5jYDMAPD45X182XzQAPFByb2Nlc3NGYWN0
cz5iX182XzQAPD5wX180AEZ1bmNgNAA8PjlfXzUAPFByb2Nlc3NGYWN0cz5iX181ADw+cF9fNQA8
PjlfXzZfNgA8UHJvY2Vzc0ZhY3RzPmJfXzZfNgA8PnBfXzYAQWN0aW9uYDYAPD45X182XzcAPFBy
b2Nlc3NGYWN0cz5iX182XzcAPD5wX183ADw+OV9fNl84ADxQcm9jZXNzRmFjdHM+Yl9fNl84ADw+
cF9fOABBY3Rpb25gOAA8PjkAPD45X182XzkAPFByb2Nlc3NGYWN0cz5iX182XzkAPD5vX185ADw+
cF9fOQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFNU
XzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAG1zY29ybGliADw+YwBTeXN0ZW0uQ29s
bGVjdGlvbnMuR2VuZXJpYwBUaHJlYWQAQWRkADxpPmlfX0ZpZWxkADxvPmlfX0ZpZWxkAFJlcGxh
Y2UAZGVmYXVsdEluc3RhbmNlAEdldEhhc2hDb2RlAFhtbGFNZXNzYWdlAG1lc3NhZ2UASW52b2tl
AFRhYmxlAFZhcmlhYmxlAElFbnVtZXJhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAFppcEZpbGUAZ2V0X05hbWUAZ2V0X01hY2hpbmVOYW1lAGRhdGFi
YXNlTmFtZQBGaW5kQnlOYW1lAGdldF9SZWZyZXNoZWRUaW1lAERhdGVUaW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBhY3F1aXNpdGlvblR5cGUAV2hlcmUAU3lzdGVt
LkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBzZW1hcGhvcmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAGdldF9JbnZhcmlhbnRDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEYXRhYmFzZQBk
YXRhYmFzZQBSZWxlYXNlAERpc3Bvc2UAQ3JlYXRlAGdldF9TdGF0ZQBEZWJ1Z2dlckJyb3dzYWJs
ZVN0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAE9iamVjdFN0YXRlAERlbGV0ZQBDYWxsU2l0ZQBE
eW5hbWljQXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBEZWJ1Z2dlckJyb3dzYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJI
aWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAVHVwbGVFbGVtZW50TmFtZXNBdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBFeGVjdXRlAGdl
dF9WYWx1ZQBUcnlHZXRWYWx1ZQB2YWx1ZQBTZXJpYWxpemUARGVzZXJpYWxpemUAU3lzdGVtLlRo
cmVhZGluZwBPcmRlckJ5RGVzY2VuZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVX
YXJuaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAHRhYnVsYXJDb25uZWN0aW9uU3RyaW5nAFRvU3Ry
aW5nAGNzdlBhdGgAU3RhcnRzV2l0aABnZXRfaQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBnZXRfTW9kZWwAU2Ny
aXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTZW5k
TWFpbABTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5kbGwAZ2V0X0l0ZW0Ac2V0
X0l0ZW0AU3lzdGVtLklPLkNvbXByZXNzaW9uLkZpbGVTeXN0ZW0AU2VtYXBob3JlU2xpbQByZXNv
dXJjZU1hbgBvcF9MZXNzVGhhbgBUaW1lU3BhbgBTY3JpcHRNYWluAEpvaW4AU3lzdGVtLklPLkNv
bXByZXNzaW9uAF9sb2NhdGlvbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBvcF9T
dWJ0cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBYbWxhTWVzc2FnZUNvbGxlY3Rpb24AVGFibGVD
b2xsZWN0aW9uAERhdGFiYXNlQ29sbGVjdGlvbgBQYXJ0aXRpb25Db2xsZWN0aW9uAFhtbGFSZXN1
bHRDb2xsZWN0aW9uAFBhcnRpdGlvbgBJT0V4Y2VwdGlvbgBnZXRfRGVzY3JpcHRpb24AZ2V0X28A
Q3VsdHVyZUluZm8AQ1NoYXJwQXJndW1lbnRJbmZvAFNsZWVwAE1pY3Jvc29mdC5DU2hhcnAAU3lz
dGVtLkxpbnEAPGk+al9fVFBhcgA8bz5qX19UUGFyAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2Vz
LlRhYnVsYXIASW52b2tlTWVtYmVyAElGb3JtYXRQcm92aWRlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1
bnRpbWVCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2
ZW50c09iamVjdFdyYXBwZXIAU2VydmVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEZpcmVFcnJvcgBJ
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1RvdGFsU2Vjb25kcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
NTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9NZXNzYWdlcwBNYXhSZXRyaWVzAFNUXzU4OTQ1MTUw
MWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFi
bGVzAEdldERhdGFiYXNlTmFtZXMAZ2V0X0RhdGFiYXNlcwBDU2hhcnBBcmd1bWVudEluZm9GbGFn
cwBDU2hhcnBCaW5kZXJGbGFncwB0aW1pbmdzAFNldHRpbmdzAHNldHRpbmdzAEFkZE1vbnRocwA8
PjRfX3RoaXMARXF1YWxzAFByb2Nlc3NEaW1lbnNpb25zAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBT
eXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcnRpdGlvbnMAcGFyYWxsZWxQYXJ0aXRpb25zAGdldF9D
b250YWluc0Vycm9ycwBQcm9jZXNzAGdldF9EdHMAUHJvY2Vzc0ZhY3RzAFByb2Nlc3NPYmplY3Rz
AG9iamVjdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQWRkRGF5cwBSZXByb2Nlc3NEYXlzAHJlcHJvY2Vz
c0RheXMAQ29uY2F0AEZvcm1hdABQYXJzZUV4YWN0AE5hbWVkTWV0YWRhdGFPYmplY3QAc3ViamVj
dABTZWxlY3QAQ29ubmVjdABEaXNjb25uZWN0AFRhcmdldABXYWl0AGdldF9EZWZhdWx0AFhtbGFS
ZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVu
dABnZXRfUGFyZW50AGdldF9DdXJyZW50AFN5c3RlbS5Db2xsZWN0aW9ucy5Db25jdXJyZW50AGdl
dF9Db3VudABUaHJlYWRTdGFydABDb252ZXJ0AENhc3QAVG9MaXN0AE1vdmVOZXh0AFJlYWRBbGxU
ZXh0AFdyaXRlQWxsVGV4dABnZXRfTm93AEdldEluZGV4AEdyb3VwQnkAZ2V0X0Fzc2VtYmx5AFNl
bGVjdE1hbnkARXh0cmFjdFRvRGlyZWN0b3J5AG9wX0VxdWFsaXR5AEVtcHR5AAAtewB7ACAAbwAg
AD0AIAB7ADAAfQAsACAAaQAgAD0AIAB7ADEAfQAgAH0AfQAAF3sAMAB9ADoAewAxAH0AOgB7ADIA
fQAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6
ADoAVABhAHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMA
UABhAHQAaAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AABlUAGkAbQBpAG4AZwBzAC4AagBz
AG8AbgAAL3QAYQBiAHUAbABhAHIAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAJVQA
aQBtAGkAbgBnAHMAIAAtAD4AIAB7ADAAfQAKAHsAMQB9AAElcABhAHIAYQBsAGwAZQBsAFAAYQBy
AHQAaQB0AGkAbwBuAHMAAB9hAGMAcQB1AGkAcwBpAHQAaQBvAG4AVAB5AHAAZQAAD2MAYQB2AFAA
YQB0AGgAAA90AGgAcgBlAGEAZABzAAAHewAwAH0AABNFAFIAUgBPAFIAIAAtACAAKAABAykAAB17
ADAAfQAgAC0APgAgAHsAMQB9AAoAewAyAH0AAQdjAHMAdgAAG1YAZQByAGkAZgBpAGMAYQB0AGkA
bwBuAF8AAAEACWQAYQB0AGEAACFGAG8AcgBlAGMAYQBzAHQATwBiAHMAZQByAHYAZQBkAAAlXwBG
AG8AcgBlAGMAYQBzAHQATwBiAHMAZQByAHYAZQBkAF8AABEuAGMAcwB2AC4AegBpAHAAAAkuAGMA
cwB2AAADLAAAe3sAewAiAHMAZQBxAHUAZQBuAGMAZQAiADoAIAB7AHsAIgBtAGEAeABQAGEAcgBh
AGwAbABlAGwAaQBzAG0AIgA6ACAAewAwAH0ALAAiAG8AcABlAHIAYQB0AGkAbwBuAHMAIgA6ACAA
WwB7ADEAfQBdAH0AfQB9AH0AABNFAFgARQBDAFUAVABFADoACgAACSAALQA+ACAAAQMKAAAVQwBP
AE0AUABMAEUAVABFADoACgAAF1cAQQBSAE4ASQBOAEcAIAAtACAAKAABCVMAZQBuAGQAABVzAG0A
dABwAFMAZQByAHYAZQByAAAhZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBF
AG0AYQBpAGwAQQBkAGQAcgBlAHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAA
YQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAFN7ACIAcgBlAGYAcgBlAHMAaAAiADoAIAB7ACIA
dAB5AHAAZQAiADoAIAAiAGYAdQBsAGwAIgAsACAAIgBvAGIAagBlAGMAdABzACIAOgAgAFsAAAdd
AH0AfQAAG3IAZQBwAHIAbwBjAGUAcwBzAEQAYQB5AHMAAA9QAHIAbwBjAGUAcwBzAAAdewAiAGQA
YQB0AGEAYgBhAHMAZQAiADoAIAAiAAAbIgAsACAAIgB0AGEAYgBsAGUAIgA6ACAAIgAABSIAfQAA
D3kAeQB5AHkALQBNAE0AASMiACwAIAAiAHAAYQByAHQAaQB0AGkAbwBuACIAOgAgACIAAAAAAI4G
otoCAF1LsgKKmohJOVYABCABAQgDIAABBSABARERBCABAQ4FIAEBET0FIAEBHQ4GIAEBEYDZCBUS
CAITABMBAwYTAAMGEwEKBwEVEggCEwATAQcVEoDlARMACQAAFRKA5QETAAcgAgITABMABxUSgOUB
EwEFIAEIEwAGBwITABMBAhMAAyAADgITAQkAAw4SgO0OHRwjBwoSHA4OFRJRARJVElkVEl0BDhUS
YQIOCBJVFRFlARJVElkDAAAOBSAAEoD1BSAAEoD5BiABEoD9HAMgABwHAAQODhwcHAUAAg4ODgQA
AQ4OBjABAR4ADgMKARwIAAESgL0RgQ0OAAMSgRURgRkSgL0SgL0PFRKAsQEVEoCFAxKAuRwODAAB
FRKAsQETABKBFQkAAhKBHRGBIQ4TAAMSgRURgRkSgL0VEoCRARKBHRAVEoCxARUSgLUEEoC5HA4c
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
BBKAuRwOHBAGFRKAsQEVEoCFAxKAuRwOEAYVEoCxARUSgIUDEoC5HAgVBhUSgLEBFRKAtQQSgLkS
gL0cEoCdFgYVEoCxARUSgMEIEoC5EgwODggcDg4VBhUSgLEBFRKAtQQSgLkSgL0cEoDFFQYVEoCx
ARUSgMkGEoC5EoDFHBwODgQgAQIcCSAGAQ4OCAgODgUgAQESaQkgBQESaQgIDg4KIAIBEmkVElEB
DgggARUSUQEODgUgAgEODgUAABKA0QYAAQESgNUEAAASFAMAAAEFIAECEn0UIAIVEggCFRFxAg4O
CBURcQIODggdIAEVElEBFRFxAg4OFRKAiQIIFRIIAhURcQIODggTIAEVEXECDg4VEggCFRFxAg4O
CAkgAQ4VEXECDg4EIAEODg0gARUSgJEBEoCVEoCNBiABDhKAlQUgAQISaQUgAQ4SaQQgAQgOBSAB
DhJ9DyABFRKAkQEVEXECDg4SfQYgAQISgK0OIAEIFRIIAhURcQIODggLIAEVEXECDg4SgK0EKAAT
AAQoABMBBQgAEoDRBQgAEoDVBAgAEhQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAAAF
AQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
BAEAAAAIAQAAAAAAAAAmAQAEAAAABE5hbWUJUGFydGl0aW9uBE5hbWUJUGFydGl0aW9uAAAXAQAC
AAAABE5hbWUJUGFydGl0aW9uAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA4GgAAAAAAAAAAAAA+mgAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAOxoAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA
AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAmBAAAAAAAAAAAAAAmBDQAAABW
AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA828FJAAAAQDzbwUk
PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA
AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEhgMAAAEAUwB0AHIAaQBuAGcA
RgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl
AG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAVABWAEEAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANQA4ADkANAA1ADEANQAw
ADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAAAAPgAPAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkAMgAyADEALgAyADgANgA1ADkAAAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEA
YwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AZABsAGwAAABO
ABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADUA
OAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAx
ADMAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA1ADgA
OQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAz
AGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMgAyADEA
LgAyADgANgA1ADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADkAMgAyADEALgAyADgANgA1ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgAAAMAAAADDkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RemoveCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{7466608a-32ca-4111-bfda-0dc1bfdcb510}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="RemoveCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Collections.Generic;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];

                Remove(tabularConnectionString, Directory.GetFiles(bimPath, "*.bim").ToList());
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Remove
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="bimFiles"></param>
		/// <returns></returns>
		private void Remove(string tabularConnectionString, List<string> bimFiles)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
					server.Connect(tabularConnectionString);
					var databases= bimFiles.ToDictionary(b => Path.GetFileNameWithoutExtension(b));
                    server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_") && !databases.ContainsKey(d.Name)).ToList().ForEach(d => {
                        var command = $"{{\"delete\": {{\"object\": {{\"database\": \"{d.Name}\"}}}}}}";
                        server.Execute(command);

						bool fireAgain = true;
						Dts.Events.FireInformation(0, _location, $"{d.Name} -> {tabularConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
					});                    
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, _location, $"{string.Join(",", bimFiles)} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:DisplayName>
    <msb:ProjectId>{C262DEBD-67ED-437B-ACDA-A2F35EF4C1CD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.dll">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
BgA4BKQGBgCPA6QGBgCqA+gECgBTBGYFCgCxAmYFBgCuCQEGBgDeBgEGDgDlAioHDgC4ByoHBgCA
AJIBBgATAxcIBgDHAAEGBgDOAJIBEgBsABcIBgD3AAEGEgAKAxcIBgDiAAEGBgBSAgEGFgDyCbcF
BgD+AAEGBgAuAwQIBgCMB1IIBgDoBm8GFgD1AqEFFgBfA6EFFgDNAloGBgD9CQEGBgAoBQEGCgCP
BWYFGgDzCCoCGgDTASoCHgDGB4QGBgA3BTgBBgAMAjgBBgDoAQEGIgCBB1oHEgB5BxcIIgA/CVoH
IgD0BloHIgAnCVoHBgBeAJIBBgBnCjgBEgDdAR4HCgCkB2YFJgC4B2kCDgC2BioHBgDcAXoJBgB3
AAEGBgCtAdcEBgBRCqQGJgAJCjcIJgDJBjcIAAAAAC8BAAAAAAEAAQABABAAFAZhATkAAQABAAAA
EABZCMAIPQADAAUAAAEQAFEJwAiNAAUACQADIRAAjgEAAD0ABgAMAAMBEAAZAAAAPQAIAA8AAwEQ
ADUAAAA9AAoAEAADARAAlwAAAD0ADAASAIMBEAC5AAAAPQANABQAgwEQAOkAAAA9ABEAFABRgLUI
lwIBAEAGDQERAAgGmgIRAKECngIRALQBowI2ACsBpwIWAAEAqwIGAFoJswIGAA4FDQEGAL8HtwIG
AIcAuwIGAB0JvwIWAC4AxwIWAFcA1gIWAMAAxwIWANsA1gIWAC4AxwIWAFcAxwIWAMAAxwIWANsA
5AIWAPAA9QJQIAAAAACGABoGBgABALAiAAAAAIEAxAQHAwEA+CMAAAAAgQDHBREDAwBcJgAAAACG
GOUHBgAFAGQmAAAAAIMY5QcGAAUAbCYAAAAAkwiIBxcDBQCYJgAAAACTCIkCHAMFAJ8mAAAAAJMI
lQIiAwUApyYAAAAAlgjXCSkDBgCuJgAAAACGGOUHBgAGALYmAAAAAJEY6wcuAwYAwiYAAAAAkRjr
By4DBgBkJgAAAACGGOUHBgAGAM4mAAAAAIMACgAyAwYAZCYAAAAAhhjlBwYABwBkJgAAAACGGOUH
BgAHANgmAAAAAIMArAA3AwcAZCYAAAAAhhjlBwYACABzJwAAAACDAEoAPQMIAAAAAQAOBQAAAgD9
CAAAAQC1CQAAAgDEAQAAAQC+BAAAAQCMAQAAAQCyAQAAAQCyAQkA5QcBABEA5QcGABkA5QcKACkA
5QcQADEA5QcQADkA5QcQAEEA5QcQAEkA5QcQAFEA5QcQAFkA5QcQAGEA5QcQAGkA5QcGAKEA5QcG
APEA5QcGABEB5QcVACEBGgIkACkBnAcoAHEAjQksADEB7wgyADkB+AU4AEEBtAQ/ACkBpwlDAEkB
5QcGAHkAJgUoAFEBSgJLAFkBLApRAEkBywRWANkA+gFhAGkBGAppAAwA7gKDAAwA0AmPAIEB7gKT
AGkBOAqdABQA7gKDABQA0AmPABwAzAHIACQAzAHcAJkBBgnlAKEBJQrsADEB4wkBADEBlQkBASkB
pwkHASkBcQoNAakB2wcQASkBoAkZAZEA5QcGALEBvQkQACwA5QczAaEBWgo5AZEADwlZAaEBIApf
ATQA5QczAaEBVwJ6ATwA5QczAUQALwWiASkBHwatAakBAgW4AdEBBwfBAbEBxQkGAGkBTQfMAUwA
7gKDAEwA0AmPAGkB8gedAFQA7gKDAFQA0AmPAFwAzAHIAGQAzAEhAnEA5QcGAHkA5QcGANkATQox
AvkA5Qc3AhkB5QcGAFEBJAZRAOEBEQIoALEBrAREAikBoAlLAqkBSgZRAikBPAVcAmwAQQpoAggA
BACSAikAewB7Ay4ACwBTAy4AEwBcAy4AGwB7Ay4AIwCEAy4AKwCtAy4AMwCtAy4AOwCzAy4AQwCE
Ay4ASwC8Ay4AUwCtAy4AWwDWA0MAYwAgBEkAewB7A2MAcwAgBKEAawAgBKMAawAgBMMAawAgBOMA
awAgBAMBawAgBCMBawAgBEMBawAgBBwAIAHGAT8CAwABAAQAAwAAAIwHQwMAAKkCSAMAANsJTgMC
AAYAAwACAAcABQABAAgABQACAAkABwB2ALAAvgDTACwBcgGTAZsB5wH4AQgCFAJhAgSAAAABAAAA
giKaUQAAAAAAAAcBAAAEAAAAAAAAAAAAAABuAoUBAAAAABAAAAAAAAAAAAAAAHcCRwUAAAAADwAA
AAAAAAAAAAAAdwIqBwAAAAAEAAAAAAAAAAAAAABuAl0CAAAAAAQAAAAAAAAAAAAAAG4CAQYAAAAA
EAAAAAAAAAAAAAAAdwJCAQAAAAAEAAAAAAAAAAAAAACAAmQJAAAAAAQAAAAAAAAAAAAAAIkCDQcA
AAAADwAAAAAAAAAAAAAAdwJpAgAAAAAAAAAAAQAAAGMIAAAFAAIABgACAAcAAgAIAAIACQACAAoA
AgA3AF0ATwD9AGMAVAFnAG0BawBtAU8AbQEAAAA8PjlfXzNfMAA8UmVtb3ZlPmJfXzNfMAA8PmNf
X0Rpc3BsYXlDbGFzczNfMAA8PnBfXzAAPD5jX19EaXNwbGF5Q2xhc3MzXzEAPFJlbW92ZT5iX18x
ADw+cF9fMQBJRW51bWVyYWJsZWAxAENhbGxTaXRlYDEAQWN0aW9uYDEATGlzdGAxAENTJDw+OF9f
bG9jYWxzMQA8PmNfX0Rpc3BsYXlDbGFzczNfMgA8UmVtb3ZlPmJfXzIAPD5vX18yADw+cF9fMgBG
dW5jYDIARGljdGlvbmFyeWAyADw+cF9fMwBGdW5jYDMAPD5vX180ADw+cF9fNABGdW5jYDQAQWN0
aW9uYDYAU1RfOWExZDMzYzdlOGM5NGFmMDg5YTg0YzBmYTMwZmNiYzYAPD45ADxNb2R1bGU+AFN5
c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRl
N2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
AFRocmVhZABkZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UAVmFyaWFibGUASUVudW1lcmFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTmFtZQBnZXRf
TWFjaGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUA
V2hlcmUAU3lzdGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAENyZWF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDYWxsU2l0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAdmFsdWUAUmVtb3Zl
AERlc2VyaWFsaXplAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBG
aXJlV2FybmluZwB0YWJ1bGFyQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBGb3JFYWNoAFBhdGgA
U3RhcnRzV2l0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFNUXzlhMWQzM2M3ZThjOTRhZjA4OWE4
NGMwZmEzMGZjYmM2LmRsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBK
b2luAEdldEZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbgBfbG9jYXRpb24ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2Ny
aXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9uAFht
bGFSZXN1bHRDb2xsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBBcmd1bWVudElu
Zm8AU2xlZXAATWljcm9zb2Z0LkNTaGFycABTeXN0ZW0uTGlucQBNaWNyb3NvZnQuQW5hbHlzaXNT
ZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVCaW5k
ZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2ZW50c09iamVj
dFdyYXBwZXIAU2VydmVyAHNlcnZlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAEludm9rZUNvbnN0cnVjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAE1heFJldHJpZXMAU1RfNTg5NDUxNTAx
YzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAGJpbUZpbGVz
AEdldEZpbGVzAGdldF9EYXRhYmFzZXMAZGF0YWJhc2VzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdz
AENTaGFycEJpbmRlckZsYWdzAFNldHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uV2ViLkV4dGVuc2lv
bnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AE9i
amVjdABzdWJqZWN0AENvbm5lY3QARGlzY29ubmVjdABUYXJnZXQAZ2V0X0RlZmF1bHQAc2V0X1Rh
c2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVudABDb252ZXJ0AENh
c3QAVG9MaXN0AFJlYWRBbGxUZXh0AEdldEluZGV4AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBU
b0RpY3Rpb25hcnkARGlyZWN0b3J5AEVtcHR5AAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAAJ1MA
eQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAVABh
AHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABhAHQA
aAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AAA9iAGkAbQBQAGEAdABoAAAvdABhAGIAdQBs
AGEAcgBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAALKgAuAGIAaQBtAAAHewAwAH0A
ABNFAFIAUgBPAFIAIAAtACAAKAABAykAAB17ADAAfQAgAC0APgAgAHsAMQB9AAoAewAyAH0AAQMs
AAAJUwBlAG4AZAAAFXMAbQB0AHAAUwBlAHIAdgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQA
ZAByAGUAcwBzAAAhdABvAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5
ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMA
YgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAASXsAIgBkAGUAbABl
AHQAZQAiADoAIAB7ACIAbwBiAGoAZQBjAHQAIgA6ACAAewAiAGQAYQB0AGEAYgBhAHMAZQAiADoA
IAAiAAAJIgB9AH0AfQAACSAALQA+ACAAAQMKAAAbVgBlAHIAaQBmAGkAYwBhAHQAaQBvAG4AXwAA
AGKRem2BpbFAh7gAIMP1+h8ABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCFBwcEHA4OEkEDAAAO
AyAADgUgABKAmQUgABKAnQYgARKAoRwDIAAcBwAEDg4cHBwFAAIODg4EAAEODgYwAQEeAA4DCgEc
BwABEm0RgLEMAAMSgLkRgL0SbRJtDBUSXQEVEmkDEmUcDgsAARUSXQETABKAuQMGEwAJAAISgMER
gMUOEgADEoC5EYC9Em0VEoDJARKAwQ0VEl0BFRJhBBJlHA4cCRUSYQQSZRwOHAogAxMDEwATARMC
CBUSaQMSZRwOCCACEwITABMBBgACHQ4ODhAQAQEVEk0BHgAVEoDJAR4AAwoBDgUgABKA1QUAAg4O
HAIGDgggBQIIDg4OCAYAAw4ODg4LBwUSGAgSHBIgEkEGFRJVAg4OBSACARwYGhACAhUSWQIeAR4A
FRKAyQEeABUSVQIeAB4BBAoCDg4FIAASgN0NEAEBFRKAyQEeABKA4QQKARJFBxUSVQISRQIYEAEC
FRKAyQEeABUSgMkBHgAVElUCHgACBxUSgOUBEkUGFRJNARJFCiABARUSgOUBEwAKAAIODhUSgMkB
DgggBQEIDg4OCAQAAQEIBQcCHBJBGgAFEoC5EYC9DhUSgMkBEm0SbRUSgMkBEoDBEBUSXQEVEnUG
EmUScRwcDg4PFRJdARUSYQQSZRJtHBJxCxUSYQQSZRJtHBJxDBUSdQYSZRJxHBwODg8gBgETABMB
EwITAxMEEwUFIAASgO0HIAIBDhKA7QQHAg4CBiABEoD1DgUAAQ4dDgogBgEIDg4OCBACBCABAg4G
FRJZAg4OBSABAhMACLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6BAUAAAACBggD
BhJ9BAYSgIEDBhIQAwYSFAcGFRJVAg4OAwYSCAMGEkkDBhIYBwYVElkCDg4OBhUSXQEVEmEEEmUc
DhwNBhUSXQEVEmkDEmUcDhAGFRJdARUSYQQSZRJtHBJxEQYVEl0BFRJ1BhJlEnEcHA4OCSACAQ4V
Ek0BDgUgAgEODgQAABJ9BQAAEoCBBgABARKAgQQAABIQAwAAAQQgAQ4OBSABARJFBSABAhJFBAgA
En0FCAASgIEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAAAUBAAAAAAgBAANU
VkEAABkBABRDb3B5cmlnaHQgQCBUVkEgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAMQgAAAAAAAAAAAAAmQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEIAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
JgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAJpRgiIAAAEAmlGCIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAFQAVgBBAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAx
AGMAOAAxADMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADgA
MwA0AC4AMgAwADgAOQAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAYQAxAGQAMwAzAGMANwBlADgAYwA5ADQAYQBmADAAOAA5AGEAOAA0AGMAMABmAGEAMwAwAGYA
YwBiAGMANgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAVABWAEEAIAAyADAAMgA0AAAAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA5AGEAMQBkADMAMwBjADcAZQA4AGMAOQA0AGEAZgAwADgAOQBhADgA
NABjADAAZgBhADMAMABmAGMAYgBjADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIA
YwBhADUANgBkADEAYwA4ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADgAOQAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADgAOQAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAADgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B3D59A90-C09B-499A-BE5C-FE6269149BEA}"
      DTS:From="Package\RemoveCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ProcessCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{42B88B4A-FDD5-46A9-BBB5-F348D5FAB45D}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::Execute]"
      DTS:From="Package\Execute"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DeployCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{7F3E7E79-A13C-4D91-B32D-64F9ADB49BF8}"
      DTS:From="Package\ProcessCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\EmptyPartitions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6AFC443B-6D56-419B-A0CD-9F3EA46A667B}"
      DTS:From="Package\EmptyPartitions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Complete" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{37FF383C-1C25-489E-852A-76C94EEA9038}"
      DTS:From="Package\DeployCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\RemoveCubes" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="190,42"
          Id="Package\Complete"
          TopLeft="119.977777777778,464" />
        <NodeLayout
          Size="190,42"
          Id="Package\DeployCubes"
          TopLeft="119.977777777778,172.8" />
        <NodeLayout
          Size="190,42"
          Id="Package\EmptyPartitions"
          TopLeft="119.977777777778,391.2" />
        <NodeLayout
          Size="190,42"
          Id="Package\Execute"
          TopLeft="119.977777777778,100" />
        <NodeLayout
          Size="190,42"
          Id="Package\ProcessCubes"
          TopLeft="119.977777777778,318.4" />
        <NodeLayout
          Size="190,42"
          Id="Package\RemoveCubes"
          TopLeft="119.977777777778,245.6" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="214.977777777778,287.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="214.977777777778,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.65000000000001,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="214.977777777778,360.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="214.977777777778,433.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="214.977777777778,214.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>