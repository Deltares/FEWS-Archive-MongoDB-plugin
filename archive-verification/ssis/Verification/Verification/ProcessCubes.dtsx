<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/16/2024 2:38:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CHADWHH01"
  DTS:CreatorName="TVA\emroush-wa"
  DTS:DTSID="{2A1E5369-7B7A-452D-859A-AF9AF3DC4000}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessCubes"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="112"
  DTS:VersionGUID="{3066CA42-7A01-4337-85B3-C541E94FF82A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3376DF3A-C5DA-4BD3-B830-3B635FACC292}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Execute">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Complete"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{13df2463-f766-487d-b83e-7d3db944e768}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Complete"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f21f1a3ffa864259a3e934608f1397dd"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        /// <summary>
        /// 
        /// </summary>
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
                
                Complete(settings, settingsPath);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Complete
		/// </summary>
		/// <param name="settings"></param>
		/// <param name="settingsPath"></param>
		/// <returns></returns>
		private void Complete(dynamic settings, string settingsPath)
        {
            settings["execute"] = false;
			File.WriteAllText(settingsPath, new JavaScriptSerializer().Serialize(settings));
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_f21f1a3ffa864259a3e934608f1397dd</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:DisplayName>
    <msb:ProjectId>{6E928546-3CCD-46BF-B2C5-8B8AFAE4B682}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f21f1a3ffa864259a3e934608f1397dd.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.dll">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
bCUAAAAAgxg4BgYABQB0JQAAAACTCOkFhwIFAKAlAAAAAJMIqgGMAgUApyUAAAAAkwi2AZECBQCv
JQAAAACWCLMHlwIGALYlAAAAAIYYOAYGAAYAviUAAAAAkRg+BpwCBgAAAAEAXQcAAAIAKQQAAAEA
pAcAAAIAIAEAAAEA6AMJADgGAQARADgGBgAZADgGCgApADgGEAAxADgGEAA5ADgGEABBADgGEABJ
ADgGEABRADgGEABZADgGEABhADgGEABpADgGBgCJADgGBgCRADgGBgDhADgGBgABATgGFQARAWEB
IgAZAf0FJgBxAHwHKgAhARwHMAApAecENgAxAd4DPQAZAZYHQQB5ACAEJgA5AZEBSQDBADgGBgBB
AeUHTwDBAO4DVADJAEoBXwBRAQYCZwBhAa4FcQAMAAYCmwAMAKwHpwAUACgBtgAhAb8HAQAhAYQH
wgAZAZYHyAAZARAIzgCBAS4G0QAZAY8H2gBhAfoH4QAcAAYCmwAcAKwHpwAkACgBDgEsAAYCmwAs
AKwHpwA0AAYCmwA0AKwHpwA8ACgBRAFEACgBtgBMAAYCmwBMAKwHpwBhAUUG4QBUAAYCmwBUAKwH
pwBhAfEH4QBcAAYCmwBcAKwHpwBkACgBRAFsACgBRAF0ACgBsgGBARQEwgFxADgGBgB5ADgGBgDJ
AAMIywHpADgG0QEJATgGBgAkAGsAfAMpAIMA1wIuAAsArwIuABMAuAIuABsA1wIuACMA4AIuACsA
CQMuADMACQMuADsADwMuAEMA4AIuAEsAGAMuAFMACQMuAFsAMgNDAGMAfANJAIMA1wJjAHsAfAOB
AHMAfAOjAHMAfAPDAHMAfAPjAHMAfAMbAFoBAwABAAQAAwAAAO0FoAIAAMoBpQIAALcHqgICAAYA
AwACAAcABQABAAgABQACAAkABwCMAKsA9AADARsBKgE5AU8BYAFxAYEBjwGZAaUBBIAAAAEAAACC
InFRAAAAAAAA7AAAAAQAAAAAAAAAAAAAANkByAAAAAAAEAAAAAAAAAAAAAAA4gE2BAAAAAAEAAAA
AAAAAAAAAADZAZ4BAAAAAAQAAAAAAAAAAAAAAOsBZgcAAAAABAAAAAAAAAAAAAAA2QHwBAAAAAAQ
AAAAAAAAAAAAAADiAYUAAAAAAAQAAAAAAAAAAAAAAPQBnQUAAAAAAAAAAAEAAACbBgAABQACAAYA
AgAHAAIAOQBbAAAAADw+cF9fMAA8Pm9fXzEAPD5wX18xAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVg
MQA8Pm9fXzIAPD5wX18yADw+b19fMwA8PnBfXzMAPD5wX180AEZ1bmNgNABBY3Rpb25gNABGdW5j
YDUAQWN0aW9uYDYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYgBtc2NvcmxpYgBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBTVF9mMjFmMWEzZmZhODY0MjU5YTNlOTM0NjA4ZjEzOTdkZABk
ZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTWFjaGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGxldGUAQ2Fs
bFNpdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAERlc2VyaWFs
aXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdhcm5pbmcAVG9TdHJpbmcAc2V0dGlu
Z3NQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1haWwAU1RfZjIxZjFhM2ZmYTg2NDI1OWEzZTkzNDYw
OGYxMzk3ZGQuZGxsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAF9sb2Nh
dGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2Vi
LlNjcmlwdC5TZXJpYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJl
SW5mbwBDU2hhcnBBcmd1bWVudEluZm8ATWljcm9zb2Z0LkNTaGFycABJbnZva2VNZW1iZXIATWlj
cm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAVG9VcHBlcgBFdmVudHNPYmplY3RXcmFwcGVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IASW52b2tlQ29uc3RydWN0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81ODk0
NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdzAENTaGFycEJpbmRl
ckZsYWdzAFNldHRpbmdzAHNldHRpbmdzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBnZXRfRHRzAGdl
dF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAc3ViamVjdABUYXJnZXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABSZWFkQWxsVGV4dABHZXRJbmRl
eABTZXRJbmRleABnZXRfQXNzZW1ibHkARW1wdHkAAAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAA
J1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoA
VABhAHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABh
AHQAaAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AABFDAG8AbQBwAGwAZQB0AGUAAAd7ADAA
fQAAE0UAUgBSAE8AUgAgAC0AIAAoAAEDKQAAD2UAeABlAGMAdQB0AGUAABlXAHIAaQB0AGUAQQBs
AGwAVABlAHgAdAAAE1MAZQByAGkAYQBsAGkAegBlAAAJUwBlAG4AZAAAFXMAbQB0AHAAUwBlAHIA
dgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAAAhdABvAEUAbQBhAGkAbABB
AGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcA
YgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAKOXEYA1B/NOvLzKZXamr/4ABCABAQgDIAABBSABARERBCABAQ4F
IAEBEX0GBwMOHBJBAwAADgMgAA4FIAASgJEFIAASgJUGIAESgJkcAyAAHAcABA4OHBwcBQACDg4O
BAABDg4GMAEBHgAOAwoBHAcAARJlEYClCQACEoCpEYCtDhoABRKAtRGAuQ4VEoC9ARJlEmUVEoC9
ARKAqQ4VEk0BFRJRBBJVEggcDgsAARUSTQETABKAtQMGEwAKFRJRBBJVEggcDgsgBAETABMBEwIT
AwUgABKAwQUAAg4OHAIGDgggBQIIDg4OCAYAAw4ODg4SAAMSgLURgLkSZRUSgL0BEoCpDhUSTQEV
ElkFElUcDgIcChUSWQUSVRwOAhwMIAQTBBMAEwETAhMDDhUSTQEVElEEElUSZQ4cDhUSTQEVEl0E
ElUSYRwcChUSXQQSVRJhHBwKIAMTAxMAEwETAgoVElEEElUSZQ4cBQcCHBJBEBUSTQEVEm0GElUS
aRwcDg4PFRJNARUSXQQSVRJlHBJpDRUSTQEVEl0EElUcDhwJFRJdBBJVHA4cCxUSXQQSVRJlHBJp
DBUSbQYSVRJpHBwODg8gBgETABMBEwITAxMEEwUIIAUBCA4ODggFIAASgMUHIAIBDhKAxQi3elxW
GTTgiQiJhF3NgIDMkQgxvzhWrTZONQiwP19/EdUKOgMGEnUDBhJ5AwYSEA8GFRJNARUSUQQSVRII
HA4PBhUSTQEVElkFElUcDgIcDwYVEk0BFRJdBBJVEmEcHA8GFRJNARUSUQQSVRJlDhwOBhUSTQEV
El0EElUcDhwQBhUSTQEVEl0EElUSZRwSaREGFRJNARUSbQYSVRJpHBwODgUgAgEcDgUgAgEODgQA
ABJ1BAAAEnkFAAEBEnkEAAASEAMAAAEECAASdQQIABJ5BAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUy
MmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAzDoAAAAAAAAAAAAA5joAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAANg6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQBxUYIiAAABAHFRgiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABUAFYAQQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADMANAAuADIAMAA4ADQAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBmADIAMQBmADEAYQAzAGYAZgBhADgANgA0ADIANQA5AGEAMwBlADkAMwA0ADYAMAA4AGYA
MQAzADkANwBkAGQALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAVgBBACAAMgAwADIANAAAAAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AZgAyADEAZgAxAGEAMwBmAGYAYQA4ADYANAAyADUAOQBhADMA
ZQA5ADMANAA2ADAAOABmADEAMwA5ADcAZABkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUA
MgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMAA4ADQAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMAA4ADQAOQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD4OgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DeployCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{07483abf-6af0-4671-960a-4fb6f7df47c8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DeployCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5b6adba25bc54be0be84d43b4b60cb08"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_5b6adba25bc54be0be84d43b4b60cb08</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using Task = System.Threading.Tasks.Task;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

                dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];
                string[] reprocessCubes = settings["reprocessCubes"].ToString().Split(',');

                var tasks = Directory.GetFiles(bimPath, "*.bim").Select(bimFile => Task.Run(() =>
                {
	                Deploy(tabularConnectionString, reprocessCubes, bimFile);
                }));
                Task.WaitAll(tasks.ToArray());

				Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}
		
				/// <summary>
		/// Deploy
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="reprocessCubes"></param>
		/// <param name="bimFile"></param>
		private void Deploy(string tabularConnectionString, string[] reprocessCubes, string bimFile)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
                    server.Connect(tabularConnectionString);
                    var databaseName = Path.GetFileNameWithoutExtension(bimFile);
                    var bim = File.ReadAllText(bimFile);

                    dynamic cube = new JavaScriptSerializer { MaxJsonLength = int.MaxValue }.Deserialize<dynamic>(bim);
                    var database = server.Databases.FindByName(databaseName);

                    if (!UpdateCapable(cube, database) || reprocessCubes.Contains(databaseName) || reprocessCubes.Any(r => r.ToUpper().Equals("ALL")))
                        server.Execute($"{{\"delete\": {{\"object\": {{\"database\": \"{databaseName}\"}}}}}}");

                    var command = $"{{\"createOrReplace\": {{\"object\": {{\"database\": \"{databaseName}\"}}, \"database\": {bim}}}}}";
                    var result = server.Execute(command);
                    if (result.ContainsErrors)
                        throw new Exception($"{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}\n\n{command}\n{bimFile} -> {tabularConnectionString}");
                    
                    bool fireAgain = true;
                    Dts.Events.FireInformation(0, _location, $"{bimFile} -> {tabularConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, _location, $"{bimFile} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }
        
        /// <summary>
        /// UpdateCapable
        /// </summary>
        /// <param name="cube"></param>
        /// <param name="database"></param>
        /// <returns></returns>
        private bool UpdateCapable(dynamic cube, Database database)
        {
            var compatibilityLevel = (int)cube["compatibilityLevel"];
            var clientCompatibilityLevel = cube["model"]["annotations"][0]["value"];

            var existingCompatibilityLevel = database?.CompatibilityLevel;
            var existingClientCompatibilityLevel = database?.Model.Annotations.Find("ClientCompatibilityLevel").Value;

            return database == null || compatibilityLevel == existingCompatibilityLevel && clientCompatibilityLevel == existingClientCompatibilityLevel;
        }

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:DisplayName>
    <msb:ProjectId>{23A66DCF-E027-4278-A19C-D01575B8E160}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGE1OmYAAAAAAAAAAOAAIiALATAAADIAAAAIAAAAAAAA3lEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIxRAABPAAAAAGAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5DEAAAAgAAAAMgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAYAAAAAYAAAA0AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
UQAAAAAAAEgAAAACAAUAfC8AAFghAAABAAAAAAAAANRQAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswDgCSAwAAAQAAEXMSAAAGCgYCfQoAAAQCcgEAAHAoEQAA
Cm8SAAAKAigTAAAKbxQAAApyGQAAcG8VAAAKbxYAAAoCKBMAAApvFAAACnJBAABwbxUAAApvFgAA
CigXAAAKfQIAAARzGAAACgIoEwAACm8UAAAKcmMAAHBvFQAACm8WAAAKbxkAAApykQAAcCgaAAAK
KBsAAAooAQAAKwt+EAAABC0kFtArAAABKB0AAArQAgAAAigdAAAKKB4AAAooHwAACoAQAAAEfhAA
AAR7IAAACn4QAAAEfg8AAAQtNBbQAgAAAigdAAAKGI02AAABJRYWFCghAAAKoiUXGRQoIQAACqIo
IgAACigjAAAKgA8AAAR+DwAABHskAAAKfg8AAAQHcq0AAHBvJQAACm8mAAAKDAZ+EgAABC0kFtAr
AAABKB0AAArQAgAAAigdAAAKKB4AAAooHwAACoASAAAEfhIAAAR7IAAACn4SAAAEfhEAAAQtNBbQ
AgAAAigdAAAKGI02AAABJRYWFCghAAAKoiUXGRQoIQAACqIoIgAACigjAAAKgBEAAAR+EQAABHsk
AAAKfhEAAAQHcr0AAHBvJQAACm8mAAAKfQsAAAQGfhYAAAQtJBbQBQAAGygdAAAK0AIAAAIoHQAA
CigeAAAKKCcAAAqAFgAABH4WAAAEeygAAAp+FgAABH4VAAAELToWcu0AAHAU0AIAAAIoHQAAChiN
NgAAASUWFhQoIQAACqIlFxkUKCEAAAqiKCkAAAooKgAACoAVAAAEfhUAAAR7KwAACn4VAAAEfhQA
AAQtMBZy+QAAcBTQAgAAAigdAAAKF402AAABJRYWFCghAAAKoigpAAAKKCwAAAqAFAAABH4UAAAE
ey0AAAp+FAAABH4TAAAELTQW0AIAAAIoHQAAChiNNgAAASUWFhQoIQAACqIlFxkUKCEAAAqiKCIA
AAooIwAACoATAAAEfhMAAAR7JAAACn4TAAAEB3ILAQBwbyUAAApvLgAACh8sby8AAApvMAAACn0M
AAAECHIpAQBwKDEAAAoG/gYTAAAGczIAAAooAgAAKygDAAArKDUAAAoCKBMAAAoWbzYAAAreXg0C
KBMAAAoXbzYAAAoCKBMAAApvNwAAChYCewIAAARyNQEAcAkoOAAACn45AAAKFm86AAAKJgJyPQEA
cAJ7AgAABHJRAQBwKDsAAApyNQEAcAkoOAAACigEAAAG3gAqAABBHAAAAAAAAA0AAAAmAwAAMwMA
AF4AAAAQAAABGzALADkEAAACAAARFwo4KgQAAHM8AAAKCwcDbz0AAAoFKD4AAAoMBSgbAAAKDXMY
AAAKJSD///9/bz8AAAoJbwEAACsTBAdvQAAACghvQQAAChMFfhgAAAQtLBYfItACAAACKB0AAAoX
jTYAAAElFhYUKCEAAAqiKEIAAAooLAAACoAYAAAEfhgAAAR7LQAACn4YAAAEfhcAAAQtRBhyVQEA
cBTQAgAAAigdAAAKGY02AAABJRYXFCghAAAKoiUXFhQoIQAACqIlGBcUKCEAAAqiKCkAAAooQwAA
CoAXAAAEfhcAAAR7RAAACn4XAAAEAhEEEQVvRQAACm8uAAAKEwp+GgAABC0sFh9T0AIAAAIoHQAA
CheNNgAAASUWFhQoIQAACqIoQgAACihGAAAKgBoAAAR+GgAABHtHAAAKfhoAAAQRCm9IAAAKLVx+
GQAABC02Hh8k0AIAAAIoHQAAChiNNgAAASUWFhQoIQAACqIlFxcUKCEAAAqiKEkAAAooSgAACoAZ
AAAEfhkAAAR7SwAACn4ZAAAEEQoECCgEAAArb00AAAorAhEKEwl+HQAABC0sFh9T0AIAAAIoHQAA
CheNNgAAASUWFhQoIQAACqIoQgAACihGAAAKgB0AAAR+HQAABHtHAAAKfh0AAAQRCW9IAAAKOsEA
AAB+HAAABC0sFh9T0AIAAAIoHQAACheNNgAAASUWFhQoIQAACqIoQgAACihGAAAKgBwAAAR+HAAA
BHtHAAAKfhwAAAR+GwAABC02Hh8k0AIAAAIoHQAAChiNNgAAASUWFhQoIQAACqIlFxcUKCEAAAqi
KEkAAAooSgAACoAbAAAEfhsAAAR7SwAACn4bAAAEEQkEfgcAAAQlLRcmfgYAAAT+Bg8AAAZzTgAA
CiWABwAABCgFAAArb00AAApvSAAACiwXB3JxAQBwCHK7AQBwKDsAAApvUAAACiYbjSsAAAElFnLF
AQBwoiUXCKIlGHIhAgBwoiUZCaIlGnJDAgBwoihRAAAKEwYHEQZvUAAAChMHEQdvUgAACjmSAAAA
HY0rAAABJRZySQIAcBEHKAYAACt+CAAABCUtFyZ+BgAABP4GEAAABnNUAAAKJYAIAAAEKAcAACt+
CQAABCUtFyZ+BgAABP4GEQAABnNWAAAKJYAJAAAEKAgAACsoVwAACqIlF3JNAgBwoiUYEQaiJRly
SQIAcKIlGgWiJRtyUwIAcKIlHAOiKFEAAApzWAAACnoXEwgCKBMAAApvNwAAChYCewIAAAQbjSsA
AAElFgWiJRdyUwIAcKIlGAOiJRlySQIAcKIlGhEGoihRAAAKfjkAAAoWEghvWQAACt5REwsCKBMA
AApvNwAAChYCewIAAARyXQIAcAUDEQsoFwAACn45AAAKFm9aAAAKBhsyAv4aIDB1AAAoWwAACt4H
B29cAAAK3AYXWAoGGz7P+///KgAAAEE0AAAAAAAADQAAANoDAADnAwAAPwAAABAAAAECAAAADQAA
ABkEAAAmBAAABwAAAAAAAAATMBAAlQMAAAMAABF+HwAABC0lHxDQQAAAASgdAAAK0AIAAAIoHQAA
CigeAAAKKF0AAAqAHwAABH4fAAAEe14AAAp+HwAABH4eAAAELTQW0AIAAAIoHQAAChiNNgAAASUW
FhQoIQAACqIlFxkUKCEAAAqiKCIAAAooIwAACoAeAAAEfh4AAAR7JAAACn4eAAAEA3J7AgBwbyUA
AApvXwAACgp+IwAABC00FtACAAACKB0AAAoYjTYAAAElFhYUKCEAAAqiJRcZFCghAAAKoigiAAAK
KCMAAAqAIwAABH4jAAAEeyQAAAp+IwAABH4iAAAELTQW0AIAAAIoHQAAChiNNgAAASUWFhQoIQAA
CqIlFxkUKCEAAAqiKCIAAAooYAAACoAiAAAEfiIAAAR7YQAACn4iAAAEfiEAAAQtNBbQAgAAAigd
AAAKGI02AAABJRYWFCghAAAKoiUXGRQoIQAACqIoIgAACigjAAAKgCEAAAR+IQAABHskAAAKfiEA
AAR+IAAABC00FtACAAACKB0AAAoYjTYAAAElFhYUKCEAAAqiJRcZFCghAAAKoigiAAAKKCMAAAqA
IAAABH4gAAAEeyQAAAp+IAAABANyoQIAcG8lAAAKcq0CAHBvJQAAChZvYgAACnLFAgBwbyUAAAoL
BC0MEgT+FRoAABsRBCsLBChjAAAKc2QAAAoMBC0DFCsaBChlAAAKb2YAAApy0QIAcG9nAAAKb2gA
AAoNficAAAQtJBbQRgAAASgdAAAK0AIAAAIoHQAACigeAAAKKEYAAAqAJwAABH4nAAAEe0cAAAp+
JwAABAQU/gETBREFOiEBAAB+JgAABC02Hh8k0AIAAAIoHQAAChiNNgAAASUWFxQoIQAACqIlFxYU
KCEAAAqiKEkAAAooaQAACoAmAAAEfiYAAAR7agAACn4mAAAEEQUGCBMEEgQoawAACv4BEgQobAAA
Cl8TBhEGOacAAAB+JQAABC01HhjQAgAAAigdAAAKGI02AAABJRYXFCghAAAKoiUXFhQoIQAACqIo
SQAACihpAAAKgCUAAAR+JQAABHtqAAAKfiUAAAQRBn4kAAAELTYWHw3QAgAAAigdAAAKGI02AAAB
JRYWFCghAAAKoiUXFxQoIQAACqIoSQAACigjAAAKgCQAAAR+JAAABHskAAAKfiQAAAQHCW8lAAAK
b20AAAorBxEGjEYAAAFvbQAACisHEQWMRgAAAW9IAAAKKgAAABswDAA5AgAABAAAEXMYAAAKAigT
AAAKbxQAAApyYwAAcG8VAAAKbxYAAApvGQAACnKRAABwKBoAAAooGwAACigBAAArCn4sAAAELVwg
AAEAAHIDAwBwFNACAAACKB0AAAobjTYAAAElFhcUKCEAAAqiJRcWFCghAAAKoiUYFhQoIQAACqIl
GRcUKCEAAAqiJRoXFCghAAAKoigpAAAKKG4AAAqALAAABH4sAAAEe28AAAp+LAAABH4rAAAELTUW
0AIAAAIoHQAAChiNNgAAASUWHyEUKCEAAAqiJRcWFCghAAAKoihwAAAKKHEAAAqAKwAABH4rAAAE
e3IAAAp+KwAABNAiAAABKB0AAAp+KgAABC00FtACAAACKB0AAAoYjTYAAAElFhYUKCEAAAqiJRcZ
FCghAAAKoigiAAAKKCMAAAqAKgAABH4qAAAEeyQAAAp+KgAABAZyDQMAcG8lAAAKb3MAAAp+KAAA
BC00FtACAAACKB0AAAoYjTYAAAElFhYUKCEAAAqiJRcZFCghAAAKoigiAAAKKCMAAAqAKAAABH4o
AAAEeyQAAAp+KAAABAZyIwMAcG8lAAAKfikAAAQtNBbQAgAAAigdAAAKGI02AAABJRYWFCghAAAK
oiUXGRQoIQAACqIoIgAACigjAAAKgCkAAAR+KQAABHskAAAKfikAAAQGckUDAHBvJQAACgMEb3QA
AAreKwsCKBMAAApvNwAAChYCewIAAARyNQEAcAcoOAAACn45AAAKFm9aAAAK3gAqAAAAQRwAAAAA
AAAAAAAADQIAAA0CAAArAAAAEAAAAR4CKHUAAAoqHgIodgAACiqufgMAAAQtHnJnAwBw0AMAAAIo
HQAACm93AAAKc3gAAAqAAwAABH4DAAAEKhp+BAAABCoeAoAEAAAEKhp+BQAABCoeAih5AAAKKi5z
CwAABoAFAAAEKi5zDgAABoAGAAAEKkYDbxIAAApy2QMAcG96AAAKKjIDb3sAAAooCQAAKyoeA298
AAAKKpJzFAAABiUCfQ4AAAQlA30NAAAE/gYVAAAGc30AAAoofgAACiq2AnsOAAAEewoAAAQCew4A
AAR7CwAABAJ7DgAABHsMAAAEAnsNAAAEKAIAAAYqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkA
AAAABQBsAAAAVAoAACN+AADACgAARAwAACNTdHJpbmdzAAAAAAQXAADkAwAAI1VTAOgaAAAQAAAA
I0dVSUQAAAD4GgAAYAYAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAAEkAAAAL
AAAALAAAABUAAAAMAAAAfgAAAAEAAAAYAAAABAAAAAIAAAADAAAABAAAACEAAAABAAAACQAAAAEA
AAAHAAAACQAAAAAAqAYBAAAAAAAGAKkEdAkGADgFdAkGAPUDUgkPAAMKAAAGACIEtQcGAIwEtQcG
AG0EtQcGAB8FtQcGAMkEtQcGAOIEtQcGADkEtQcGAFQEmAUKAP0EFQYKAEEDFQYGAGcL2QYGAB8I
2QYOAHUDfwgOAA0JfwgGADkGuwoSAAoIlAkWAKwDdAkGAH8A2QYGAL0DdAkGAN8A2QYSALULlAkG
AIoA9QESADEClAkWAJgAdAkGACkB2QYWAKMDdAkGABQB2QYGAD4B2QYGAOgC2QYaAM8LhwYGAEwB
2QYGANgDUgkGAOEIrwkGAD0IeQcaAI4DWgYaAAkEWgYaAF0DWQcGANoL2QYGANgF2QYKAEgGFQYe
AF0KtgIeAEwCtgIiABQJjgcGAN8FmwEGAJYCmwEGAG8C2QYmANYIrwgWAM4IdAkmAJYKrwgmAEkI
rwgmAH4KrwgGADMMmwEWAGQCcwgKAPkIFQYSAA0J+QIOAN0HfwgWAN4C+AoGAGMCIAsGABAChwUG
ALMA2QYSAHUD+QIOAGoGfwgOAPAHfwgOAOYAfwgOAG4HfwgGAOwG2QYGABQMtQcSAMcHlAkGAK4H
2QYAAAAAkgEAAAAAAQABAAEAEAD0BsQBOQABAAEAAAAQALYJKgo9AAMABgAAARAAqAoqCqUABQAK
AAMhEADxAQAAPQAGAA0AAwEQAAEAAAA9AAoAEgADARAAQAAAAD0ADQAUAIMBEADRAAAAPQAPABYA
gwEQAAYBAAA9ABcAFgCDARAAGwEAAD0AHgAWAIMBEAAwAQAAPQAoABYAUYAfCicEAQAgB6UBEQDg
BioEEQAxAy8EEQAhAjQENgCHATgEFgC5ADwEFgAWAEQEFgBVAFIEBgCxClsEBgC+BaUBBgBlCV8E
BgCTAqUBBgCjAGMEFgA5AGcEFgB4AHYEFgDYAGcEFgANAXYEFgAiAWcEFgA3AYQEFgBFAZIEFgBV
AaEEFgA5ALAEFgB4AIQEFgDYAMMEFgANAdIEFgAiAcMEFgA3AdIEFgBFAdIEFgA5AGcEFgB4AOAE
FgDYAGcEFgANAWcEFgAiAe4EFgA3AWcEFgBFAWcEFgBVAf0EFgCAAf0EFgCLAdIEFgA5AGcEFgB4
AGcEFgDYAGcEFgANAQwFFgAiAR8FUCAAAAAAhgD6BgYAAQAMJAAAAACBACwMMwUBAIgoAAAAAIEA
VQI7BQQALCwAAAAAgQCXBkIFBgCQLgAAAACGGDMJBgAIAJguAAAAAIMYMwkGAAgAoC4AAAAAkwjd
CEgFCADMLgAAAACTCBkDTgUIANMuAAAAAJMIJQNUBQgA2y4AAAAAlgiXC1sFCQDiLgAAAACGGDMJ
BgAJAOouAAAAAJEYOQlgBQkA9i4AAAAAkRg5CWAFCQCYLgAAAACGGDMJBgAJAAIvAAAAAIMAwgDm
AwkAFC8AAAAAgwAfAGQFCgAhLwAAAACDAF4AbwULAJguAAAAAIYYMwkGAAwAKS8AAAAAgwAuAHUF
DACYLgAAAACGGDMJBgANAE4vAAAAAIMAbQAGAA0AAAABAL4FAAACAGUJAAADAJMCAAABABwCAAAC
AH4DAAABAG4LAAACAD0CAAABAHUFAAABAFAJAAABAFAJAAABAN4GAAABAJMCCQAzCQEAEQAzCQYA
GQAzCQoAKQAzCRAAMQAzCRAAOQAzCRAAQQAzCRAASQAzCRAAUQAzCRAAWQAzCRAAYQAzCRAAaQAz
CQYAqQAzCQYAuQAzCQYAIQEzCQYAQQEzCRUAUQGbAiUAWQHxCCkAcQBGCy0AYQFZCjMAaQHQBjkA
cQFeBUAAWQFgC0QAeQEzCQYAeQDWBSkAgQHWAkwAiQHzC1IAeQF7BVcACQGBAmIAmQHmC2sADACH
A4cADACQC5MAsQGHA5cAmQH/C6EAFACHA4cAFACQC5MAHABFAswAJABFAuAANACHA4cANACQC5MA
mQGiCPoAPACHA4cAPACQC5MARACHA4cARACQC5MATABFAuAAVABFAswAXABFAuAAwQFnCk0BZAAz
CVwByQF2C2IByQEIDIABmQCgBpIBYQHACwEAYQFOC5kBWQFgC58BWQE9DKUB0QEpCagBWQFZC7EB
kQAzCQYA2QF9CxAAgQEEB1IAeQHkBQEAkQBwCssB4QGrAtEBmQE6B9cBbACHA4cAbACQC5MAdABF
Ag0CfACHA4cAfACQC5MAhABFAuAAmQFJB9cBjACHA4cAjACQC5MAyQHZCj4ClABFAswAnAAzCVwB
yQEdDGAC2QFWBXICWQFZC3gCoQAzC34CyQHuC4ICpAAzCVwByQEhDKECrAAzCVwBWQH/BtICgQAz
CRAA0QEqB9wC0QGyBecC+QFcCPAC2QGFCwYAtACHA4cAtACQC5MAvABFAuAAxACHA4cAxACQC5MA
zABFAswACQJwBjsD1AAzCT8DiQA+BkUDEQIQC0sD3AAXAl0DKQJeBSkA5ACHA4cA5ACQC5MA1ACj
C3ED1ABoBX4C7ABFAswA9ACHA4cA9ACQC5MAmQFACaEA/ACHA4cA/ACQC5MABAFFAswADAFFAsgD
cQAzCQYAeQAzCQYACQEQDNgDKQEzCd4DSQEzCQYAWQHSCuYDyQASCusD2QApCCkASQIzCVwBmQA5
CPYDCAAEACIEKQCDALQFLgALAIwFLgATAJUFLgAbALQFLgAjAL0FLgArAOYFLgAzAOYFLgA7AOwF
LgBDAL0FLgBLAPUFLgBTAOYFLgBbAA8GQwBjAFkGSQCDALQFYwB7AFkGhABrAFkGoQBzAFkGowBz
AFkGwwBzAFkG4wBzAFkGAwFzAFkGIwFzAFkGQwFzAFkGYwFzAFkGHAC4AfUCgAMDAAEABAADAAAA
4Qh7BQAAOQOBBQAArQuHBQIABwADAAIACAAFAAEACQAFAAIACgAHAHoAtADCANcA6QDsABUBIwEw
ATkBQwFUAe0B/wEaAicCMAJPAlkClALEAgcDFAMdAysDNQNRA2MDdgOGA5kDqwO5AwSAAAABAAAA
vSIQRwAAAAAAAFwBAAAEAAAAAAAAAAAAAAD+A+gBAAAAABAAAAAAAAAAAAAAAAcE9gUAAAAADwAA
AAAAAAAAAAAABwR/CAAAAAAPAAAAAAAAAAAAAAAHBPkCAAAAAAQAAAAAAAAAAAAAAP4D7QIAAAAA
BAAAAAAAAAAAAAAA/gPZBgAAAAAQAAAAAAAAAAAAAAAHBKUBAAAAAAQAAAAAAAAAAAAAABAE4goA
AAAABAAAAAAAAAAAAAAAGQRiCAAAAAAAAAAAAQAAAMAJAAAFAAIABgACAAcAAgAIAAIACQACAAoA
AgALAAIAOQBeAGcAegFpAI0BmQBLAp8ASwKnAI8CqwC9AmcAzAKnAPEDAAAAAAA8PmNfX0Rpc3Bs
YXlDbGFzczJfMAA8PjlfXzNfMAA8RGVwbG95PmJfXzNfMAA8TWFpbj5iX18wADw+cF9fMAA8PmNf
X0Rpc3BsYXlDbGFzczJfMQA8PjlfXzNfMQA8RGVwbG95PmJfXzNfMQA8TWFpbj5iX18xADw+cF9f
MQBOdWxsYWJsZWAxAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVgMQBDUyQ8PjhfX2xvY2FsczEASW50
MzIAPD45X18zXzIAPERlcGxveT5iX18zXzIAPD5vX18yADw+cF9fMgBGdW5jYDIATmFtZWRNZXRh
ZGF0YU9iamVjdENvbGxlY3Rpb25gMgA8Pm9fXzMAPD5wX18zAEZ1bmNgMwA8Pm9fXzQAPD5wX180
AEZ1bmNgNAA8Pm9fXzUAPD5wX181AEZ1bmNgNQA8PnBfXzYAQWN0aW9uYDYAPD5wX183AFNUXzVi
NmFkYmEyNWJjNTRiZTBiZTg0ZDQzYjRiNjBjYjA4ADw+cF9fOAA8PjkAPD5wX185ADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBh
NGRlN2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
cmljAFRocmVhZABGaW5kAGN1YmUAZGVmYXVsdEluc3RhbmNlAFhtbGFNZXNzYWdlAG1lc3NhZ2UA
SW52b2tlAFZhcmlhYmxlAFVwZGF0ZUNhcGFibGUASUVudW1lcmFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAYmltRmlsZQBnZXRfTWFjaGluZU5hbWUARmluZEJ5TmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbWJpbmUARXhwcmVzc2lvblR5cGUAU3lz
dGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAGRhdGFiYXNlAENyZWF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDYWxsU2l0ZQBEeW5hbWljQXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBFeGVjdXRlAGdldF9W
YWx1ZQBnZXRfSGFzVmFsdWUAdmFsdWUARGVzZXJpYWxpemUAU3lzdGVtLlRocmVhZGluZwBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJuaW5nAHRhYnVsYXJDb25uZWN0aW9uU3RyaW5n
AFRvU3RyaW5nAFBhdGgAc2V0X01heEpzb25MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAZ2V0X01vZGVs
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABnZXRfQ29tcGF0aWJpbGl0
eUxldmVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABXYWl0QWxsAFNUXzViNmFkYmEyNWJjNTRi
ZTBiZTg0ZDQzYjRiNjBjYjA4LmRsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AQm9vbGVh
bgBTY3JpcHRNYWluAEpvaW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAF9sb2NhdGlvbgBG
aXJlSW5mb3JtYXRpb24AVW5hcnlPcGVyYXRpb24AQmluYXJ5T3BlcmF0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAEFubm90YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldlYi5TY3Jp
cHQuU2VyaWFsaXphdGlvbgBBY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AWG1sYU1lc3NhZ2VDb2xs
ZWN0aW9uAERhdGFiYXNlQ29sbGVjdGlvbgBNb2RlbEFubm90YXRpb25Db2xsZWN0aW9uAFhtbGFS
ZXN1bHRDb2xsZWN0aW9uAEV4Y2VwdGlvbgBnZXRfRGVzY3JpcHRpb24AUnVuAEN1bHR1cmVJbmZv
AENTaGFycEFyZ3VtZW50SW5mbwBTbGVlcABNaWNyb3NvZnQuQ1NoYXJwAFN5c3RlbS5MaW5xAE1p
Y3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzLlRhYnVsYXIASW52b2tlTWVtYmVyAE1pY3Jvc29mdC5D
U2hhcnAuUnVudGltZUJpbmRlcgBDYWxsU2l0ZUJpbmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRv
VXBwZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTZXJ2ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmly
ZUVycm9yAC5jdG9yAC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
cmVwcm9jZXNzQ3ViZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNyb3NvZnQu
QW5hbHlzaXNTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUy
MmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBnZXRfTWVzc2FnZXMATWF4UmV0cmllcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFj
ODEzYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAZ2V0X0RhdGFiYXNlcwBDU2hh
cnBBcmd1bWVudEluZm9GbGFncwBDU2hhcnBCaW5kZXJGbGFncwBTZXR0aW5ncwA8PjRfX3RoaXMA
U3lzdGVtLlRocmVhZGluZy5UYXNrcwBFcXVhbHMAQ29udGFpbnMAU3lzdGVtLldlYi5FeHRlbnNp
b25zAFN5c3RlbS5MaW5xLkV4cHJlc3Npb25zAGdldF9Bbm5vdGF0aW9ucwBTeXN0ZW0uQ29sbGVj
dGlvbnMAZ2V0X0NvbnRhaW5zRXJyb3JzAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0
AE9iamVjdABzdWJqZWN0AFNlbGVjdABDb25uZWN0AERpc2Nvbm5lY3QAVGFyZ2V0AGdldF9EZWZh
dWx0AEdldFZhbHVlT3JEZWZhdWx0AFhtbGFSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVu
dABFbnZpcm9ubWVudABDb252ZXJ0AENhc3QAUmVhZEFsbFRleHQAR2V0SW5kZXgAVG9BcnJheQBn
ZXRfQXNzZW1ibHkAQW55AFNlbGVjdE1hbnkARGVwbG95AERpcmVjdG9yeQBFbXB0eQAAABd7ADAA
fQA6AHsAMQB9ADoAewAyAH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBl
AAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUAByAG8AagBlAGMAdAA6ADoA
UwBlAHQAdABpAG4AZwBzAFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMALgBqAHMAbwBuAAAPYgBp
AG0AUABhAHQAaAAAL3QAYQBiAHUAbABhAHIAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4A
ZwAAC1MAcABsAGkAdAAAEVQAbwBTAHQAcgBpAG4AZwAAHXIAZQBwAHIAbwBjAGUAcwBzAEMAdQBi
AGUAcwAACyoALgBiAGkAbQAAB3sAMAB9AAATRQBSAFIATwBSACAALQAgACgAAQMpAAAbVQBwAGQA
YQB0AGUAQwBhAHAAYQBiAGwAZQAASXsAIgBkAGUAbABlAHQAZQAiADoAIAB7ACIAbwBiAGoAZQBj
AHQAIgA6ACAAewAiAGQAYQB0AGEAYgBhAHMAZQAiADoAIAAiAAAJIgB9AH0AfQAAW3sAIgBjAHIA
ZQBhAHQAZQBPAHIAUgBlAHAAbABhAGMAZQAiADoAIAB7ACIAbwBiAGoAZQBjAHQAIgA6ACAAewAi
AGQAYQB0AGEAYgBhAHMAZQAiADoAIAAiAAAhIgB9ACwAIAAiAGQAYQB0AGEAYgBhAHMAZQAiADoA
IAAABX0AfQAAAwoAAAUKAAoAAAkgAC0APgAgAAEdewAwAH0AIAAtAD4AIAB7ADEAfQAKAHsAMgB9
AAElYwBvAG0AcABhAHQAaQBiAGkAbABpAHQAeQBMAGUAdgBlAGwAAAttAG8AZABlAGwAABdhAG4A
bgBvAHQAYQB0AGkAbwBuAHMAAAt2AGEAbAB1AGUAADFDAGwAaQBlAG4AdABDAG8AbQBwAGEAdABp
AGIAaQBsAGkAdAB5AEwAZQB2AGUAbAAACVMAZQBuAGQAABVzAG0AdABwAFMAZQByAHYAZQByAAAh
ZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBFAG0AYQBpAGwAQQBkAGQAcgBl
AHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIA
MgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAdBAEwATAAAAAAAy8CYInYCvUqMkEtAz3SjHQAEIAEBCAMgAAEFIAEBEREEIAEB
DgYgAQERgJ0IBwQSGBwOEkEDAAAOAyAADgUgABKAsQUgABKAtQYgARKAuRwDIAAcBwAEDg4cHBwF
AAIODg4EAAEODgYwAQEeAA4DCgEcCAABEoCFEYDJDgADEoDREYDVEoCFEoCFDBUScQEVEn0DEnkc
DgsAARUScQETABKA0QMGEwAJAAISgNkRgN0OEgADEoDREYDVEoCFFRJpARKA2Q0VEnEBFRJ1BBJ5
HA4cCRUSdQQSeRwOHAogAxMDEwATARMCCBUSfQMSeRwOCCACEwITABMBAh0ODRUScQEVEn0DEnkc
HQ4aAAUSgNERgNUOFRJpARKAhRKAhRUSaQESgNkNFRJxARUSdQQSeRwDHAwVEnEBFRJ9AxJ5HBwI
FRJ9AxJ5HBwJFRJ1BBJ5HAMcCRUSfQMSeRwdDgYAAh0ODg4HFRJhAg4STQUgAgEcGBcQAgIVEmkB
HgEVEmkBHgAVEmECHgAeAQUKAg4STQwQAQEdHgAVEmkBHgAECgESTQYAAQEdEk0FIAASgOkFAAIO
DhwCBg4IIAUCCA4ODggGAAMODg4OEgcMCBJJDg4cEkUOElECHBwSQQUgABKA8QUgARJFDhUABBKA
0RGA1RGA9RKAhRUSaQESgNkRFRJxARUSgIEFEnkSCBwSRRwNFRKAgQUSeRIIHBJFHAwgBBMEEwAT
ARMCEwMMFRJxARUSfQMSeRwCCBUSfQMSeRwCDRUScQEVEnUEEnkcAhwMEAECAhUSaQEeAB4AAwoB
DgkVEnUEEnkcAhwGFRJhAg4CERABAgIVEmkBHgAVEmECHgACBSABElEOBQABDh0OAyAAAgwQAQEV
EmkBHgASgPkECgESZQwVEmECEmUVEmkBEm0bEAICFRJpAR4BFRJpAR4AFRJhAh4AFRJpAR4BBgoC
EmUSbQcVEmECEm0OBQoCEm0OCQACDg4VEmkBDgogBgEIDg4OCBACCCAFAQgODg4IBAABAQgRBwcI
HBURWQEIDhURWQEIAgIMFRJxARUSfQMSeRwICBUSfQMSeRwIDRUScQEVEnUEEnkcCBwJFRJ1BBJ5
HAgcBRURWQEIAyAACAUgAQETAAUgABKBCQUgABKBDQsVEoERAhKBFRKBCQUgARMADg0VEnEBFRJ1
BBJ5AhwcBCAAEwAJFRJ1BBJ5AhwcBQcCHBJBEhUScQEVEoCNBhJ5EoCJHBwODhEVEnEBFRJ1BBJ5
EoCFHBKAiQ0VEnUEEnkSgIUcEoCJDhUSgI0GEnkSgIkcHA4ODyAGARMAEwETAhMDEwQTBQUgABKB
HQcgAgEOEoEdBCABAg4FIAASgSEECgESbQcAARJNEoElCLd6XFYZNOCJCImEXc2AgMyRCDG/OFat
Nk41CLA/X38R1Qo6BAUAAAACBggEBhKAlQQGEoCZAwYSEAMGEhQHBhUSYQIOAg0GFRJhAhJlFRJp
ARJtCAYVEmECEm0OAwYSCAMGHQ4DBhIYDgYVEnEBFRJ1BBJ5HA4cDQYVEnEBFRJ9AxJ5HA4NBhUS
cQEVEn0DEnkcHA4GFRJxARUSdQQSeRwDHA4GFRJxARUSfQMSeRwdDhIGFRJxARUSgIEFEnkSCBwS
RRwOBhUScQEVEnUEEnkcAhwNBhUScQEVEn0DEnkcAg0GFRJxARUSfQMSeRwIDgYVEnEBFRJ1BBJ5
HAgcDgYVEnEBFRJ1BBJ5AhwcEgYVEnEBFRJ1BBJ5EoCFHBKAiRMGFRJxARUSgI0GEnkSgIkcHA4O
ByADAQ4dDg4GIAICHBJFBSACAQ4OBQAAEoCVBQAAEoCZBgABARKAmQQAABIQAwAAAQogARUSaQES
bRJlBSABDhJtBSABEk0OBQgAEoCVBQgAEoCZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZk
MWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAC0UQAAAAAAAAAAAADOUQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwFEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAmBAAAAAAA
AAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
EEe9IgAAAQAQR70iPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEhgMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
VABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANQA4
ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEA
MwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAOAA5ADMALgAx
ADgAMQA5ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQBiADYA
YQBkAGIAYQAyADUAYgBjADUANABiAGUAMABiAGUAOAA0AGQANAAzAGIANABiADYAMABjAGIAMAA4
AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADUAYgA2AGEAZABiAGEAMgA1AGIAYwA1ADQAYgBlADAAYgBlADgANABkADQAMwBi
ADQAYgA2ADAAYwBiADAAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADgAOAA5ADMALgAxADgAMQA5ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADgAOAA5ADMALgAxADgAMQA5ADIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA4DEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\EmptyPartitions"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{523455c2-7287-4395-ba25-06bc42c200e6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="EmptyPartitions"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_eb97788c1c6343608c7bca9f6a486cbf"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_eb97788c1c6343608c7bca9f6a486cbf.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_eb97788c1c6343608c7bca9f6a486cbf</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.AdomdClient, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft.NET\ADOMD.NET\160\Microsoft.AnalysisServices.AdomdClient.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Task = System.Threading.Tasks.Task;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using Microsoft.AnalysisServices.AdomdClient;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
	{
		private static string _location;

		/// <summary>
		/// Main
		/// </summary>
		public void Main()
		{
			try
			{
				_location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
				string tabularConnectionString = settings["tabularConnectionString"];

				var empty = new ConcurrentDictionary<string, List<string>>();

				var semaphore = new SemaphoreSlim(Environment.ProcessorCount*2);
				var tasks = GetDatabaseNames(tabularConnectionString).OrderBy(s => s).Select(databaseName => Task.Run(() => {
					semaphore.Wait();
					try
					{
						empty[databaseName] = Process(tabularConnectionString, databaseName);
					}
					finally
					{
						semaphore.Release();
					}
				}));
				Task.WaitAll(tasks.ToArray());

				SendMail($"{Environment.MachineName.ToUpper()} Missing Partition Data", string.Join("\n\n", empty.Keys.OrderBy(k => k).Where(k => empty[k].Count > 0).Select(k => $"{k}\n\t{string.Join("\n\t", empty[k])}")));

				Dts.TaskResult = (int)DTSExecResult.Success;
			}
			catch (Exception ex)
			{
				Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Process 
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="databaseName"></param>
		private List<string> Process(string tabularConnectionString, string databaseName)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				var database = server.Databases.FindByName(databaseName);
				var table = database.Model.Tables["ForecastObserved"];
				return table.Partitions.AsParallel().Where(p =>
				{
					var month = DateTime.ParseExact(p.Name, "yyyy-MM", null);
					using (var adomdConnection = new AdomdConnection($"{tabularConnectionString};Catalog={databaseName}"))
					{
						adomdConnection.Open();
						using (var adomdCommand = new AdomdCommand($"EVALUATE ROW(\"Count\", COALESCE(COUNTROWS(FILTER(ForecastObserved, [forecastTime] >= DATEVALUE(\"{month:yyyy-MM-dd}\") && [forecastTime] < DATEVALUE(\"{month.AddMonths(1):yyyy-MM-dd}\"))), 0))", adomdConnection))
						{
							using (var adomdDataReader = adomdCommand.ExecuteReader())
							{
								adomdDataReader.Read();
								return adomdDataReader.GetInt32(0) == 0;
							}
						}
					}
				}).OrderBy(t => t.Name).Select(p => $"{{\"database\": \"{database.Name}\", \"table\": \"{table.Name}\", \"partition\": \"{p.Name}\"}}").ToList();
					
			}
			catch (Exception ex)
			{
				Dts.Events.FireError(0, _location, $"{databaseName} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{databaseName} -> {tabularConnectionString}\n{ex}");
				throw;
			}
			finally
			{
				server.Disconnect();
			}
		}

		private List<string> GetDatabaseNames(string tabularConnectionString)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				return server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_")).Select(d => d.Name).ToList();
			}
			finally
			{
				server.Disconnect();
			}
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_eb97788c1c6343608c7bca9f6a486cbf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_eb97788c1c6343608c7bca9f6a486cbf</msb:DisplayName>
    <msb:ProjectId>{672C83B4-F537-428E-AF82-8FEBAFA2E7BD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_eb97788c1c6343608c7bca9f6a486cbf.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_eb97788c1c6343608c7bca9f6a486cbf.dll">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
b2UAAAom3CoBEAAAAgAQADlJABIAAAAAGzAEAJUAAAAFAAARA29cAAAKcmsCAHAUKGYAAAoKAnsR
AAAEcnsCAHACexIAAAQoOQAACnNnAAAKCwdvaAAACnKPAgBwBowaAAABEgAXKGkAAAqMGgAAAShq
AAAKB3NrAAAKDAhvbAAACg0Jb20AAAomCRZvbgAAChb+ARME3h4JLAYJb28AAArcCCwGCG9vAAAK
3AcsBgdvbwAACtwRBCoAAAABKAAAAgBfABV0AAoAAAAAAgBYACZ+AAoAAAAAAgAuAFqIAAoAAAAA
EzAEAFEAAAAAAAAAHY0tAAABJRZy3gMAcKIlFwJ7EwAABG9dAAAKoiUYcvwDAHCiJRkCexQAAARv
XAAACqIlGnIYBABwoiUbA29cAAAKoiUccjwEAHCiKHAAAAoqAAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAQAoAACN+AACsCgAABA0AACNTdHJpbmdzAAAAALAXAABEBAAAI1VT
APQbAAAQAAAAI0dVSUQAAAAEHAAAzAUAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQsAAAD6ATMAFgAA
AQAAAE4AAAALAAAAGwAAAB0AAAAQAAAAcAAAABcAAAAFAAAAAgAAAAMAAAAEAAAAEgAAAAEAAAAK
AAAAAQAAAAcAAAAPAAAAAABoBwEAAAAAAAYAbQX0CQYA/AX0CQYAuQThCQ8AgwoAAAYA5gQzCAYA
UAUzCAYAMQUzCAYA4wUzCAYAjQUzCAYApgUzCAYA/QQzCAYAGAVrBgoAwQXhBgoABgThBgYA2Qui
BwYAlgiiBw4AOgTgCA4AnAngCAYABQdACwYAMgGGAgYAgQT0CQYAlAGiBw4AjAjgCAYAqQdaBgYA
uwF2DAYAbAOiBxIAfAgpDBIApgIpDBIAEAkpDA4A0gLgCBYAGQH0CQYABAKiBxYAeAT0CQYA5AGi
BwYAnQOiBxoAUAxHBwYAFgKiBwYAnAThCQYAcAkvCgYApAj3BxoAYwQmBxoAzQQmBxoAIgTiBwYA
WwyiBwYAqwaiBwoAFAfhBh4A0Ap1Ax4A2AJ1AwYAsgYsAiIAowkMCAYANgMsAgYAEgOiByYAZQk+
CRYAXQn0CSYAEQs+CSYAsAg+CSYA+Qo+CQYA9gCGAhYA9QLUCBYABAHUCAYAJAGGAgoAiAnhBioA
nAm0Aw4AVQjgCA4ANgfgCA4ARQjgCA4AmwHgCA4AaAjgCBYA7QLUCBYAQAHUCBYAOQHUCAYA4QJt
CwYA7gwzCA4AzAvgCCoAZwwUCgYALAiiBwYALgmiBwYAAAOiBwAAAAAjAgAAAAABAAEAAQAQAMgH
VQI5AAEAAQAAABAANgqSCj0AAgAGAAABEAAjC5IKrQAEAAoAAyEQAIICAAA9AAUADQADARAAFwAA
AD0ACwAUAAMBEAB4AAAAPQAPABgAAwEQACwAAAA9ABEAGgADARAApgAAAD0AEwAcAIMBEADoAAAA
PQAVAB4AgwEQAPYBAAA9ABcAHgARANgHtAERALcH7wMRAPYD9AMRALMC+QM2AB8C/QMWAAEAAQQW
AGkBAQQWAI0ACQQWAEEAEgQWALsAGwQGADYLJAQGANQDKAQGAP0MLAQGAJEGtAEGAFQDtAEGAFAB
OAQGAJEGtAEGAFQDtAEGAEMEPAQGAAwDQAQWAHEARAQWAO8AVQQWAHEARAQWAO8ARAQWAI0BRAQW
AN0BZQQWAP0BegRQIAAAAACGAM4HBgABAPAiAAAAAIEAjwuPBAEAaCQAAAAAgQDaCpkEAwD4JAAA
AACBAFcHogQEAFgnAAAAAIYYwgkGAAYAYCcAAAAAgxjCCQYABgBoJwAAAACTCGwJqAQGAJQnAAAA
AJMI3gOuBAYAmycAAAAAkwjqA7QEBgCjJwAAAACWCA4MuwQHAKonAAAAAIYYwgkGAAcAsicAAAAA
kRjICcAEBwC+JwAAAACRGMgJwAQHAGAnAAAAAIYYwgkGAAcAyicAAAAAgwAKAMQEBwDKJwAAAACD
AHIBxAQIAM0nAAAAAIMAlgDJBAkA1ScAAAAAgwBKAM8ECgDnJwAAAACDAMQA1QQLAGAnAAAAAIYY
wgkGAAwA7ycAAAAAgwDdANsEDAAUKAAAAACDANIBZwMNACooAAAAAIMA6wHEBA4AYCcAAAAAhhjC
CQYADwBQKAAAAACDAAsCBgAPAGAnAAAAAIYYwgkGAA8AyCgAAAAAgwBjAOEEDwBgJwAAAACGGMIJ
BgAQAJQpAAAAAIMAfwHJBBAAAAABAJEGAAACAFQDAAABAJEGAAABAOALAAACAMMCAAABACQGAAAB
ALELAAABAAgHAAABAM8MAAABALECAAABALECAAABAFQDAAABAAgHAAABAAgHAAABANIIAAABANII
CQDCCQEAEQDCCQYAGQDCCQoAKQDCCRAAMQDCCRAAOQDCCRAAQQDCCRAASQDCCRAAUQDCCRAAWQDC
CRAAYQDCCRAAaQDCCQYAqQDCCQYAMQHCCQYAUQHCCRUAYQFEAyUAaQGACSkAcQCXCy0AcQHMCjMA
eQGQBzkAgQEaBkAAaQG6C0QAeQCpBikAiQGVA0wAkQHCCQYAmQHFDFIAkQEqBlcAGQEkA2IAqQGx
DGsADABcBIkADAACDJUAwQFcBJkAqQHRDKMAFABcBIkAFAACDJUAHADLAtMAJADLAukALADCCQYA
YQGeDP0AwQDCCQEANADCCQgB2QHaDA4BPADCCQgB2QHoCzUB2QHiDFUBmQBgB2gBaQGzC0wALACq
C28BRADCCQgB2QGiA4ABaQHTB50BcQEaDAEAcQGfC6gBaQG6C64BaQH3DLQB8QG4CbcBaQGzC8AB
kQDCCQYA+QHvCxAAkQDrCtcBAQJhA90BiQAKB+MBCQLBCukBTACQB/oB8QCACwACKQI8BwYCVADC
CQgBKQKiAyUCXADCCQgBKQLaDEYCKQLoC2YCKQK+DIAC+QH3CwYA2QG5DJsCZADCCQgBbADCCQgB
2QG+DMQCqQEDCdsCdABcBIkAdAACDJUAqQHPCaMAfABcBIkAfAACDJUAhADLAtMAjADLAkAD8QGF
BlADcQDCCQYAeQDCCQYAGQHqDFkDOQHCCV8DWQHCCQYAUQI7AykAWQI7AykAaQG3BmcDYQLCCQgB
mQCgCGwDLACQB3QDlACUDIEDwQAJDAYALACZB4UDwQBMBIED0QDBC5kD2QDCCRAA2QDDBwYA0QAs
C6MDaQG6C6kD4QDCCbAD4QAgCbcD6QChArwD6QBgAcADcQJUBAYAaQGzC8UDKQB7ACAFLgALAPgE
LgATAAEFLgAbACAFLgAjACkFLgArAFIFLgAzAFIFLgA7AFgFLgBDACkFLgBLAGEFLgBTAFIFLgBb
AHsFQwBjAMUFSQB7ACAFYwBzAMUFgQBrAMUFowBrAMUFwwBrAMUF4wBrAMUFAwFrAMUFIwFrAMUF
QwFrAMUFYwFrAMUFHADHAZEC1QKNAwMAAQAEAAMAAABwCecEAAD+A+0EAAASDPMEAgAHAAMAAgAI
AAUAAQAJAAUAAgAKAAcAegC3AMcA3gDyAAEBLQF5Ae8BHQI+Aq4CtgL4AgwDIAMwA3sDBIAAAAEA
AADNInaYAAAAAAAANgYAAAQAAAAAAAAAAAAAAMsDeQIAAAAAEAAAAAAAAAAAAAAA1APCBgAAAAAP
AAAAAAAAAAAAAADUA+AIAAAAAA8AAAAAAAAAAAAAANQDKQwAAAAABAAAAAAAAAAAAAAAywOoAwAA
AAAEAAAAAAAAAAAAAADLA6IHAAAAABAAAAAAAAAAAAAAANQDNgIAAAAABAAAAAAAAAAAAAAA3QNX
CwAAAAAEAAAAAAAAAAAAAADmA8MIAAAAAA8AAAAAAAAAAAAAANQDtAMAAAAAAAAAAAEAAABACgAA
BQACAAYAAgAHAAIACAACAAkAAgAKAAIACwACADcAXgBVACgBWQBPAVsAYwFlAJkBWQAoAYUAGAKJ
ABgCjQBgAo8AYAKRAJkBlQCpAmUAqQJZAL4CmwCZAQAAAAAAPD45X18xXzAAPE1haW4+Yl9fMV8w
ADw+Y19fRGlzcGxheUNsYXNzMV8wADw+Y19fRGlzcGxheUNsYXNzMl8wADw+OV9fM18wADxHZXRE
YXRhYmFzZU5hbWVzPmJfXzNfMAA8UHJvY2Vzcz5iX18wADw+cF9fMAA8PmNfX0Rpc3BsYXlDbGFz
czFfMQA8PjlfXzJfMQA8UHJvY2Vzcz5iX18yXzEAPD5jX19EaXNwbGF5Q2xhc3MyXzEAPD45X18z
XzEAPEdldERhdGFiYXNlTmFtZXM+Yl9fM18xADxNYWluPmJfXzEAPD5vX18xADw+cF9fMQBJRW51
bWVyYWJsZWAxAElPcmRlcmVkRW51bWVyYWJsZWAxAENhbGxTaXRlYDEASUNvbGxlY3Rpb25gMQBM
aXN0YDEAT3JkZXJlZFBhcmFsbGVsUXVlcnlgMQBDUyQ8PjhfX2xvY2FsczEAR2V0SW50MzIAPD45
X18xXzIAPE1haW4+Yl9fMV8yADxQcm9jZXNzPmJfXzIAPD5wX18yAEZ1bmNgMgBOYW1lZE1ldGFk
YXRhT2JqZWN0Q29sbGVjdGlvbmAyAENvbmN1cnJlbnREaWN0aW9uYXJ5YDIAPE1haW4+Yl9fMwA8
PnBfXzMARnVuY2AzADxNYWluPmJfXzQAPD5vX180ADw+cF9fNABGdW5jYDQAPE1haW4+Yl9fNQBB
Y3Rpb25gNgA8PjkAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYgBtc2NvcmxpYgA8PmMAU3lz
dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZABBZG9tZENvbW1hbmQAZGVmYXVsdEluc3RhbmNl
AG1lc3NhZ2UASW52b2tlAFRhYmxlAFZhcmlhYmxlAElFbnVtZXJhYmxlAFBhcmFsbGVsRW51bWVy
YWJsZQBJRGlzcG9zYWJsZQB0YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBGaWxlAGdldF9OYW1lAGdldF9NYWNoaW5lTmFtZQBkYXRhYmFzZU5hbWUARmluZEJ5TmFtZQBE
YXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbWJpbmUAVHlwZQBXaGVy
ZQBTeXN0ZW0uQ29yZQBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNlcy5Db3JlAHNlbWFwaG9yZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAGRhdGFiYXNlAFJlbGVh
c2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ2FsbFNpdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBTVF9lYjk3Nzg4YzFjNjM0MzYwOGM3YmNhOWY2
YTQ4NmNiZgBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdh
cm5pbmcAdGFidWxhckNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAUGF0aABTdGFydHNXaXRoAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAGdldF9Nb2RlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAQXNQYXJhbGxlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1haWwAV2FpdEFsbABTVF9lYjk3
Nzg4YzFjNjM0MzYwOGM3YmNhOWY2YTQ4NmNiZi5kbGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVt
AFNlbWFwaG9yZVNsaW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAEpvaW4AX2xvY2F0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2Ny
aXB0LlNlcmlhbGl6YXRpb24AQWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFRhYmxlQ29sbGVjdGlv
bgBEYXRhYmFzZUNvbGxlY3Rpb24AUGFydGl0aW9uQ29sbGVjdGlvbgBBZG9tZENvbm5lY3Rpb24A
UGFydGl0aW9uAEV4Y2VwdGlvbgBSdW4AQ3VsdHVyZUluZm8AQ1NoYXJwQXJndW1lbnRJbmZvAE1p
Y3Jvc29mdC5DU2hhcnAAU3lzdGVtLkxpbnEATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuVGFi
dWxhcgBJbnZva2VNZW1iZXIAQWRvbWREYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASUZvcm1hdFBy
b3ZpZGVyAE1pY3Jvc29mdC5DU2hhcnAuUnVudGltZUJpbmRlcgBDYWxsU2l0ZUJpbmRlcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAFRvVXBwZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTZXJ2ZXIASmF2YVNj
cmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNyb3Nv
ZnQuQW5hbHlzaXNTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdi
MGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzAGdldF9U
YWJsZXMAZ2V0X1ZhcmlhYmxlcwBHZXREYXRhYmFzZU5hbWVzAGdldF9EYXRhYmFzZXMAQ1NoYXJw
QXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0dGluZ3MAQWRkTW9udGhzADw+
NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBTeXN0
ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcnRpdGlvbnMAUHJvY2VzcwBnZXRfRHRzAGdldF9FdmVudHMA
Z2V0X0tleXMAQ29uY2F0AEZvcm1hdABQYXJzZUV4YWN0AE5hbWVkTWV0YWRhdGFPYmplY3QAc3Vi
amVjdABTZWxlY3QAQ29ubmVjdABEaXNjb25uZWN0AFRhcmdldABXYWl0AGdldF9EZWZhdWx0AHNl
dF9UYXNrUmVzdWx0AE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzLkFkb21kQ2xpZW50AFNtdHBD
bGllbnQARW52aXJvbm1lbnQATmFtZWRDb21wb25lbnQAU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1
cnJlbnQAZ2V0X0NvdW50AGdldF9Qcm9jZXNzb3JDb3VudABDb252ZXJ0AENhc3QAVG9MaXN0AFJl
YWRBbGxUZXh0AEdldEluZGV4AE9yZGVyQnkAVG9BcnJheQBnZXRfQXNzZW1ibHkARW1wdHkAZW1w
dHkAAAAXewAwAH0AOgB7ADEAfQA6AHsAMgB9AAAnUwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBn
AGUATgBhAG0AZQAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC0kAFAAcgBvAGoA
ZQBjAHQAOgA6AFMAZQB0AHQAaQBuAGcAcwBQAGEAdABoAAAbUwBlAHQAdABpAG4AZwBzAC4AagBz
AG8AbgAAL3QAYQBiAHUAbABhAHIAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAALyAA
TQBpAHMAcwBpAG4AZwAgAFAAYQByAHQAaQB0AGkAbwBuACAARABhAHQAYQAABQoACgAAB3sAMAB9
AAATRQBSAFIATwBSACAALQAgACgAAQMpAAAhRgBvAHIAZQBjAGEAcwB0AE8AYgBzAGUAcgB2AGUA
ZAAAHXsAMAB9ACAALQA+ACAAewAxAH0ACgB7ADIAfQABCVMAZQBuAGQAABVzAG0AdABwAFMAZQBy
AHYAZQByAAAhZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBFAG0AYQBpAGwA
QQBkAGQAcgBlAHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3
AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAABtWAGUAcgBpAGYAaQBjAGEAdABpAG8AbgBfAAAFCgAJAAAPeQB5
AHkAeQAtAE0ATQABEzsAQwBhAHQAYQBsAG8AZwA9AACBTUUAVgBBAEwAVQBBAFQARQAgAFIATwBX
ACgAIgBDAG8AdQBuAHQAIgAsACAAQwBPAEEATABFAFMAQwBFACgAQwBPAFUATgBUAFIATwBXAFMA
KABGAEkATABUAEUAUgAoAEYAbwByAGUAYwBhAHMAdABPAGIAcwBlAHIAdgBlAGQALAAgAFsAZgBv
AHIAZQBjAGEAcwB0AFQAaQBtAGUAXQAgAD4APQAgAEQAQQBUAEUAVgBBAEwAVQBFACgAIgB7ADAA
OgB5AHkAeQB5AC0ATQBNAC0AZABkAH0AIgApACAAJgAmACAAWwBmAG8AcgBlAGMAYQBzAHQAVABp
AG0AZQBdACAAPAAgAEQAQQBUAEUAVgBBAEwAVQBFACgAIgB7ADEAOgB5AHkAeQB5AC0ATQBNAC0A
ZABkAH0AIgApACkAKQAsACAAMAApACkAAR17ACIAZABhAHQAYQBiAGEAcwBlACIAOgAgACIAABsi
ACwAIAAiAHQAYQBiAGwAZQAiADoAIAAiAAAjIgAsACAAIgBwAGEAcgB0AGkAdABpAG8AbgAiADoA
IAAiAAAFIgB9AAAAAP6WpwepyQ1Emp5x7n7S1BgABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCl
CAcEEhgOHBJBAwAADgMgAA4FIAASgLkFIAASgL0GIAESgMEcAyAAHAcABA4OHBwcBQACDg4OBAAB
Dg4GMAEBHgAOAwoBHAgAARKAjRGA0Q4AAxKA2RGA3RKAjRKAjQ4VEn0BFRKAiQMSgIUcDgsAARUS
fQETABKA2QMGEwAJAAISgOERgOUOEwADEoDZEYDdEoCNFRKA6QESgOEPFRJ9ARUSgIEEEoCFHA4c
CxUSgIEEEoCFHA4cCiADEwMTABMBEwIKFRKAiQMSgIUcDgggAhMCEwATAQoVEmUCDhUSUQEOAwAA
CAYVElkCDg4FIAIBHBgZEAICFRKA8QEeABUSgOkBHgAVElkCHgAeAQQKAg4OBxUSWQIOEk0ZEAIC
FRKA6QEeARUSgOkBHgAVElkCHgAeAQUKAg4STQ0QAQEdHgAVEoDpAR4ABAoBEk0GAAEBHRJNCSAA
FRKA9QETAAYVElkCDgIYEAECFRKA6QEeABUSgOkBHgAVElkCHgACAwoBDgoAAg4OFRKA6QEOBSAA
EoD5BQACDg4cAgYOCCAFAggODg4IBgADDg4ODg8HBRIgEkkSJBUSUQEOEkEFIAASgQEFIAESRQ4F
IAASgQUFIAASgQkKFRKBDQISeRKBBQUgARMADgUgABKBEREQAQEVEoEZAR4AFRKA6QEeAAQKARJd
BxUSWQISXQIYEAECFRKBGQEeABUSgRkBHgAVElkCHgACBxUSWQISXQ4ZEAICFRKBHQEeABUSgRkB
HgAVElkCHgAeAQUKAhJdDhkQAgIVEoEZAR4BFRKBGQEeABUSWQIeAB4BEBABARUSUQEeABUSgRkB
HgAJBwISSRUSUQEODRABARUSgOkBHgASgSEECgESRQcVElkCEkUCBxUSWQISRQ4FCgISRQ4QEAEB
FRJRAR4AFRKA6QEeAAUHAhwSQRwABRKA2RGA3Q4VEoDpARKAjRKAjRUSgOkBEoDhExUSfQEVEoCV
BhKAhRKAkRwcDg4TFRJ9ARUSgIEEEoCFEoCNHBKAkQ8VEoCBBBKAhRKAjRwSgJEPFRKAlQYSgIUS
gJEcHA4ODyAGARMAEwETAhMDEwQTBQggBQEIDg4OCAUgABKBJQcgAgEOEoElBCABAg4HAAESTRKB
MQYgARMBEwAFFRJRAQ4DIAAIByACARMAEwELBwURaRJtEnESdQIJAAMRaQ4OEoE1BSABEWkIBgAD
Dg4cHAYgAgEOEm0EIAASdQMgAAIEIAEICAUAAQ4dDgi3elxWGTTgiQiJhF3NgIDMkQgxvzhWrTZO
NQiwP19/EdUKOgQGEoCdBAYSgKEDBhIQAwYSFAcGFRJZAg4OCAYVElkCEl0OCAYVElkCEkUCCAYV
ElkCEkUOAwYSCAMGEmELBhUSZQIOFRJRAQ4DBhIYAwYSRQMGEnkQBhUSfQEVEoCBBBKAhRwOHA8G
FRJ9ARUSgIkDEoCFHA4UBhUSfQEVEoCBBBKAhRKAjRwSgJEUBhUSfQEVEoCVBhKAhRKAkRwcDg4J
IAIVElEBDg4OCCABFRJRAQ4OBSACAQ4OBQAAEoCdBQAAEoChBgABARKAoQQAABIQAwAAAQQgAQ4O
BSABDhJdBSABAhJFBSABDhJFBSABEk0OBSABAhJdBQgAEoCdBQgAEoChBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMw
YTRkZTdiMGUyMmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZB
IDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACkTAAAAAAAAAAAAAC+
TAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsEwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAACYEAAAA
AAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQB2mM0iAAABAHaYzSI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASGAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AABUAFYAQQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA1
ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgA
MQAzAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA5ADAAOQAu
ADMAOQAwADMAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBlAGIA
OQA3ADcAOAA4AGMAMQBjADYAMwA0ADMANgAwADgAYwA3AGIAYwBhADkAZgA2AGEANAA4ADYAYwBi
AGYALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgAFQAVgBBACAAMgAwADIANAAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZQBiADkANwA3ADgAOABjADEAYwA2ADMANAAzADYAMAA4AGMANwBiAGMAYQA5
AGYANgBhADQAOAA2AGMAYgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1
ADYAZAAxAGMAOAAxADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA5ADAAOQAuADMAOQAwADMAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA5ADAAOQAuADMAOQAwADMAMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADQPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{4e6b99fc-19ee-4f34-bc50-7101e6970b40}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_bfca5fc1f2354faca5c43958c60d9504"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath"
          ReadWriteVariables="User::Execute">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                
                Execute(settings);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Execute
		/// </summary>
		/// <param name="settings"></param>
		/// <returns></returns>
		private void Execute(dynamic settings)
        {
             Dts.Variables["User::Execute"].Value = settings["execute"];
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_bfca5fc1f2354faca5c43958c60d9504</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:DisplayName>
    <msb:ProjectId>{27DC566E-74A9-4D67-8A1E-EA731ECF6D6A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_bfca5fc1f2354faca5c43958c60d9504.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.dll">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
AAAFAGwAAAC4BQAAI34AACQGAAAICAAAI1N0cmluZ3MAAAAALA4AAOABAAAjVVMADBAAABAAAAAj
R1VJRAAAABwQAADsAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAAMAAAAAcA
AAALAAAACwAAAAQAAAA6AAAAFAAAAAEAAAACAAAAAwAAAAQAAAAIAAAAAQAAAAcAAAABAAAAAwAA
AAEAAAAAALkEAQAAAAAABgAhA2QGBgCwA2QGBgBtAlEGDwDYBgAABgCaAlwFBgAEA1wFBgDlAlwF
BgCXA1wFBgBBA1wFBgBaA1wFBgCxAlwFBgDMAvwDCgB1A08ECgDLAU8EBgCXB+oEBgBuBeoEDgAk
AmQGBgA1AmQGDgAkAGQGBgBLAOoEDgAbAmQGBgB/AOoEBgCSAeoEEgDIB6AEBgCGAOoEBgBQAlEG
BgDnBYQGBgB4BScFEgAGAooEEgCBAooEEgDnARIFBgDTB+oEBgAkBOoECgB4BE8EFgAaB2oBFgAo
AWoBGgATBjwFBgArBJgABgBVAZgABgAxAeoEHgCEBbUFHgAkB7UFHgDcBbUFDgDUBWQGHgA8B7UF
BgAWAO4ACgD/BU8EBgD4B1wFAAAAAI8AAAAAAAEAAQABABAA/QTBADkAAQABAAAAEACLBucGPQAC
AAUAAAEQAE4H5wZ9AAQACQCDARAACAAAAD0ABQAMAIMBEAAvAAAAPQAGAAwAgwEQAD0AAAA9AAcA
DAABAAgFyQARAPEEnAERALsBoAERAAkBpAEWAAEAqAEWAAEAtwEWAAEAtwEWAA8AtwEWADYAtwEW
AEQAxgEWAHgA1wFQIAAAAACGAAMFBgABALwhAAAAAIEAzgMSAQEAOCIAAAAAgQCwBOkBAgCcJAAA
AACGGDIGBgAEAKQkAAAAAIMYMgYGAAQArCQAAAAAkwjjBe8BBADYJAAAAACTCKMB9AEEAN8kAAAA
AJMIrwH5AQQA5yQAAAAAlgitB/8BBQDuJAAAAACGGDIGBgAFAPYkAAAAAJEYOAYEAgUAAAABAFcH
AAABAJ4HAAACABkBAAABAOoDCQAyBgEAEQAyBgYAGQAyBgoAKQAyBhAAMQAyBhAAOQAyBhAAQQAy
BhAASQAyBhAAUQAyBhAAWQAyBhAAYQAyBhAAaQAyBgYAiQAyBgYAkQAyBgYA0QAyBgYA8QAyBhUA
AQFaASEACQH3BSUAcQB2BykAEQEWBy8AGQHhBDUAIQHWAzwACQGQB0AAKQEyBgYAeQAiBCUAMQGK
AUgAOQHfB04AKQHwA1MAuQBDAV4ASQH/AWYAWQGoBXAADAD/AZkADACmB6UAFAAhAbMAEQG5BwEA
EQF+B70ACQGQB8MACQEBCMkAeQEoBswACQGJB9UAWQHrB9wAHAD/AZkAHACmB6UAJAAhAQcBIQHg
AxIBLAD/AZkALACmB6UAWQE/BtwANAD/AZkANACmB6UAPAAhAQcBRAAhAVEBeQEWBGEBcQAyBgYA
eQAyBgYAuQD0B2oB2QAyBnAB+QAyBgYAJABrAOQCKQCDAD8CLgALABcCLgATACACLgAbAD8CLgAj
AEgCLgArAHECLgAzAHECLgA7AHcCLgBDAEgCLgBLAIACLgBTAHECLgBbAJoCQwBjAOQCSQCDAD8C
YwB7AOQCgQBzAOQCowBzAOQCwwBzAOQC4wBzAOQCGwADAAEABAADAAAA5wUIAgAAwwENAgAAsQcS
AgIABgADAAIABwAFAAEACAAFAAIACQAHAIsAqQDvAP0AFwEoATgBRAEEgAAAAQAAAIIiz1EAAAAA
AABUAAAABAAAAAAAAAAAAAAAeAHlAAAAAAAQAAAAAAAAAAAAAACBATAEAAAAAAQAAAAAAAAAAAAA
AHgBlwEAAAAABAAAAAAAAAAAAAAAeAHqBAAAAAAQAAAAAAAAAAAAAACBAaIAAAAAAAQAAAAAAAAA
AAAAAIoBYAcAAAAABAAAAAAAAAAAAAAAkwGXBQAAAAAAAAAAAQAAAJUGAAAFAAIABgACAAcAAgA5
AFoAAAAAPD5wX18wADw+b19fMQA8PnBfXzEASUVudW1lcmFibGVgMQBDYWxsU2l0ZWAxADw+b19f
MgA8PnBfXzIAPD5vX18zADw+cF9fMwBBY3Rpb25gMwBTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5
NThjNjBkOTUwNAA8PnBfXzQARnVuY2A0AEFjdGlvbmA2ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQx
YzgxM2IAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNl
AG1lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEZpbGUAZ2V0X01hY2hpbmVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
Q29tYmluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENhbGxTaXRlAER5bmFtaWNBdHRyaWJ1dGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJuaW5nAFRvU3RyaW5nAFBhdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5O
ZXQuTWFpbABTZW5kTWFpbABTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5NThjNjBkOTUwNC5kbGwA
Z2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AX2xvY2F0aW9uAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAENTaGFycEFy
Z3VtZW50SW5mbwBNaWNyb3NvZnQuQ1NoYXJwAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJw
LlJ1bnRpbWVCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVy
AEV2ZW50c09iamVjdFdyYXBwZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAC5jdG9y
AC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdi
MGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzAGdldF9W
YXJpYWJsZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0dGlu
Z3MAc2V0dGluZ3MAU3lzdGVtLldlYi5FeHRlbnNpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25j
YXQARm9ybWF0AE9iamVjdABzdWJqZWN0AFRhcmdldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3Vs
dABTbXRwQ2xpZW50AEVudmlyb25tZW50AFJlYWRBbGxUZXh0AEdldEluZGV4AGdldF9Bc3NlbWJs
eQBFbXB0eQAAABd7ADAAfQA6AHsAMQB9ADoAewAyAH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMA
awBhAGcAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUABy
AG8AagBlAGMAdAA6ADoAUwBlAHQAdABpAG4AZwBzAFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMA
LgBqAHMAbwBuAAAPRQB4AGUAYwB1AHQAZQAAB3sAMAB9AAATRQBSAFIATwBSACAALQAgACgAAQMp
AAAbVQBzAGUAcgA6ADoARQB4AGUAYwB1AHQAZQAAD2UAeABlAGMAdQB0AGUAAAlTAGUAbgBkAAAV
cwBtAHQAcABTAGUAcgB2AGUAcgAAIWYAcgBvAG0ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAACF0
AG8ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAZQBzAABxUwBUAF8ANQA4ADkANAA1ADEANQAwADEA
YwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAH68GfRriCU6qG8tHjWgcQQAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERdQUHAhwSQQMAAA4DIAAOBSAAEoCJBSAAEoCNBiABEoCRHAMgABwH
AAQODhwcHAUAAg4ODgQAAQ4OBjABAR4ADgMKARwHAAESXRGAoQkAAhKApRGAqQ4aAAUSgLERgLUO
FRKAuQESXRJdFRKAuQESgKUNFRJNARUSUQMSVRIIHAsAARUSTQETABKAsQMGEwAJFRJRAxJVEggc
CSADARMAEwETAgUgABKAvQUAAg4OHAIGDgggBQIIDg4OCAYAAw4ODg4SAAMSgLERgLUSXRUSgLkB
EoClDRUSTQEVElkEElUcDhwJFRJZBBJVHA4cCiADEwMTABMBEwIEIAEBHBAVEk0BFRJlBhJVEmEc
HA4ODxUSTQEVElkEElUSXRwSYQsVElkEElUSXRwSYQwVEmUGElUSYRwcDg4PIAYBEwATARMCEwMT
BBMFCCAFAQgODg4IBSAAEoDBByACAQ4SgMEIt3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUIsD9f
fxHVCjoDBhJtAwYScQMGEhAOBhUSTQEVElEDElUSCBwOBhUSTQEVElkEElUcDhwQBhUSTQEVElkE
ElUSXRwSYREGFRJNARUSZQYSVRJhHBwODgUgAgEODgQAABJtBAAAEnEFAAEBEnEEAAASEAMAAAEE
CAASbQQIABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAAAFAQAAAAAIAQAD
VFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA7DgAAAAAAAAAAAAABjkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPg4AAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAz1GCIgAAAQDPUYIiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAVABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUA
NgBkADEAYwA4ADEAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAOAAzADQALgAyADAAOQA0ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYgBmAGMAYQA1AGYAYwAxAGYAMgAzADUANABmAGEAYwBhADUAYwA0ADMAOQA1ADgAYwA2
ADAAZAA5ADUAMAA0AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfAGIAZgBjAGEANQBmAGMAMQBmADIAMwA1ADQAZgBhAGMAYQA1
AGMANAAzADkANQA4AGMANgAwAGQAOQA1ADAANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABl
ADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgAOAAzADQALgAyADAAOQA0ADMAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAAzADQALgAyADAAOQA0ADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAGDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProcessCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{B6E07C53-B81E-4748-9710-C370A55DE0A4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProcessCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_589451501c0a4de7b0e22ca56d1c813b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_589451501c0a4de7b0e22ca56d1c813b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Microsoft.AnalysisServices.Tabular;
using Task = System.Threading.Tasks.Task;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Globalization;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
	{
		private const int MaxRetries = 5;

		private const int ReprocessDays = 4*7;

		private static string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

                var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
                var timingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Timings.json");

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
				string tabularConnectionString = settings["tabularConnectionString"];

				ConcurrentDictionary<string, int> timings;
				try
				{
					timings = File.Exists(timingsPath) ? new JavaScriptSerializer().Deserialize<ConcurrentDictionary<string, int>>(File.ReadAllText(timingsPath)) ?? new ConcurrentDictionary<string, int>() : new ConcurrentDictionary<string, int>();
				}
				catch (Exception ex)
				{
					Dts.Events.FireWarning(0, _location, $"Timings -> {tabularConnectionString}\n{ex}", string.Empty, 0);
					timings = new ConcurrentDictionary<string, int>();
				}

				int parallelPartitions = settings["parallelPartitions"];

				var semaphore = new SemaphoreSlim(settings["threads"]);
				var tasks = GetDatabaseNames(tabularConnectionString).OrderByDescending(d => timings.TryGetValue(d, out var t) ? t : 0).Select(databaseName => Task.Run(() => {
					semaphore.Wait();
					try
					{
						var then = DateTime.Now;
						var reprocessDays = settings["reprocessDays"][databaseName] ?? ReprocessDays;
						Process(tabularConnectionString, databaseName, parallelPartitions, reprocessDays);
						timings[databaseName] = (int)(DateTime.Now - then).TotalSeconds;
					}
					finally
					{
						semaphore.Release();
					}
				}));
				Task.WaitAll(tasks.ToArray());

				File.WriteAllText(timingsPath, new JavaScriptSerializer().Serialize(timings));

				Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
                Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
                SendMail($"ERROR - ({_location})", $"{ex}");
            }
		}

		/// <summary>
		/// Process 
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="databaseName"></param>
		/// <param name="parallelPartitions"></param>
		/// <param name="reprocessDays"></param>
		private void Process(string tabularConnectionString, string databaseName, int parallelPartitions, int reprocessDays)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				var database = server.Databases.FindByName(databaseName);
				ProcessDimensions(database);
				ProcessFacts(database, parallelPartitions, reprocessDays);
			}
			catch (Exception ex)
			{
				Dts.Events.FireError(0, _location, $"{databaseName} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{databaseName} -> {tabularConnectionString}\n{ex}");
				throw;
			}
			finally
			{
				server.Disconnect();
			}
		}

		/// <summary>
		/// Process
		/// </summary>
		/// <param name="database"></param>
		/// <returns></returns>
		private void ProcessDimensions(Database database)
        {
	        var objects = database.Model.Tables.Where(t => t.Partitions.Count == 1).Select(t => $"{{\"database\": \"{database.Name}\", \"table\": \"{t.Name}\"}}").ToList();
	        ProcessObjects(database, objects);
		}

		/// <summary>
		/// Process
		/// </summary>
		/// <param name="database"></param>
		/// <param name="parallelPartitions"></param>
		/// <param name="reprocessDays"></param>
		/// <returns></returns>
		private void ProcessFacts(Database database, int parallelPartitions, int reprocessDays)
        {
			var objects = database.Model.Tables.
				Where(t => t.Partitions.Count > 1).
				SelectMany(t => t.Partitions.
					Where(p => p.State != ObjectState.Ready || p.RefreshedTime < DateTime.ParseExact(p.Name, "yyyy-MM", CultureInfo.InvariantCulture).AddMonths(1).AddDays(reprocessDays)).
					Select(p => $"{{\"database\": \"{database.Name}\", \"table\": \"{t.Name}\", \"partition\": \"{p.Name}\"}}"));
			
			foreach (var group in objects.Select((o, i) => new { o, i }).GroupBy(o => o.i / parallelPartitions).Select(g => g.Select(s => s.o).ToList()))
				ProcessObjects(database, group);
		}

		/// <summary>
		/// ProcessObjects
		/// </summary>
		/// <param name="objects"></param>
		/// <param name="database"></param>
		private void ProcessObjects(Database database, List<string> objects)
        {
	        for (int retry = 1; retry <= MaxRetries; retry++)
			{
				try
				{
					var command = $"{{\"refresh\": {{\"type\": \"full\", \"objects\": [{string.Join(",", objects)}]}}}}";

					var fireAgain = true;
					Dts.Events.FireInformation(0, _location, $"EXECUTE:\n{database.Name} -> {database.Parent.ConnectionString}\n{command}", string.Empty, 0, ref fireAgain);

					var result = database.Parent.Execute(command);

					if (result.ContainsErrors)
						throw new Exception($"{database.Name} -> {database.Parent.ConnectionString}\n{command}\n{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}");

					Dts.Events.FireInformation(0, _location, $"COMPLETE:\n{database.Name} -> {database.Parent.ConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
					break;
				}
				catch (Exception ex)
				{
					if (retry >= MaxRetries)
					{
						Dts.Events.FireError(0, _location, $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}", string.Empty, 0);
						SendMail($"ERROR - ({_location})", $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}");
						throw;
					}
					else
					{
						Dts.Events.FireWarning(0, _location, $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}", string.Empty, 0);
						SendMail($"WARNING - ({_location})", $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}");
					}
					Thread.Sleep(1000 * 30);
				}
			}
		}

        private List<string> GetDatabaseNames(string tabularConnectionString)
        {
            Server server = new Server();
            try
            {
                server.Connect(tabularConnectionString);
                return server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_")).Select(d => d.Name).ToList();
            }
            finally
            {
                server.Disconnect();
            }
        }
        
        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            try
            {
	            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:DisplayName>
    <msb:ProjectId>{C2392EE1-E4DF-4757-8192-26F65B251355}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_589451501c0a4de7b0e22ca56d1c813b.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.dll">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
BgDICooJDgCVBUQLDgDiC0QLBgD4CNoNBgDNAa4DBgC/Aa4DBgAsAooJEgCpCoUMDgAfBEQLBgCS
AooJFgAzAiILEgA5D4UMBgB+Aa4DEgAEBIUMBgBaApAPBgCRCSAIFgAJBmUMBgCyBIoJBgC3CYoJ
DgC+CkQLFgChAWUMBgC+AooJFgAABmUMBgDjBIoJBgALA4oJGgBTDy8JBgA1BkEMBgC2C6AMBgDs
Cv8JGgDfBRkJGgCBBhkJGgB9BeoJBgCsAa4DBgCYCIoJBgB0C4oJBgBeD4oJCgAHCdQIHgBZDbsE
HgAlBLsEBgCfCFQDIgDpCxQKBgBqBFQDBgBGBIoJJgCrC4QLFgCjC2UMJgCaDYQLJgD4CoQLJgCC
DYQLCgDOC9QIBgDkAYoJFgAvBCILFgCMASILEgDiC/oEDgCCCkQLDgApCUQLDgByCkQLBgAIDCAO
BgA6BIoJEgBqD4UMBgAuBCAOBgDJAyAIBgATEEoKDgCVCkQLDgA/AkQLEgBcCoUMBgA0CooJDgDr
DkQLDgD0BUQLAAAAAEsDAAAAAAEAAQAAARAAFgIAADkAAQABAAEAEADACX0DTQADAAcAAAAQAKcM
Gw05AAYADwAAARAAtA0bDc0ACAATAAMhEACqAwAAOQAJABYAAwEQAAEAAAA5ABMAIQADARAA1QAA
ADkAGQAkAAMBEAA5AAAAOQAbACYAAwEQAGwAAAA5ABwAKAADARAA6gAAADkAIQAsAIMBEACEAgAA
OQAjAC4AgwEQAEQDAAA5ACwALgAhANwDKwAhANADLwBRgBANIQZRgLYOIQYRANAJdgERAJ8JJAYR
ADwFKQYRAOgDLgY2AEADMgYWABYANgYWAE4ANgYWAJkCPwYWABQDTQYWAOYCWgYWAIEAcAYWAP8A
gAYWAKEAigYWAB8BkwYGANANnAYGAKwNoAYGABoFqQYGAL0NrgYGAH4IdgEGAEIOIQYGAIgEdgEG
ANQBsQYGAJ4FtQYGAMQOIQYGAJ4FtQYGAEIOIQYGAOoBuQYGAMUCwwYGAOwP0AYGANQB1AYWAM4A
2AYWAHcB6gYWAA8C2AYWAIsC+gYWALcC2AYWAN8CCgcWAAQD2AYWADID2AYWADkDIAcWAM4A2AYW
AHcB2AYWAA8C2AYWAIsCNQcWALcCSwdQIAAAAACGCOYKuwMBAFggAAAAAIYIrwjuBQEAYCAAAAAA
hhgiDAAFAQB4IAAAAADGAPENYQcDAMUgAAAAAMYA+AP1BAQA/CAAAAAAxgCWCHAABABsIQAAAACG
AMYJBgAEAJAlAAAAAIEAaA5mBwQARCYAAAAAgQD4DW4HCAC4JgAAAACBAHgOdAcJANQnAAAAAIEA
hQ58BwwAmCoAAAAAgQBjDYcHDgAoKwAAAACBAD8JkAcPAIgtAAAAAIYYIgwGABEAkC0AAAAAgxgi
DAYAEQCYLQAAAACTCLILlgcRAMQtAAAAAJMIJAXFBREAyy0AAAAAkwgwBZwHEQDTLQAAAACWCC0P
owcSANotAAAAAIYYIgwGABIA4i0AAAAAkRgoDKgHEgDuLQAAAACRGCgMqAcSAJAtAAAAAIYYIgwG
ABIA+i0AAAAAgwAfAKwHEgAKLgAAAACDAFcArAcTABouAAAAAIMAogKyBxQAIy4AAAAAgwDvAr0H
FgBPLgAAAACDAB0D0AcXAFcuAAAAAIMAigDaBxgAZC4AAAAAgwAIAecHGQBsLgAAAACDAKoA7gca
AH4uAAAAAIMAKAH0BxsAkC0AAAAAhhgiDAYAHACILgAAAACDAMMA+gccAKguAAAAAIMAQQH/Bx0A
kC0AAAAAhhgiDAYAHgDQLgAAAACDAPEBBgAeAJAtAAAAAIYYIgwGAB4ArDAAAAAAgwBMAQUIHgCQ
LQAAAACGGCIMBgAfAOgwAAAAAIMAZAELCB8ATDEAAAAAgwD8ARYIIACcMQAAAACDAMwCHQghAJAt
AAAAAIYYIgwGACIArDEAAAAAgwBxAicIIgAAAAEACQsAAAIAswgAAAEABAgAAAEAfggAAAIAiAQA
AAMAQg4AAAQAxA4AAAEAngUAAAEAngUAAAIAQg4AAAMAxA4AAAEAngUAAAIAlA4AAAEAfggAAAEA
/w4AAAIAEAQAAAEABAgAAAEA7A8AAAEA7A8AAAEACQsAAAIAswgAAAEAnQgAAAEA0A4AAAEAPwwA
AAEAnQkAAAEA5gMAAAEA5gMAAAEA5gMAAAEAiAQAAAEA7A8AAAEA7A8AAAEAIAsAAAEACQsAAAEA
IAsJACIMAQARACIMBgAZACIMCgApACIMEAAxACIMEAA5ACIMEABBACIMEABJACIMEABRACIMEABZ
ACIMEABhACIMEABpACIMBgCBACIMFQCJACIMBgCRACIMBgAhASIMBgBxASIMBgCRASIMGwAMANwD
KwAMANADLwBxACIMBgAUAC0PRgAUAPENUAAcAC0PRgAcAPENUAAUAPgDYAAcAPgDYABxAJYIcACp
AdkOdwC5AXgEjACpAcYLcACZAHAOkADBAVUNlgDJAXgJnADRAe4HowCpAdkOpwDZAdsErwDhASIM
BgDpAdUPtQDhARQIugBZAVgExQD5AbgPzgA0ALcF7AA0ACEPKwARArcF+QD5AfYPAwE8ALcF7AA8
ACEPKwBEABgENAFMABgESQHpAacOUgFUACIMBgDBAZwOaQGpAdkObwGpAScQdgEhAl0IeQFcALcF
7ABcACEPKwBkABgESQH5AS8MAwFsALcF7ABsACEPKwB0ABgENAF8ACIMxwExAjEIzQGEACIMxwEx
AgcP9AExAgcQFAK5AEgJJwLhAQoILgLpAeEPMwLBAUQPAQCpAdkOOQIhAv4LPwKpAdIOSAKxACIM
BgBBAg4PEACxAHQNWAJJApUEXgJBAhYPBgCpAP0IbgJRAkoNdAKMACIMxwExAugEggKUACIMxwEx
AsUPrgKcACIMxwExAhwQ7gKkACIMxwExAgcPGgOsACIMxwExAv8PSwO0ACIMxwG8ABQMqAPEAIQP
uwNhAswPwANpAq8FBgCpAcsJzgNxAm8EcACpAHkP2QNBAmkIcACpAdIO3gMhAtoJ5ANBAuYH7wPZ
AFUOwAMxAsAP9QPMACIMxwHUACIMxwGhACIMEACBAgsLLwTcACIMxwHkACIMxwH5AWcLXwTsALcF
7ADsACEPKwD0ALcF7AD0ACEPKwD8ABgENAEEARgExgSZACIMBgBZAQ8Q1gR5ASIM3ASZASIMBgDh
ADMO5AQMAa4P9QQUASIMAAUcASIMxwEUAeYKuwP5AAMNHgUJAdIKcACpAaQIKgVUAPgHMwWpAiIM
xwG5AOIKPAUZASgPBgApAe4PTgUkAbcF7AAkASEPKwAsARgExgQpATsKdwUxAVQMgwVUAIEJAAUZ
AacF9QSxAm8EcAA0ASIMxwE8ASIMxwE5Ab4FuQU5AaAEvwWBAUwFxQUpAeAOywUpAcYN1gUpAa4O
3QUpAasJ5AUUAa8I7gUIAAwAFwYIABAAHAYhAGsAGwkuAAsASQguABMAUgguABsAcQguACMAeggu
ACsAowguADMAowguADsAqQguAEMAegguAEsAsgguAFMAowguAFsAzAhBAGsAGwlDAGMAFglgAHMA
FgljAHsAFglpAJMAcQiAAHMAFgmDAIsAFgmJAJMAcQigAHMAFgnAAHMAFgnDAGMAFgnjAGMAFgkB
AWMAFgkDAWMAFgkjAWMAFglDAWMAFgljAWMAFgmDAWMAFgmjAWMAFgnBAoMAFgkzAGYAgQBPAmQC
wwLEAzQEWQQvBUQFhwWzBQIAAQAEAAMABQAFAAAACQsuCAAAswgzCAAAtgs4CAAAWQU+CAAAMQ9E
CAIAAQADAAIAAgAFAAIAEAAHAAIAEQAJAAEAEgAJAAIAEwALACIAPgBYAG0AdADdABcBKAE/AVcB
ggGRAZsBsAHAAewBegKgAuECDQM/A3UDnQOxAwgEHwRDBEsEfASRBKYEtgTqBPkECAVUBWgFlAWj
BQSAAAABAAAAqSIrXgAAAAAAAH0DAAAEAAAAAAAAAAAAAADzBaEDAAAAABAAAAAAAAAAAAAAAPwF
tQgAAAAADwAAAAAAAAAAAAAA/AVECwAAAAAPAAAAAAAAAAAAAAD8BfoEAAAAAAQAAAAAAAAAAAAA
APMF7gQAAAAABAAAAAAAAAAAAAAA8wWKCQAAAAAQAAAAAAAAAAAAAAD8BV4DAAAAAAQAAAAAAAAA
AAAAAAUGCg4AAAAABAAAAAAAAAAAAAAADgYRCwAAAAAAAAAAAQAAALEMAAAGAAMABwADAAgAAwAJ
AAMACgADAAsAAwAMAAMADQADAAAAAAAEADkLAQAAAAQALgtRAMEAUQBfAYMA5wGHAA4CiQAiAqkA
mwKHAKgCrQC/ArEAqAK1ADUDuQBrA4cAigPVAAMEsQAXBIcAKATVAD4EqQA+BIcAUwSHABQF1QAk
BakAnQWHAKwFAAAAAAA8PmNfX0Rpc3BsYXlDbGFzczNfMAA8PjlfXzVfMAA8UHJvY2Vzc0RpbWVu
c2lvbnM+Yl9fNV8wADw+Y19fRGlzcGxheUNsYXNzNV8wADw+OV9fNl8wADxQcm9jZXNzRmFjdHM+
Yl9fNl8wADw+Y19fRGlzcGxheUNsYXNzNl8wADw+OV9fN18wADxQcm9jZXNzT2JqZWN0cz5iX183
XzAAPD45X184XzAAPEdldERhdGFiYXNlTmFtZXM+Yl9fOF8wADxNYWluPmJfXzAAPD5wX18wADw+
Y19fRGlzcGxheUNsYXNzM18xADw+Y19fRGlzcGxheUNsYXNzNl8xADw+OV9fN18xADxQcm9jZXNz
T2JqZWN0cz5iX183XzEAPD45X184XzEAPEdldERhdGFiYXNlTmFtZXM+Yl9fOF8xADxNYWluPmJf
XzEAPFByb2Nlc3NEaW1lbnNpb25zPmJfXzEAPFByb2Nlc3NGYWN0cz5iX18xADw+cF9fMQBJRW51
bWVyYWJsZWAxAElPcmRlcmVkRW51bWVyYWJsZWAxAENhbGxTaXRlYDEARXF1YWxpdHlDb21wYXJl
cmAxAElFbnVtZXJhdG9yYDEATGlzdGAxAENTJDw+OF9fbG9jYWxzMQBJbnQzMgA8PjlfXzIAPE1h
aW4+Yl9fMgA8UHJvY2Vzc0ZhY3RzPmJfXzIAPD5wX18yADw+Zl9fQW5vbnltb3VzVHlwZTBgMgBG
dW5jYDIASUdyb3VwaW5nYDIATWV0YWRhdGFPYmplY3RDb2xsZWN0aW9uYDIAQ29uY3VycmVudERp
Y3Rpb25hcnlgMgA8UHJvY2Vzc0ZhY3RzPmJfXzMAPD5vX18zADw+cF9fMwBGdW5jYDMAPD45X182
XzQAPFByb2Nlc3NGYWN0cz5iX182XzQAPD5wX180AEZ1bmNgNAA8PjlfXzUAPFByb2Nlc3NGYWN0
cz5iX181ADw+cF9fNQA8PjlfXzZfNgA8UHJvY2Vzc0ZhY3RzPmJfXzZfNgA8PnBfXzYAQWN0aW9u
YDYAPD45X182XzcAPFByb2Nlc3NGYWN0cz5iX182XzcAPD5wX183ADw+cF9fOAA8PjkAPD5vX185
ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5
NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0
aW9ucy5HZW5lcmljAFRocmVhZAA8aT5pX19GaWVsZAA8bz5pX19GaWVsZABkZWZhdWx0SW5zdGFu
Y2UAR2V0SGFzaENvZGUAWG1sYU1lc3NhZ2UAbWVzc2FnZQBJbnZva2UAVGFibGUAVmFyaWFibGUA
SUVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUARmlsZQBnZXRfTmFtZQBnZXRfTWFjaGluZU5hbWUAZGF0YWJhc2VOYW1lAEZpbmRCeU5hbWUA
Z2V0X1JlZnJlc2hlZFRpbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBDb21iaW5lAFR5cGUAV2hlcmUAU3lzdGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2Vydmlj
ZXMuQ29yZQBzZW1hcGhvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AGdldF9JbnZhcmlhbnRDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBEYXRhYmFzZQBkYXRhYmFzZQBSZWxlYXNlAERpc3Bvc2UAQ3JlYXRl
AGdldF9TdGF0ZQBEZWJ1Z2dlckJyb3dzYWJsZVN0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAE9i
amVjdFN0YXRlAENhbGxTaXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAERl
YnVnZ2VyQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVl
AFRyeUdldFZhbHVlAHZhbHVlAFNlcmlhbGl6ZQBEZXNlcmlhbGl6ZQBTeXN0ZW0uVGhyZWFkaW5n
AE9yZGVyQnlEZXNjZW5kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdhcm5pbmcA
Z2V0X0Nvbm5lY3Rpb25TdHJpbmcAdGFidWxhckNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAUGF0
aABTdGFydHNXaXRoAGdldF9pAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAGdldF9Nb2RlbABTY3JpcHRPYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFdhaXRB
bGwAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuZGxsAGdldF9JdGVtAHNldF9J
dGVtAFN5c3RlbQBTZW1hcGhvcmVTbGltAHJlc291cmNlTWFuAG9wX0xlc3NUaGFuAFRpbWVTcGFu
AFNjcmlwdE1haW4ASm9pbgBfbG9jYXRpb24ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRp
b24AQWN0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFhtbGFNZXNzYWdlQ29s
bGVjdGlvbgBUYWJsZUNvbGxlY3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9uAFBhcnRpdGlvbkNvbGxl
Y3Rpb24AWG1sYVJlc3VsdENvbGxlY3Rpb24AUGFydGl0aW9uAEV4Y2VwdGlvbgBnZXRfRGVzY3Jp
cHRpb24AUnVuAGdldF9vAEN1bHR1cmVJbmZvAENTaGFycEFyZ3VtZW50SW5mbwBTbGVlcABNaWNy
b3NvZnQuQ1NoYXJwAFN5c3RlbS5MaW5xADxpPmpfX1RQYXIAPG8+al9fVFBhcgBNaWNyb3NvZnQu
QW5hbHlzaXNTZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBJRm9ybWF0UHJvdmlkZXIATWlj
cm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAVG9VcHBlcgBFdmVudHNPYmplY3RXcmFwcGVyAFNlcnZlcgBKYXZhU2NyaXB0U2VyaWFs
aXplcgBGaXJlRXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IASW52
b2tlQ29uc3RydWN0b3IAU3lzdGVtLkRpYWdub3N0aWNzAGdldF9Ub3RhbFNlY29uZHMAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfTWVzc2FnZXMATWF4UmV0
cmllcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzAGdldF9U
YWJsZXMAZ2V0X1ZhcmlhYmxlcwBHZXREYXRhYmFzZU5hbWVzAGdldF9EYXRhYmFzZXMAQ1NoYXJw
QXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAdGltaW5ncwBTZXR0aW5ncwBzZXR0
aW5ncwBBZGRNb250aHMAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAFBy
b2Nlc3NEaW1lbnNpb25zAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMA
Z2V0X1BhcnRpdGlvbnMAcGFyYWxsZWxQYXJ0aXRpb25zAGdldF9Db250YWluc0Vycm9ycwBQcm9j
ZXNzAGdldF9EdHMAUHJvY2Vzc0ZhY3RzAFByb2Nlc3NPYmplY3RzAG9iamVjdHMAZ2V0X0V2ZW50
cwBFeGlzdHMAQWRkRGF5cwBSZXByb2Nlc3NEYXlzAHJlcHJvY2Vzc0RheXMAQ29uY2F0AEZvcm1h
dABQYXJzZUV4YWN0AE5hbWVkTWV0YWRhdGFPYmplY3QAc3ViamVjdABTZWxlY3QAQ29ubmVjdABE
aXNjb25uZWN0AFRhcmdldABXYWl0AGdldF9EZWZhdWx0AFhtbGFSZXN1bHQAc2V0X1Rhc2tSZXN1
bHQAU210cENsaWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVudABnZXRfUGFyZW50AGdldF9D
dXJyZW50AFN5c3RlbS5Db2xsZWN0aW9ucy5Db25jdXJyZW50AGdldF9Db3VudABDb252ZXJ0AENh
c3QAVG9MaXN0AE1vdmVOZXh0AFJlYWRBbGxUZXh0AFdyaXRlQWxsVGV4dABnZXRfTm93AEdldElu
ZGV4AEdyb3VwQnkAVG9BcnJheQBnZXRfQXNzZW1ibHkAU2VsZWN0TWFueQBFbXB0eQAAAAAALXsA
ewAgAG8AIAA9ACAAewAwAH0ALAAgAGkAIAA9ACAAewAxAH0AIAB9AH0AABd7ADAAfQA6AHsAMQB9
ADoAewAyAH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBlAAAhUwB5AHMA
dABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUAByAG8AagBlAGMAdAA6ADoAUwBlAHQAdABp
AG4AZwBzAFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMALgBqAHMAbwBuAAAZVABpAG0AaQBuAGcA
cwAuAGoAcwBvAG4AAC90AGEAYgB1AGwAYQByAEMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBu
AGcAACVUAGkAbQBpAG4AZwBzACAALQA+ACAAewAwAH0ACgB7ADEAfQABJXAAYQByAGEAbABsAGUA
bABQAGEAcgB0AGkAdABpAG8AbgBzAAAPdABoAHIAZQBhAGQAcwAAB3sAMAB9AAATRQBSAFIATwBS
ACAALQAgACgAAQMpAAAdewAwAH0AIAAtAD4AIAB7ADEAfQAKAHsAMgB9AAFTewAiAHIAZQBmAHIA
ZQBzAGgAIgA6ACAAewAiAHQAeQBwAGUAIgA6ACAAIgBmAHUAbABsACIALAAgACIAbwBiAGoAZQBj
AHQAcwAiADoAIABbAAADLAAAB10AfQB9AAATRQBYAEUAQwBVAFQARQA6AAoAAAkgAC0APgAgAAED
CgAAFUMATwBNAFAATABFAFQARQA6AAoAABdXAEEAUgBOAEkATgBHACAALQAgACgAAQlTAGUAbgBk
AAAVcwBtAHQAcABTAGUAcgB2AGUAcgAAIWYAcgBvAG0ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMA
ACF0AG8ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAZQBzAABxUwBUAF8ANQA4ADkANAA1ADEANQAw
ADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAbVgBlAHIAaQBmAGkAYwBhAHQAaQBv
AG4AXwAAG3IAZQBwAHIAbwBjAGUAcwBzAEQAYQB5AHMAAA9QAHIAbwBjAGUAcwBzAAAdewAiAGQA
YQB0AGEAYgBhAHMAZQAiADoAIAAiAAAbIgAsACAAIgB0AGEAYgBsAGUAIgA6ACAAIgAABSIAfQAA
D3kAeQB5AHkALQBNAE0AASMiACwAIAAiAHAAYQByAHQAaQB0AGkAbwBuACIAOgAgACIAAAAAABxk
1f1Np11CnOQ8BrXb5ZUABCABAQgDIAABBSABARERBCABAQ4FIAEBET0GIAEBEYDFCBUSCAITABMB
AwYTAAMGEwEKBwEVEggCEwATAQcVEoDRARMACQAAFRKA0QETAAcgAgITABMABxUSgNEBEwEFIAEI
EwAGBwITABMBAhMAAyAADgITAQkAAw4SgNkOHRwKBwUSHA4OElESUQMAAA4FIAASgOEFIAASgOUG
IAESgOkcAyAAHAcABA4OHBwcBQACDg4OBAABDg4GMAEBHgAOAwoBHAgAARKArRGA+Q4AAxKBARGB
BRKArRKArQ4VEoChARUSdQMSgKkcDgwAARUSgKEBEwASgQEJAAISgQkRgQ0OEwADEoEBEYEFEoCt
FRKAgQESgQkQFRKAoQEVEoClBBKAqRwOHAsVEoClBBKAqRwOHAogAxMDEwATARMCCRUSdQMSgKkc
DgggAhMCEwATAQQAAQIOBxUSgIkCDggJCgEVEoCJAg4IBSAAEoERBgADDg4cHAIGDgggBQEIDg4O
CA4VEoChARUSdQMSgKkcCAkVEnUDEoCpHAgUFRKAoQEVEoClBBKAqRKArRwSgI0PFRKApQQSgKkS
gK0cEoCNBhUSaQIOCAUgAgEcGBkQAgIVEoEdAR4AFRKAgQEeABUSaQIeAB4BBAoCDggHFRJpAg4S
XRkQAgIVEoCBAR4BFRKAgQEeABUSaQIeAB4BBQoCDhJdDRABAR0eABUSgIEBHgAECgESXQYAAQEd
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
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2F4AAAAAAAAAAAAA8l4AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAOReAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAA
AAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAACYEAAAAAAAAAAAAACYE
NAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQArXqkiAAAB
ACteqSI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4A
ZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASGAwAAAQBTAHQAcgBp
AG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8A
bQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABUAFYAQQAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA1ADgAOQA0ADUA
MQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIAAAA+
AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA4ADcAMwAuADIANAAxADAA
NwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA1ADgAOQA0ADUAMQA1
ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBkAGwA
bAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgAFQAVgBBACAAMgAwADIANAAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEA
cgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBU
AF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEA
YwA4ADEAMwBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABf
ADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMA
OAAxADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4
ADcAMwAuADIANAAxADAANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4AOAA4ADcAMwAuADIANAAxADAANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAAEPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RemoveCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{7466608a-32ca-4111-bfda-0dc1bfdcb510}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="RemoveCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Collections.Generic;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];

                Remove(tabularConnectionString, Directory.GetFiles(bimPath, "*.bim").ToList());
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Remove
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="bimFiles"></param>
		/// <returns></returns>
		private void Remove(string tabularConnectionString, List<string> bimFiles)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
					server.Connect(tabularConnectionString);
					var databases= bimFiles.ToDictionary(b => Path.GetFileNameWithoutExtension(b));
                    server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_") && !databases.ContainsKey(d.Name)).ToList().ForEach(d => {
                        var command = $"{{\"delete\": {{\"object\": {{\"database\": \"{d.Name}\"}}}}}}";
                        server.Execute(command);

						bool fireAgain = true;
						Dts.Events.FireInformation(0, _location, $"{d.Name} -> {tabularConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
					});                    
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, _location, $"{string.Join(",", bimFiles)} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:DisplayName>
    <msb:ProjectId>{C262DEBD-67ED-437B-ACDA-A2F35EF4C1CD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.dll">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
BgA4BKQGBgCPA6QGBgCqA+gECgBTBGYFCgCxAmYFBgCuCQEGBgDeBgEGDgDlAioHDgC4ByoHBgCA
AJIBBgATAxcIBgDHAAEGBgDOAJIBEgBsABcIBgD3AAEGEgAKAxcIBgDiAAEGBgBSAgEGFgDyCbcF
BgD+AAEGBgAuAwQIBgCMB1IIBgDoBm8GFgD1AqEFFgBfA6EFFgDNAloGBgD9CQEGBgAoBQEGCgCP
BWYFGgDzCCoCGgDTASoCHgDGB4QGBgA3BTgBBgAMAjgBBgDoAQEGIgCBB1oHEgB5BxcIIgA/CVoH
IgD0BloHIgAnCVoHBgBeAJIBBgBnCjgBEgDdAR4HCgCkB2YFJgC4B2kCDgC2BioHBgDcAXoJBgB3
AAEGBgCtAdcEBgBRCqQGJgAJCjcIJgDJBjcIAAAAAC8BAAAAAAEAAQABABAAFAZhATkAAQABAAAA
EABZCMAIPQADAAUAAAEQAFEJwAiNAAUACQADIRAAjgEAAD0ABgAMAAMBEAAZAAAAPQAIAA8AAwEQ
ADUAAAA9AAoAEAADARAAlwAAAD0ADAASAIMBEAC5AAAAPQANABQAgwEQAOkAAAA9ABEAFABRgLUI
lwIBAEAGDQERAAgGmgIRAKECngIRALQBowI2ACsBpwIWAAEAqwIGAFoJswIGAA4FDQEGAL8HtwIG
AIcAuwIGAB0JvwIWAC4AxwIWAFcA1gIWAMAAxwIWANsA1gIWAC4AxwIWAFcAxwIWAMAAxwIWANsA
5AIWAPAA9QJQIAAAAACGABoGBgABALAiAAAAAIEAxAQHAwEA+CMAAAAAgQDHBREDAwBcJgAAAACG
GOUHBgAFAGQmAAAAAIMY5QcGAAUAbCYAAAAAkwiIBxcDBQCYJgAAAACTCIkCHAMFAJ8mAAAAAJMI
lQIiAwUApyYAAAAAlgjXCSkDBgCuJgAAAACGGOUHBgAGALYmAAAAAJEY6wcuAwYAwiYAAAAAkRjr
By4DBgBkJgAAAACGGOUHBgAGAM4mAAAAAIMACgAyAwYAZCYAAAAAhhjlBwYABwBkJgAAAACGGOUH
BgAHANgmAAAAAIMArAA3AwcAZCYAAAAAhhjlBwYACABzJwAAAACDAEoAPQMIAAAAAQAOBQAAAgD9
CAAAAQC1CQAAAgDEAQAAAQC+BAAAAQCMAQAAAQCyAQAAAQCyAQkA5QcBABEA5QcGABkA5QcKACkA
5QcQADEA5QcQADkA5QcQAEEA5QcQAEkA5QcQAFEA5QcQAFkA5QcQAGEA5QcQAGkA5QcGAKEA5QcG
APEA5QcGABEB5QcVACEBGgIkACkBnAcoAHEAjQksADEB7wgyADkB+AU4AEEBtAQ/ACkBpwlDAEkB
5QcGAHkAJgUoAFEBSgJLAFkBLApRAEkBywRWANkA+gFhAGkBGAppAAwA7gKDAAwA0AmPAIEB7gKT
AGkBOAqdABQA7gKDABQA0AmPABwAzAHIACQAzAHcAJkBBgnlAKEBJQrsADEB4wkBADEBlQkBASkB
pwkHASkBcQoNAakB2wcQASkBoAkZAZEA5QcGALEBvQkQACwA5QczAaEBWgo5AZEADwlZAaEBIApf
ATQA5QczAaEBVwJ6ATwA5QczAUQALwWiASkBHwatAakBAgW4AdEBBwfBAbEBxQkGAGkBTQfMAUwA
7gKDAEwA0AmPAGkB8gedAFQA7gKDAFQA0AmPAFwAzAHIAGQAzAEhAnEA5QcGAHkA5QcGANkATQox
AvkA5Qc3AhkB5QcGAFEBJAZRAOEBEQIoALEBrAREAikBoAlLAqkBSgZRAikBPAVcAmwAQQpoAggA
BACSAikAewB7Ay4ACwBTAy4AEwBcAy4AGwB7Ay4AIwCEAy4AKwCtAy4AMwCtAy4AOwCzAy4AQwCE
Ay4ASwC8Ay4AUwCtAy4AWwDWA0MAYwAgBEkAewB7A2MAcwAgBKEAawAgBKMAawAgBMMAawAgBOMA
awAgBAMBawAgBCMBawAgBEMBawAgBBwAIAHGAT8CAwABAAQAAwAAAIwHQwMAAKkCSAMAANsJTgMC
AAYAAwACAAcABQABAAgABQACAAkABwB2ALAAvgDTACwBcgGTAZsB5wH4AQgCFAJhAgSAAAABAAAA
giKaUQAAAAAAAAcBAAAEAAAAAAAAAAAAAABuAoUBAAAAABAAAAAAAAAAAAAAAHcCRwUAAAAADwAA
AAAAAAAAAAAAdwIqBwAAAAAEAAAAAAAAAAAAAABuAl0CAAAAAAQAAAAAAAAAAAAAAG4CAQYAAAAA
EAAAAAAAAAAAAAAAdwJCAQAAAAAEAAAAAAAAAAAAAACAAmQJAAAAAAQAAAAAAAAAAAAAAIkCDQcA
AAAADwAAAAAAAAAAAAAAdwJpAgAAAAAAAAAAAQAAAGMIAAAFAAIABgACAAcAAgAIAAIACQACAAoA
AgA3AF0ATwD9AGMAVAFnAG0BawBtAU8AbQEAAAA8PjlfXzNfMAA8UmVtb3ZlPmJfXzNfMAA8PmNf
X0Rpc3BsYXlDbGFzczNfMAA8PnBfXzAAPD5jX19EaXNwbGF5Q2xhc3MzXzEAPFJlbW92ZT5iX18x
ADw+cF9fMQBJRW51bWVyYWJsZWAxAENhbGxTaXRlYDEAQWN0aW9uYDEATGlzdGAxAENTJDw+OF9f
bG9jYWxzMQA8PmNfX0Rpc3BsYXlDbGFzczNfMgA8UmVtb3ZlPmJfXzIAPD5vX18yADw+cF9fMgBG
dW5jYDIARGljdGlvbmFyeWAyADw+cF9fMwBGdW5jYDMAPD5vX180ADw+cF9fNABGdW5jYDQAQWN0
aW9uYDYAU1RfOWExZDMzYzdlOGM5NGFmMDg5YTg0YzBmYTMwZmNiYzYAPD45ADxNb2R1bGU+AFN5
c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRl
N2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
AFRocmVhZABkZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UAVmFyaWFibGUASUVudW1lcmFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTmFtZQBnZXRf
TWFjaGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUA
V2hlcmUAU3lzdGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAENyZWF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDYWxsU2l0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAdmFsdWUAUmVtb3Zl
AERlc2VyaWFsaXplAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBG
aXJlV2FybmluZwB0YWJ1bGFyQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBGb3JFYWNoAFBhdGgA
U3RhcnRzV2l0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFNUXzlhMWQzM2M3ZThjOTRhZjA4OWE4
NGMwZmEzMGZjYmM2LmRsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBK
b2luAEdldEZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbgBfbG9jYXRpb24ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2Ny
aXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9uAFht
bGFSZXN1bHRDb2xsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBBcmd1bWVudElu
Zm8AU2xlZXAATWljcm9zb2Z0LkNTaGFycABTeXN0ZW0uTGlucQBNaWNyb3NvZnQuQW5hbHlzaXNT
ZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVCaW5k
ZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2ZW50c09iamVj
dFdyYXBwZXIAU2VydmVyAHNlcnZlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAEludm9rZUNvbnN0cnVjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAE1heFJldHJpZXMAU1RfNTg5NDUxNTAx
YzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAGJpbUZpbGVz
AEdldEZpbGVzAGdldF9EYXRhYmFzZXMAZGF0YWJhc2VzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdz
AENTaGFycEJpbmRlckZsYWdzAFNldHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uV2ViLkV4dGVuc2lv
bnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AE9i
amVjdABzdWJqZWN0AENvbm5lY3QARGlzY29ubmVjdABUYXJnZXQAZ2V0X0RlZmF1bHQAc2V0X1Rh
c2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVudABDb252ZXJ0AENh
c3QAVG9MaXN0AFJlYWRBbGxUZXh0AEdldEluZGV4AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBU
b0RpY3Rpb25hcnkARGlyZWN0b3J5AEVtcHR5AAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAAJ1MA
eQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAVABh
AHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABhAHQA
aAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AAA9iAGkAbQBQAGEAdABoAAAvdABhAGIAdQBs
AGEAcgBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAALKgAuAGIAaQBtAAAHewAwAH0A
ABNFAFIAUgBPAFIAIAAtACAAKAABAykAAB17ADAAfQAgAC0APgAgAHsAMQB9AAoAewAyAH0AAQMs
AAAJUwBlAG4AZAAAFXMAbQB0AHAAUwBlAHIAdgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQA
ZAByAGUAcwBzAAAhdABvAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5
ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMA
YgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAASXsAIgBkAGUAbABl
AHQAZQAiADoAIAB7ACIAbwBiAGoAZQBjAHQAIgA6ACAAewAiAGQAYQB0AGEAYgBhAHMAZQAiADoA
IAAiAAAJIgB9AH0AfQAACSAALQA+ACAAAQMKAAAbVgBlAHIAaQBmAGkAYwBhAHQAaQBvAG4AXwAA
AGKRem2BpbFAh7gAIMP1+h8ABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCFBwcEHA4OEkEDAAAO
AyAADgUgABKAmQUgABKAnQYgARKAoRwDIAAcBwAEDg4cHBwFAAIODg4EAAEODgYwAQEeAA4DCgEc
BwABEm0RgLEMAAMSgLkRgL0SbRJtDBUSXQEVEmkDEmUcDgsAARUSXQETABKAuQMGEwAJAAISgMER
gMUOEgADEoC5EYC9Em0VEoDJARKAwQ0VEl0BFRJhBBJlHA4cCRUSYQQSZRwOHAogAxMDEwATARMC
CBUSaQMSZRwOCCACEwITABMBBgACHQ4ODhAQAQEVEk0BHgAVEoDJAR4AAwoBDgUgABKA1QUAAg4O
HAIGDgggBQIIDg4OCAYAAw4ODg4LBwUSGAgSHBIgEkEGFRJVAg4OBSACARwYGhACAhUSWQIeAR4A
FRKAyQEeABUSVQIeAB4BBAoCDg4FIAASgN0NEAEBFRKAyQEeABKA4QQKARJFBxUSVQISRQIYEAEC
FRKAyQEeABUSgMkBHgAVElUCHgACBxUSgOUBEkUGFRJNARJFCiABARUSgOUBEwAKAAIODhUSgMkB
DgggBQEIDg4OCAQAAQEIBQcCHBJBGgAFEoC5EYC9DhUSgMkBEm0SbRUSgMkBEoDBEBUSXQEVEnUG
EmUScRwcDg4PFRJdARUSYQQSZRJtHBJxCxUSYQQSZRJtHBJxDBUSdQYSZRJxHBwODg8gBgETABMB
EwITAxMEEwUFIAASgO0HIAIBDhKA7QQHAg4CBiABEoD1DgUAAQ4dDgogBgEIDg4OCBACBCABAg4G
FRJZAg4OBSABAhMACLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6BAUAAAACBggD
BhJ9BAYSgIEDBhIQAwYSFAcGFRJVAg4OAwYSCAMGEkkDBhIYBwYVElkCDg4OBhUSXQEVEmEEEmUc
DhwNBhUSXQEVEmkDEmUcDhAGFRJdARUSYQQSZRJtHBJxEQYVEl0BFRJ1BhJlEnEcHA4OCSACAQ4V
Ek0BDgUgAgEODgQAABJ9BQAAEoCBBgABARKAgQQAABIQAwAAAQQgAQ4OBSABARJFBSABAhJFBAgA
En0FCAASgIEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAAAUBAAAAAAgBAANU
VkEAABkBABRDb3B5cmlnaHQgQCBUVkEgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAMQgAAAAAAAAAAAAAmQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEIAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
JgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAJpRgiIAAAEAmlGCIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAFQAVgBBAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAx
AGMAOAAxADMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADgA
MwA0AC4AMgAwADgAOQAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAYQAxAGQAMwAzAGMANwBlADgAYwA5ADQAYQBmADAAOAA5AGEAOAA0AGMAMABmAGEAMwAwAGYA
YwBiAGMANgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAVABWAEEAIAAyADAAMgA0AAAAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA5AGEAMQBkADMAMwBjADcAZQA4AGMAOQA0AGEAZgAwADgAOQBhADgA
NABjADAAZgBhADMAMABmAGMAYgBjADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIA
YwBhADUANgBkADEAYwA4ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADgAOQAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADgAOQAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAADgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B3D59A90-C09B-499A-BE5C-FE6269149BEA}"
      DTS:From="Package\RemoveCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ProcessCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{42B88B4A-FDD5-46A9-BBB5-F348D5FAB45D}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::Execute]"
      DTS:From="Package\Execute"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DeployCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{7F3E7E79-A13C-4D91-B32D-64F9ADB49BF8}"
      DTS:From="Package\ProcessCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\EmptyPartitions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6AFC443B-6D56-419B-A0CD-9F3EA46A667B}"
      DTS:From="Package\EmptyPartitions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Complete" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{37FF383C-1C25-489E-852A-76C94EEA9038}"
      DTS:From="Package\DeployCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\RemoveCubes" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="190,42"
          Id="Package\Complete"
          TopLeft="119.977777777778,464" />
        <NodeLayout
          Size="190,42"
          Id="Package\DeployCubes"
          TopLeft="119.977777777778,172.8" />
        <NodeLayout
          Size="190,42"
          Id="Package\Execute"
          TopLeft="119.977777777778,100" />
        <NodeLayout
          Size="190,42"
          Id="Package\ProcessCubes"
          TopLeft="119.977777777778,318.4" />
        <NodeLayout
          Size="190,42"
          Id="Package\RemoveCubes"
          TopLeft="119.977777777778,245.6" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="214.977777777778,287.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="214.977777777778,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.65000000000001,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="214.977777777778,214.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="190,42"
          Id="Package\EmptyPartitions"
          TopLeft="119.977777777778,391.2" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="214.977777777778,360.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="214.977777777778,433.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8"
              Start="0,0"
              End="0,23.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>