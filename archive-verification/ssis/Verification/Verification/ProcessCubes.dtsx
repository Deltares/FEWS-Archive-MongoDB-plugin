<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/16/2024 2:38:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CHADWHH01"
  DTS:CreatorName="TVA\emroush-wa"
  DTS:DTSID="{2A1E5369-7B7A-452D-859A-AF9AF3DC4000}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessCubes"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="90"
  DTS:VersionGUID="{BD165844-63EC-4F04-8CD0-6E8457221225}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3376DF3A-C5DA-4BD3-B830-3B635FACC292}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Execute">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Complete"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{13df2463-f766-487d-b83e-7d3db944e768}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Complete"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f21f1a3ffa864259a3e934608f1397dd"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        /// <summary>
        /// 
        /// </summary>
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
                
                Complete(settings, settingsPath);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Complete
		/// </summary>
		/// <param name="settings"></param>
		/// <param name="settingsPath"></param>
		/// <returns></returns>
		private void Complete(dynamic settings, string settingsPath)
        {
            settings["execute"] = false;
			File.WriteAllText(settingsPath, new JavaScriptSerializer().Serialize(settings));
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_f21f1a3ffa864259a3e934608f1397dd</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:DisplayName>
    <msb:ProjectId>{6E928546-3CCD-46BF-B2C5-8B8AFAE4B682}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f21f1a3ffa864259a3e934608f1397dd.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.dll">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
bCUAAAAAgxg4BgYABQB0JQAAAACTCOkFhwIFAKAlAAAAAJMIqgGMAgUApyUAAAAAkwi2AZECBQCv
JQAAAACWCLMHlwIGALYlAAAAAIYYOAYGAAYAviUAAAAAkRg+BpwCBgAAAAEAXQcAAAIAKQQAAAEA
pAcAAAIAIAEAAAEA6AMJADgGAQARADgGBgAZADgGCgApADgGEAAxADgGEAA5ADgGEABBADgGEABJ
ADgGEABRADgGEABZADgGEABhADgGEABpADgGBgCJADgGBgCRADgGBgDhADgGBgABATgGFQARAWEB
IgAZAf0FJgBxAHwHKgAhARwHMAApAecENgAxAd4DPQAZAZYHQQB5ACAEJgA5AZEBSQDBADgGBgBB
AeUHTwDBAO4DVADJAEoBXwBRAQYCZwBhAa4FcQAMAAYCmwAMAKwHpwAUACgBtgAhAb8HAQAhAYQH
wgAZAZYHyAAZARAIzgCBAS4G0QAZAY8H2gBhAfoH4QAcAAYCmwAcAKwHpwAkACgBDgEsAAYCmwAs
AKwHpwA0AAYCmwA0AKwHpwA8ACgBRAFEACgBtgBMAAYCmwBMAKwHpwBhAUUG4QBUAAYCmwBUAKwH
pwBhAfEH4QBcAAYCmwBcAKwHpwBkACgBRAFsACgBRAF0ACgBsgGBARQEwgFxADgGBgB5ADgGBgDJ
AAMIywHpADgG0QEJATgGBgAkAGsAfAMpAIMA1wIuAAsArwIuABMAuAIuABsA1wIuACMA4AIuACsA
CQMuADMACQMuADsADwMuAEMA4AIuAEsAGAMuAFMACQMuAFsAMgNDAGMAfANJAIMA1wJjAHsAfAOB
AHMAfAOjAHMAfAPDAHMAfAPjAHMAfAMbAFoBAwABAAQAAwAAAO0FoAIAAMoBpQIAALcHqgICAAYA
AwACAAcABQABAAgABQACAAkABwCMAKsA9AADARsBKgE5AU8BYAFxAYEBjwGZAaUBBIAAAAEAAACC
InFRAAAAAAAA7AAAAAQAAAAAAAAAAAAAANkByAAAAAAAEAAAAAAAAAAAAAAA4gE2BAAAAAAEAAAA
AAAAAAAAAADZAZ4BAAAAAAQAAAAAAAAAAAAAAOsBZgcAAAAABAAAAAAAAAAAAAAA2QHwBAAAAAAQ
AAAAAAAAAAAAAADiAYUAAAAAAAQAAAAAAAAAAAAAAPQBnQUAAAAAAAAAAAEAAACbBgAABQACAAYA
AgAHAAIAOQBbAAAAADw+cF9fMAA8Pm9fXzEAPD5wX18xAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVg
MQA8Pm9fXzIAPD5wX18yADw+b19fMwA8PnBfXzMAPD5wX180AEZ1bmNgNABBY3Rpb25gNABGdW5j
YDUAQWN0aW9uYDYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYgBtc2NvcmxpYgBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBTVF9mMjFmMWEzZmZhODY0MjU5YTNlOTM0NjA4ZjEzOTdkZABk
ZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTWFjaGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGxldGUAQ2Fs
bFNpdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAERlc2VyaWFs
aXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdhcm5pbmcAVG9TdHJpbmcAc2V0dGlu
Z3NQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1haWwAU1RfZjIxZjFhM2ZmYTg2NDI1OWEzZTkzNDYw
OGYxMzk3ZGQuZGxsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAF9sb2Nh
dGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2Vi
LlNjcmlwdC5TZXJpYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJl
SW5mbwBDU2hhcnBBcmd1bWVudEluZm8ATWljcm9zb2Z0LkNTaGFycABJbnZva2VNZW1iZXIATWlj
cm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAVG9VcHBlcgBFdmVudHNPYmplY3RXcmFwcGVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IASW52b2tlQ29uc3RydWN0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81ODk0
NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdzAENTaGFycEJpbmRl
ckZsYWdzAFNldHRpbmdzAHNldHRpbmdzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBnZXRfRHRzAGdl
dF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAc3ViamVjdABUYXJnZXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABSZWFkQWxsVGV4dABHZXRJbmRl
eABTZXRJbmRleABnZXRfQXNzZW1ibHkARW1wdHkAAAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAA
J1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoA
VABhAHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABh
AHQAaAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AABFDAG8AbQBwAGwAZQB0AGUAAAd7ADAA
fQAAE0UAUgBSAE8AUgAgAC0AIAAoAAEDKQAAD2UAeABlAGMAdQB0AGUAABlXAHIAaQB0AGUAQQBs
AGwAVABlAHgAdAAAE1MAZQByAGkAYQBsAGkAegBlAAAJUwBlAG4AZAAAFXMAbQB0AHAAUwBlAHIA
dgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAAAhdABvAEUAbQBhAGkAbABB
AGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcA
YgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAKOXEYA1B/NOvLzKZXamr/4ABCABAQgDIAABBSABARERBCABAQ4F
IAEBEX0GBwMOHBJBAwAADgMgAA4FIAASgJEFIAASgJUGIAESgJkcAyAAHAcABA4OHBwcBQACDg4O
BAABDg4GMAEBHgAOAwoBHAcAARJlEYClCQACEoCpEYCtDhoABRKAtRGAuQ4VEoC9ARJlEmUVEoC9
ARKAqQ4VEk0BFRJRBBJVEggcDgsAARUSTQETABKAtQMGEwAKFRJRBBJVEggcDgsgBAETABMBEwIT
AwUgABKAwQUAAg4OHAIGDgggBQIIDg4OCAYAAw4ODg4SAAMSgLURgLkSZRUSgL0BEoCpDhUSTQEV
ElkFElUcDgIcChUSWQUSVRwOAhwMIAQTBBMAEwETAhMDDhUSTQEVElEEElUSZQ4cDhUSTQEVEl0E
ElUSYRwcChUSXQQSVRJhHBwKIAMTAxMAEwETAgoVElEEElUSZQ4cBQcCHBJBEBUSTQEVEm0GElUS
aRwcDg4PFRJNARUSXQQSVRJlHBJpDRUSTQEVEl0EElUcDhwJFRJdBBJVHA4cCxUSXQQSVRJlHBJp
DBUSbQYSVRJpHBwODg8gBgETABMBEwITAxMEEwUIIAUBCA4ODggFIAASgMUHIAIBDhKAxQi3elxW
GTTgiQiJhF3NgIDMkQgxvzhWrTZONQiwP19/EdUKOgMGEnUDBhJ5AwYSEA8GFRJNARUSUQQSVRII
HA4PBhUSTQEVElkFElUcDgIcDwYVEk0BFRJdBBJVEmEcHA8GFRJNARUSUQQSVRJlDhwOBhUSTQEV
El0EElUcDhwQBhUSTQEVEl0EElUSZRwSaREGFRJNARUSbQYSVRJpHBwODgUgAgEcDgUgAgEODgQA
ABJ1BAAAEnkFAAEBEnkEAAASEAMAAAEECAASdQQIABJ5BAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUy
MmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAzDoAAAAAAAAAAAAA5joAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAANg6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQBxUYIiAAABAHFRgiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABUAFYAQQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA4ADMANAAuADIAMAA4ADQAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBmADIAMQBmADEAYQAzAGYAZgBhADgANgA0ADIANQA5AGEAMwBlADkAMwA0ADYAMAA4AGYA
MQAzADkANwBkAGQALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAVgBBACAAMgAwADIANAAAAAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AZgAyADEAZgAxAGEAMwBmAGYAYQA4ADYANAAyADUAOQBhADMA
ZQA5ADMANAA2ADAAOABmADEAMwA5ADcAZABkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUA
MgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMAA4ADQAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMAA4ADQAOQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD4OgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DeployCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{07483abf-6af0-4671-960a-4fb6f7df47c8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DeployCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5b6adba25bc54be0be84d43b4b60cb08"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_5b6adba25bc54be0be84d43b4b60cb08</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];
                string[] reprocessCubes = settings["reprocessCubes"].ToString().Split(',');

                Directory.GetFiles(bimPath, "*.bim").ToList().ForEach(bimFile => Deploy(tabularConnectionString, reprocessCubes, bimFile));
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

        /// <summary>
        /// Deploy
        /// </summary>
        /// <param name="tabularConnectionString"></param>
        /// <param name="reprocessCubes"></param>
        /// <param name="bimFile"></param>
        private void Deploy(string tabularConnectionString, string[] reprocessCubes, string bimFile)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
                    server.Connect(tabularConnectionString);
                    var databaseName = Path.GetFileNameWithoutExtension(bimFile);
                    var bim = File.ReadAllText(bimFile);

                    dynamic cube = new JavaScriptSerializer().Deserialize<dynamic>(bim);
                    var database = server.Databases.FindByName(databaseName);

                    if (!UpdateCapable(cube, database) || reprocessCubes.Contains(databaseName))
                        server.Execute($"{{\"delete\": {{\"object\": {{\"database\": \"{databaseName}\"}}}}}}");

                    var command = $"{{\"createOrReplace\": {{\"object\": {{\"database\": \"{databaseName}\"}}, \"database\": {bim}}}}}";
                    var result = server.Execute(command);
                    if (result.ContainsErrors)
                        throw new Exception($"{command}\n{bimFile} -> {tabularConnectionString}\n\n{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}");
                    
                    bool fireAgain = true;
                    Dts.Events.FireInformation(0, _location, $"{bimFile} -> {tabularConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, _location, $"{bimFile} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }
        
        /// <summary>
        /// UpdateCapable
        /// </summary>
        /// <param name="cube"></param>
        /// <param name="database"></param>
        /// <returns></returns>
        private bool UpdateCapable(dynamic cube, Database database)
        {
            var compatibilityLevel = (int)cube["compatibilityLevel"];
            var clientCompatibilityLevel = cube["model"]["annotations"][0]["value"];

            var existingCompatibilityLevel = database?.CompatibilityLevel;
            var existingClientCompatibilityLevel = database?.Model.Annotations.Find("ClientCompatibilityLevel").Value;

            return database == null || compatibilityLevel == existingCompatibilityLevel && clientCompatibilityLevel == existingClientCompatibilityLevel;
        }

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:DisplayName>
    <msb:ProjectId>{AC85C326-7E22-44F5-B92F-D4AC1EC35FCF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.dll">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
PwkWAHgAHwkGAPEAjwYWAGsDHwkGANwAjwYGAAYBjwYGALACjwYaAFwLRQYGABQBjwYGAKAD/QgG
AIwIWgkGAOgHLwcaAFYDGAYaANEDGAYaACUDDwcGAGcLjwYGAKAFjwYKAAYG0wUeAAgKfgIeABQC
fgIiAL8IRAcGAK8FYwEGAF4CYwEGADcCjwYmAIEIWggWAHkIHwkmAEEKWggmAPQHWggmACkKWggG
ALsLYwEWACwCHggGAIwAvQEGAIMAjwYKAKQI0wUSALgIwQIOAIwHKggWAKYChQoGACsCrQoGANgB
TwUGAJMAjwYSAD0DwQIOACgGKggOAJ8HKggOAK4AKggOACQHKggGAKIGjwYGAKALZAcSAHYHPwkA
AAAAWgEAAAAAAQABAAEAEACqBowBOQABAAEAAAAQAGEJ1Qk9AAMABgAAARAAUwrVCaEABQAKAAMh
EAC5AQAAPQAGAA0AAwEQAAEAAAA9AAkAEQCDARAAmQAAAD0ADAATAIMBEADOAAAAPQAUABMAgwEQ
AOMAAAA9ABkAEwCDARAA+AAAAD0AIwATAFGAygkBBAEA1gaUAREAlgYEBBEA+QIJBBEA6QEOBDYA
TwESBBYAFgAWBBYAQAAkBAYAXAotBAYAhgWUAQYAEAkxBBYAOQA1BBYAWABEBBYAoAA1BBYA1QBE
BBYA6gA1BBYA/wBSBBYADQFgBBYAHQFvBBYAOQB+BBYAWABSBBYAoACQBBYA1QCfBBYA6gCfBBYA
OQA1BBYAWACtBBYAoAA1BBYA1QA1BBYA6gC7BBYA/wA1BBYADQE1BBYAHQHKBBYASAHKBBYAUwGf
BBYAOQA1BBYAWAA1BBYAoAA1BBYA1QDZBBYA6gDsBFAgAAAAAIYAsAYGAAEACCQAAAAAgQC0CwAF
AQCwJwAAAACBAB0CCAUEAFQrAAAAAIEAVQYPBQYAuC0AAAAAhhjeCAYACADALQAAAACDGN4IBgAI
AMgtAAAAAJMIiAgVBQgA9C0AAAAAkwjhAhsFCAD7LQAAAACTCO0CIQUIAAMuAAAAAJYIJAsoBQkA
Ci4AAAAAhhjeCAYACQASLgAAAACRGOQILQUJAB4uAAAAAJEY5AgtBQkAwC0AAAAAhhjeCAYACQAq
LgAAAACDAB8AMQUJADcuAAAAAIMASQA8BQoAwC0AAAAAhhjeCAYACwA/LgAAAACDAC4AEAALAAAA
AQCGBQAAAgAQCQAAAwBbAgAAAQDkAQAAAgBGAwAAAQD7CgAAAgAFAgAAAQA9BQAAAQD7CAAAAQCU
BgAAAQBbAgkA3ggBABEA3ggGABkA3ggKACkA3ggQADEA3ggQADkA3ggQAEEA3ggQAEkA3ggQAFEA
3ggQAFkA3ggQAGEA3ggQAGkA3ggGAKEA3ggGALEA3ggGABkB3ggGADkB3ggVAEkBYwIlAFEBnAgp
AHEA0wotAFkBBAozAGEBhgY5AGkBJgVAAFEB7QpEAHEB3ggGAHkAngUpAHkBngJMAIEBhwtSAHEB
QwVXAAEBSQJiAJEBcwtrAAwATwOHAAwAHQuTAKkBTwOXAJEBkwuhABQATwOHABQAHQuTABwADQLM
ACQADQLgADQATwOHADQAHQuTAJEBTQj6ADwATwOHADwAHQuTAEQATwOHAEQAHQuTAEwADQLgAFQA
DQLMAFwADQLgALkBEgpNAcEBgAtUAWQA3ghwAWwApwV9AVkBTQsBAFkB2wqIAVEB7QqOAVEBxQuU
AdkB1AiXAVEB5gqgAZEA3ggGAOEBCgsQAHkBugZSAJEAGwq5AekBcwK/AZEB8AbFAXQATwOHAHQA
HQuTAHwADQL5AYQATwOHAIQAHQuTAIwADQLgAJEB/wbFAZQATwOHAJQAHQuTAMEBZgoqApwADQLM
AOEBHgVBAlEB5gpHApkAwApNAsEBewtRAqQA3ghwAcEBqQtwAqwA3ghwAcEBAwubAlEBtQa5AoEA
3ggQANkB4AbDAtkBegXOAgECBwjXAuEBEgsGALQATwOHALQAHQuTALwADQLgAMQATwOHAMQAHQuT
AMwADQLMABECLgYiA9QA3ggmA4kA/AUsAxkCnQoyA9wA3wFEAzECJgUpAOQATwOHAOQAHQuTANQA
MAtYA9QAMAVNAuwADQLMAPQATwOHAPQAHQuTAJEB6wihAPwATwOHAPwAHQuTAAQBDQLMAAwBDQKv
A3EA3ggGAHkA3ggGAAEBnAu/AyEB3gjFA0EB3ggGAMEAvQnNA9EA2AcpAAgABAD8AykAgwB7BS4A
CwBTBS4AEwBcBS4AGwB7BS4AIwCEBS4AKwCtBS4AMwCtBS4AOwCzBS4AQwCEBS4ASwC8BS4AUwCt
BS4AWwDWBUMAYwAgBkkAgwB7BWMAewAgBoQAawAgBqEAcwAgBqMAcwAgBsMAcwAgBuMAcwAgBgMB
cwAgBiMBcwAgBkMBcwAgBhwApwHcAmcDAwABAAQAAwAAAIwIQgUAAAEDSAUAADoLTgUCAAcAAwAC
AAgABQABAAkABQACAAoABwB6ALQAwgDXAOkA7AAVASMBMAE5AUMBaQF2AdsB7AEGAhMCHAI3AmMC
kwLuAvsCBAMSAxwDOANKA10DbQOAA5IDoAMEgAAAAQAAAIIisVEAAAAAAAAkAQAABAAAAAAAAAAA
AAAA2AOwAQAAAAAQAAAAAAAAAAAAAADhA7QFAAAAAA8AAAAAAAAAAAAAAOEDKggAAAAADwAAAAAA
AAAAAAAA4QPBAgAAAAAEAAAAAAAAAAAAAADYA7UCAAAAAAQAAAAAAAAAAAAAANgDjwYAAAAAEAAA
AAAAAAAAAAAA4QNtAQAAAAAEAAAAAAAAAAAAAADqA28KAAAAAAQAAAAAAAAAAAAAAPMDDQgAAAAA
AAAAAAEAAABrCQAABQACAAYAAgAHAAIACAACAAkAAgAKAAIAOQBeAGUAZQGVAGUBnwBeAqMAjAKn
ALMCnwDTAwAAADw+Y19fRGlzcGxheUNsYXNzMl8wADw+OV9fM18wADxEZXBsb3k+Yl9fM18wADxN
YWluPmJfXzAAPD5wX18wADw+OV9fM18xADxEZXBsb3k+Yl9fM18xADw+cF9fMQBOdWxsYWJsZWAx
AElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVgMQBBY3Rpb25gMQBMaXN0YDEASW50MzIAPD5vX18yADw+
cF9fMgBGdW5jYDIATmFtZWRNZXRhZGF0YU9iamVjdENvbGxlY3Rpb25gMgA8Pm9fXzMAPD5wX18z
AEZ1bmNgMwA8Pm9fXzQAPD5wX180AEZ1bmNgNAA8Pm9fXzUAPD5wX181AEZ1bmNgNQA8PnBfXzYA
QWN0aW9uYDYAPD5wX183AFNUXzViNmFkYmEyNWJjNTRiZTBiZTg0ZDQzYjRiNjBjYjA4ADw+cF9f
OAA8PjkAPD5wX185ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5
c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFRocmVhZABGaW5kAGN1YmUAZGVmYXVsdEluc3RhbmNl
AFhtbGFNZXNzYWdlAG1lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFVwZGF0ZUNhcGFibGUASUVudW1l
cmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAYmltRmlsZQBnZXRfTWFj
aGluZU5hbWUARmluZEJ5TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbWJp
bmUARXhwcmVzc2lvblR5cGUAU3lzdGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMu
Q29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAGRhdGFiYXNl
AENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDYWxsU2l0ZQBEeW5hbWljQXR0cmlidXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBFeGVjdXRlAGdldF9WYWx1ZQBnZXRfSGFzVmFsdWUAdmFsdWUARGVzZXJpYWxpemUA
U3lzdGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJuaW5nAHRh
YnVsYXJDb25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAEZvckVhY2gAUGF0aABNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBnZXRfTW9kZWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9D
b21wYXRpYmlsaXR5TGV2ZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFNUXzViNmFkYmEyNWJj
NTRiZTBiZTg0ZDQzYjRiNjBjYjA4LmRsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AQm9v
bGVhbgBTY3JpcHRNYWluAEpvaW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAF9sb2NhdGlv
bgBGaXJlSW5mb3JtYXRpb24AVW5hcnlPcGVyYXRpb24AQmluYXJ5T3BlcmF0aW9uAFN5c3RlbS5D
b25maWd1cmF0aW9uAEFubm90YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldlYi5T
Y3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBYbWxhTWVzc2FnZUNvbGxlY3Rp
b24ARGF0YWJhc2VDb2xsZWN0aW9uAE1vZGVsQW5ub3RhdGlvbkNvbGxlY3Rpb24AWG1sYVJlc3Vs
dENvbGxlY3Rpb24ARXhjZXB0aW9uAGdldF9EZXNjcmlwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBB
cmd1bWVudEluZm8AU2xlZXAATWljcm9zb2Z0LkNTaGFycABTeXN0ZW0uTGlucQBNaWNyb3NvZnQu
QW5hbHlzaXNTZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1
bnRpbWVCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2
ZW50c09iamVjdFdyYXBwZXIAU2VydmVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEZpcmVFcnJvcgAu
Y3RvcgAuY2N0b3IASW52b2tlQ29uc3RydWN0b3IAU3lzdGVtLkRpYWdub3N0aWNzAHJlcHJvY2Vz
c0N1YmVzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMATWljcm9zb2Z0LkFuYWx5c2lz
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFj
ODEzYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X01l
c3NhZ2VzAE1heFJldHJpZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAGdldF9EYXRhYmFzZXMAQ1NoYXJwQXJndW1l
bnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0dGluZ3MAPD40X190aGlzAENvbnRhaW5z
AFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBTeXN0ZW0uTGlucS5FeHByZXNzaW9ucwBnZXRfQW5ub3Rh
dGlvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db250YWluc0Vycm9ycwBnZXRfRHRzAGdldF9F
dmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAc3ViamVjdABTZWxlY3QAQ29ubmVjdABEaXNjb25u
ZWN0AFRhcmdldABnZXRfRGVmYXVsdABHZXRWYWx1ZU9yRGVmYXVsdABYbWxhUmVzdWx0AHNldF9U
YXNrUmVzdWx0AFNtdHBDbGllbnQARW52aXJvbm1lbnQAQ29udmVydABDYXN0AFRvTGlzdABSZWFk
QWxsVGV4dABHZXRJbmRleABnZXRfQXNzZW1ibHkAU2VsZWN0TWFueQBEZXBsb3kARGlyZWN0b3J5
AEVtcHR5AAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBr
AGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAAtJABQAHIA
bwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABhAHQAaAAAG1MAZQB0AHQAaQBuAGcAcwAu
AGoAcwBvAG4AAA9iAGkAbQBQAGEAdABoAAAvdABhAGIAdQBsAGEAcgBDAG8AbgBuAGUAYwB0AGkA
bwBuAFMAdAByAGkAbgBnAAALUwBwAGwAaQB0AAARVABvAFMAdAByAGkAbgBnAAAdcgBlAHAAcgBv
AGMAZQBzAHMAQwB1AGIAZQBzAAALKgAuAGIAaQBtAAAHewAwAH0AABNFAFIAUgBPAFIAIAAtACAA
KAABAykAABtVAHAAZABhAHQAZQBDAGEAcABhAGIAbABlAABJewAiAGQAZQBsAGUAdABlACIAOgAg
AHsAIgBvAGIAagBlAGMAdAAiADoAIAB7ACIAZABhAHQAYQBiAGEAcwBlACIAOgAgACIAAAkiAH0A
fQB9AABbewAiAGMAcgBlAGEAdABlAE8AcgBSAGUAcABsAGEAYwBlACIAOgAgAHsAIgBvAGIAagBl
AGMAdAAiADoAIAB7ACIAZABhAHQAYQBiAGEAcwBlACIAOgAgACIAACEiAH0ALAAgACIAZABhAHQA
YQBiAGEAcwBlACIAOgAgAAAFfQB9AAADCgAACSAALQA+ACAAAQUKAAoAAB17ADAAfQAgAC0APgAg
AHsAMQB9AAoAewAyAH0AASVjAG8AbQBwAGEAdABpAGIAaQBsAGkAdAB5AEwAZQB2AGUAbAAAC20A
bwBkAGUAbAAAF2EAbgBuAG8AdABhAHQAaQBvAG4AcwAAC3YAYQBsAHUAZQAAMUMAbABpAGUAbgB0
AEMAbwBtAHAAYQB0AGkAYgBpAGwAaQB0AHkATABlAHYAZQBsAAAJUwBlAG4AZAAAFXMAbQB0AHAA
UwBlAHIAdgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAAAhdABvAEUAbQBh
AGkAbABBAGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQA
ZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAKxRwSWw1D0+ehgIDlz6WTAAEIAEBCAMgAAEFIAEB
EREEIAEBDgYgAQERgJkIBwQSGBwOEkEDAAAOAyAADgUgABKArQUgABKAsQYgARKAtRwDIAAcBwAE
Dg4cHBwFAAIODg4EAAEODgYwAQEeAA4DCgEcCAABEoCBEYDFDgADEoDNEYDREoCBEoCBDBUSbQEV
EnkDEnUcDgsAARUSbQETABKAzQMGEwAJAAISgNURgNkOEgADEoDNEYDREoCBFRJlARKA1Q0VEm0B
FRJxBBJ1HA4cCRUScQQSdRwOHAogAxMDEwATARMCCBUSeQMSdRwOCCACEwITABMBAh0ODRUSbQEV
EnkDEnUcHQ4aAAUSgM0RgNEOFRJlARKAgRKAgRUSZQESgNUNFRJtARUScQQSdRwDHAwVEm0BFRJ5
AxJ1HBwIFRJ5AxJ1HBwJFRJxBBJ1HAMcCRUSeQMSdRwdDgYAAh0ODg4QEAEBFRKA5QEeABUSZQEe
AAMKAQ4GFRKA6QEOBSACARwYBhUSgOUBDgogAQEVEoDpARMABSAAEoDtBQACDg4cAgYOCCAFAggO
Dg4IBgADDg4ODhEHCwgSSQ4OHBJFDhJNAhwSQQUgABKA9QUgARJFDhUABBKAzRGA0RGA+RKAgRUS
ZQESgNUQFRJtARUSfQUSdRIIHBJFHAwVEn0FEnUSCBwSRRwMIAQTBBMAEwETAhMDDBUSbQEVEnkD
EnUcAggVEnkDEnUcAg0VEm0BFRJxBBJ1HAIcDBABAgIVEmUBHgAeAAkVEnEEEnUcAhwFIAESTQ4F
AAEOHQ4DIAACDBABARUSZQEeABKA/QQKARJhDBUSXQISYRUSZQESaRsQAgIVEmUBHgEVEmUBHgAV
El0CHgAVEmUBHgEGCgISYRJpBxUSXQISaQ4XEAICFRJlAR4BFRJlAR4AFRJdAh4AHgEFCgISaQ4J
AAIODhUSZQEOCiAGAQgODg4IEAIIIAUBCA4ODggEAAEBCBEHBwgcFRFVAQgOFRFVAQgCAgwVEm0B
FRJ5AxJ1HAgIFRJ5AxJ1HAgNFRJtARUScQQSdRwIHAkVEnEEEnUcCBwFFRFVAQgDIAAIBSABARMA
BSAAEoENBSAAEoERCxUSgRUCEoEZEoENBSABEwAODRUSbQEVEnEEEnUCHBwEIAATAAkVEnEEEnUC
HBwFBwIcEkESFRJtARUSgIkGEnUSgIUcHA4OERUSbQEVEnEEEnUSgIEcEoCFDRUScQQSdRKAgRwS
gIUOFRKAiQYSdRKAhRwcDg4PIAYBEwATARMCEwMTBBMFBSAAEoEhByACAQ4SgSEFIAASgSUECgES
aQi3elxWGTTgiQiJhF3NgIDMkQgxvzhWrTZONQiwP19/EdUKOgQFAAAAAgYIBAYSgJEEBhKAlQMG
EhADBhIUDQYVEl0CEmEVEmUBEmkIBhUSXQISaQ4DBhIIAwYdDg4GFRJtARUScQQSdRwOHA0GFRJt
ARUSeQMSdRwODQYVEm0BFRJ5AxJ1HBwOBhUSbQEVEnEEEnUcAxwOBhUSbQEVEnkDEnUcHQ4RBhUS
bQEVEn0FEnUSCBwSRRwOBhUSbQEVEnEEEnUcAhwNBhUSbQEVEnkDEnUcAg0GFRJtARUSeQMSdRwI
DgYVEm0BFRJxBBJ1HAgcDgYVEm0BFRJxBBJ1AhwcEgYVEm0BFRJxBBJ1EoCBHBKAhRMGFRJtARUS
gIkGEnUSgIUcHA4OByADAQ4dDg4GIAICHBJFBSACAQ4OBQAAEoCRBQAAEoCVBgABARKAlQQAABIQ
AwAAAQogARUSZQESaRJhBSABDhJpBQgAEoCRBQgAEoCVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUy
MmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAASE8AAAAAAAAAAAAAYk8AAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAFRPAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAJgQAAAAA
AAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
ALFRgiIAAAEAsVGCIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBIYDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AFQAVgBBAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADUA
OAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAx
ADMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADgAMwA0AC4A
MgAwADkAMQAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADUAYgA2
AGEAZABiAGEAMgA1AGIAYwA1ADQAYgBlADAAYgBlADgANABkADQAMwBiADQAYgA2ADAAYwBiADAA
OAAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAVABWAEEAIAAyADAAMgA0AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA1AGIANgBhAGQAYgBhADIANQBiAGMANQA0AGIAZQAwAGIAZQA4ADQAZAA0ADMA
YgA0AGIANgAwAGMAYgAwADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUA
NgBkADEAYwA4ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADgAMwA0AC4AMgAwADkAMQAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADkAMQAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAHQ/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{4e6b99fc-19ee-4f34-bc50-7101e6970b40}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_bfca5fc1f2354faca5c43958c60d9504"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath"
          ReadWriteVariables="User::Execute">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                
                Execute(settings);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Execute
		/// </summary>
		/// <param name="settings"></param>
		/// <returns></returns>
		private void Execute(dynamic settings)
        {
             Dts.Variables["User::Execute"].Value = settings["execute"];
		}

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_bfca5fc1f2354faca5c43958c60d9504</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:DisplayName>
    <msb:ProjectId>{27DC566E-74A9-4D67-8A1E-EA731ECF6D6A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_bfca5fc1f2354faca5c43958c60d9504.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.dll">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
AAAFAGwAAAC4BQAAI34AACQGAAAICAAAI1N0cmluZ3MAAAAALA4AAOABAAAjVVMADBAAABAAAAAj
R1VJRAAAABwQAADsAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAAMAAAAAcA
AAALAAAACwAAAAQAAAA6AAAAFAAAAAEAAAACAAAAAwAAAAQAAAAIAAAAAQAAAAcAAAABAAAAAwAA
AAEAAAAAALkEAQAAAAAABgAhA2QGBgCwA2QGBgBtAlEGDwDYBgAABgCaAlwFBgAEA1wFBgDlAlwF
BgCXA1wFBgBBA1wFBgBaA1wFBgCxAlwFBgDMAvwDCgB1A08ECgDLAU8EBgCXB+oEBgBuBeoEDgAk
AmQGBgA1AmQGDgAkAGQGBgBLAOoEDgAbAmQGBgB/AOoEBgCSAeoEEgDIB6AEBgCGAOoEBgBQAlEG
BgDnBYQGBgB4BScFEgAGAooEEgCBAooEEgDnARIFBgDTB+oEBgAkBOoECgB4BE8EFgAaB2oBFgAo
AWoBGgATBjwFBgArBJgABgBVAZgABgAxAeoEHgCEBbUFHgAkB7UFHgDcBbUFDgDUBWQGHgA8B7UF
BgAWAO4ACgD/BU8EBgD4B1wFAAAAAI8AAAAAAAEAAQABABAA/QTBADkAAQABAAAAEACLBucGPQAC
AAUAAAEQAE4H5wZ9AAQACQCDARAACAAAAD0ABQAMAIMBEAAvAAAAPQAGAAwAgwEQAD0AAAA9AAcA
DAABAAgFyQARAPEEnAERALsBoAERAAkBpAEWAAEAqAEWAAEAtwEWAAEAtwEWAA8AtwEWADYAtwEW
AEQAxgEWAHgA1wFQIAAAAACGAAMFBgABALwhAAAAAIEAzgMSAQEAOCIAAAAAgQCwBOkBAgCcJAAA
AACGGDIGBgAEAKQkAAAAAIMYMgYGAAQArCQAAAAAkwjjBe8BBADYJAAAAACTCKMB9AEEAN8kAAAA
AJMIrwH5AQQA5yQAAAAAlgitB/8BBQDuJAAAAACGGDIGBgAFAPYkAAAAAJEYOAYEAgUAAAABAFcH
AAABAJ4HAAACABkBAAABAOoDCQAyBgEAEQAyBgYAGQAyBgoAKQAyBhAAMQAyBhAAOQAyBhAAQQAy
BhAASQAyBhAAUQAyBhAAWQAyBhAAYQAyBhAAaQAyBgYAiQAyBgYAkQAyBgYA0QAyBgYA8QAyBhUA
AQFaASEACQH3BSUAcQB2BykAEQEWBy8AGQHhBDUAIQHWAzwACQGQB0AAKQEyBgYAeQAiBCUAMQGK
AUgAOQHfB04AKQHwA1MAuQBDAV4ASQH/AWYAWQGoBXAADAD/AZkADACmB6UAFAAhAbMAEQG5BwEA
EQF+B70ACQGQB8MACQEBCMkAeQEoBswACQGJB9UAWQHrB9wAHAD/AZkAHACmB6UAJAAhAQcBIQHg
AxIBLAD/AZkALACmB6UAWQE/BtwANAD/AZkANACmB6UAPAAhAQcBRAAhAVEBeQEWBGEBcQAyBgYA
eQAyBgYAuQD0B2oB2QAyBnAB+QAyBgYAJABrAOQCKQCDAD8CLgALABcCLgATACACLgAbAD8CLgAj
AEgCLgArAHECLgAzAHECLgA7AHcCLgBDAEgCLgBLAIACLgBTAHECLgBbAJoCQwBjAOQCSQCDAD8C
YwB7AOQCgQBzAOQCowBzAOQCwwBzAOQC4wBzAOQCGwADAAEABAADAAAA5wUIAgAAwwENAgAAsQcS
AgIABgADAAIABwAFAAEACAAFAAIACQAHAIsAqQDvAP0AFwEoATgBRAEEgAAAAQAAAIIiz1EAAAAA
AABUAAAABAAAAAAAAAAAAAAAeAHlAAAAAAAQAAAAAAAAAAAAAACBATAEAAAAAAQAAAAAAAAAAAAA
AHgBlwEAAAAABAAAAAAAAAAAAAAAeAHqBAAAAAAQAAAAAAAAAAAAAACBAaIAAAAAAAQAAAAAAAAA
AAAAAIoBYAcAAAAABAAAAAAAAAAAAAAAkwGXBQAAAAAAAAAAAQAAAJUGAAAFAAIABgACAAcAAgA5
AFoAAAAAPD5wX18wADw+b19fMQA8PnBfXzEASUVudW1lcmFibGVgMQBDYWxsU2l0ZWAxADw+b19f
MgA8PnBfXzIAPD5vX18zADw+cF9fMwBBY3Rpb25gMwBTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5
NThjNjBkOTUwNAA8PnBfXzQARnVuY2A0AEFjdGlvbmA2ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQx
YzgxM2IAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNl
AG1lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEZpbGUAZ2V0X01hY2hpbmVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
Q29tYmluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENhbGxTaXRlAER5bmFtaWNBdHRyaWJ1dGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJuaW5nAFRvU3RyaW5nAFBhdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5O
ZXQuTWFpbABTZW5kTWFpbABTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5NThjNjBkOTUwNC5kbGwA
Z2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AX2xvY2F0aW9uAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAENTaGFycEFy
Z3VtZW50SW5mbwBNaWNyb3NvZnQuQ1NoYXJwAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJw
LlJ1bnRpbWVCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVy
AEV2ZW50c09iamVjdFdyYXBwZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAC5jdG9y
AC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdi
MGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzAGdldF9W
YXJpYWJsZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0dGlu
Z3MAc2V0dGluZ3MAU3lzdGVtLldlYi5FeHRlbnNpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25j
YXQARm9ybWF0AE9iamVjdABzdWJqZWN0AFRhcmdldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3Vs
dABTbXRwQ2xpZW50AEVudmlyb25tZW50AFJlYWRBbGxUZXh0AEdldEluZGV4AGdldF9Bc3NlbWJs
eQBFbXB0eQAAABd7ADAAfQA6AHsAMQB9ADoAewAyAH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMA
awBhAGcAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUABy
AG8AagBlAGMAdAA6ADoAUwBlAHQAdABpAG4AZwBzAFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMA
LgBqAHMAbwBuAAAPRQB4AGUAYwB1AHQAZQAAB3sAMAB9AAATRQBSAFIATwBSACAALQAgACgAAQMp
AAAbVQBzAGUAcgA6ADoARQB4AGUAYwB1AHQAZQAAD2UAeABlAGMAdQB0AGUAAAlTAGUAbgBkAAAV
cwBtAHQAcABTAGUAcgB2AGUAcgAAIWYAcgBvAG0ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAACF0
AG8ARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAZQBzAABxUwBUAF8ANQA4ADkANAA1ADEANQAwADEA
YwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAH68GfRriCU6qG8tHjWgcQQAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERdQUHAhwSQQMAAA4DIAAOBSAAEoCJBSAAEoCNBiABEoCRHAMgABwH
AAQODhwcHAUAAg4ODgQAAQ4OBjABAR4ADgMKARwHAAESXRGAoQkAAhKApRGAqQ4aAAUSgLERgLUO
FRKAuQESXRJdFRKAuQESgKUNFRJNARUSUQMSVRIIHAsAARUSTQETABKAsQMGEwAJFRJRAxJVEggc
CSADARMAEwETAgUgABKAvQUAAg4OHAIGDgggBQIIDg4OCAYAAw4ODg4SAAMSgLERgLUSXRUSgLkB
EoClDRUSTQEVElkEElUcDhwJFRJZBBJVHA4cCiADEwMTABMBEwIEIAEBHBAVEk0BFRJlBhJVEmEc
HA4ODxUSTQEVElkEElUSXRwSYQsVElkEElUSXRwSYQwVEmUGElUSYRwcDg4PIAYBEwATARMCEwMT
BBMFCCAFAQgODg4IBSAAEoDBByACAQ4SgMEIt3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUIsD9f
fxHVCjoDBhJtAwYScQMGEhAOBhUSTQEVElEDElUSCBwOBhUSTQEVElkEElUcDhwQBhUSTQEVElkE
ElUSXRwSYREGFRJNARUSZQYSVRJhHBwODgUgAgEODgQAABJtBAAAEnEFAAEBEnEEAAASEAMAAAEE
CAASbQQIABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAAAFAQAAAAAIAQAD
VFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA7DgAAAAAAAAAAAAABjkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPg4AAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAz1GCIgAAAQDPUYIiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAVABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUA
NgBkADEAYwA4ADEAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAOAAzADQALgAyADAAOQA0ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYgBmAGMAYQA1AGYAYwAxAGYAMgAzADUANABmAGEAYwBhADUAYwA0ADMAOQA1ADgAYwA2
ADAAZAA5ADUAMAA0AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfAGIAZgBjAGEANQBmAGMAMQBmADIAMwA1ADQAZgBhAGMAYQA1
AGMANAAzADkANQA4AGMANgAwAGQAOQA1ADAANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABl
ADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgAOAAzADQALgAyADAAOQA0ADMAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAAzADQALgAyADAAOQA0ADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAGDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProcessCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{B6E07C53-B81E-4748-9710-C370A55DE0A4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProcessCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_589451501c0a4de7b0e22ca56d1c813b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_589451501c0a4de7b0e22ca56d1c813b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Microsoft.AnalysisServices.Tabular;
using Task = System.Threading.Tasks.Task;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Globalization;
using Microsoft.AnalysisServices.Core;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private static string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

                var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
                var timingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Timings.json");

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
				string tabularConnectionString = settings["tabularConnectionString"];

				ConcurrentDictionary<string, int> timings;
				try
				{
					timings = File.Exists(timingsPath) ? new JavaScriptSerializer().Deserialize<ConcurrentDictionary<string, int>>(File.ReadAllText(timingsPath)) ?? new ConcurrentDictionary<string, int>() : new ConcurrentDictionary<string, int>();
				}
				catch (Exception ex)
				{
					Dts.Events.FireWarning(0, _location, $"Timings -> {tabularConnectionString}\n{ex}", string.Empty, 0);
					timings = new ConcurrentDictionary<string, int>();
				}

				int parallelPartitions = settings["parallelPartitions"];

				var semaphore = new SemaphoreSlim(settings["threads"]);
				var tasks = GetDatabaseNames(tabularConnectionString).OrderByDescending(d => timings.TryGetValue(d, out var t) ? t : 0).Select(databaseName => Task.Run(() => {
					semaphore.Wait();
					try
					{
						var then = DateTime.Now;
						Process(tabularConnectionString, databaseName, parallelPartitions);
						timings[databaseName] = (int)(DateTime.Now - then).TotalSeconds;
					}
					finally
					{
						semaphore.Release();
					}
				}));
				Task.WaitAll(tasks.ToArray());

				File.WriteAllText(timingsPath, new JavaScriptSerializer().Serialize(timings));

				Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
                Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
                SendMail($"ERROR - ({_location})", $"{ex}");
            }
		}

		/// <summary>
		/// Process 
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="databaseName"></param>
		/// <param name="parallelPartitions"></param>
		private void Process(string tabularConnectionString, string databaseName, int parallelPartitions)
		{
			Server server = new Server();
			try
			{
				server.Connect(tabularConnectionString);
				var database = server.Databases.FindByName(databaseName);
				ProcessDimensions(database);
				ProcessFacts(database, parallelPartitions);
			}
			catch (Exception ex)
			{
				Dts.Events.FireError(0, _location, $"{databaseName} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{databaseName} -> {tabularConnectionString}\n{ex}");
				throw;
			}
			finally
			{
				server.Disconnect();
			}
		}

		/// <summary>
		/// Process
		/// </summary>
		/// <param name="database"></param>
		/// <returns></returns>
		private void ProcessDimensions(Database database)
        {
	        var objects = database.Model.Tables.Where(t => t.Partitions.Count == 1).Select(t => $"{{\"database\": \"{database.Name}\", \"table\": \"{t.Name}\"}}").ToList();
	        ProcessObjects(database, objects);
		}

		/// <summary>
		/// Process
		/// </summary>
		/// <param name="database"></param>
		/// <param name="parallelPartitions"></param>
		/// <returns></returns>
		private void ProcessFacts(Database database, int parallelPartitions)
        {
			var objects = database.Model.Tables.Where(t => t.Partitions.Count > 1).SelectMany(t => t.Partitions.Where(p => p.State != ObjectState.Ready || p.RefreshedTime < DateTime.ParseExact(p.Name, "yyyy-MM", CultureInfo.InvariantCulture).AddMonths(1).AddDays(7)).Select(p => $"{{\"database\": \"{database.Name}\", \"table\": \"{t.Name}\", \"partition\": \"{p.Name}\"}}"));
			foreach (var group in objects.Select((o, i) => new { o, i }).GroupBy(o => o.i / parallelPartitions).Select(g => g.Select(s => s.o).ToList()))
				ProcessObjects(database, group);
		}

		/// <summary>
		/// ProcessObjects
		/// </summary>
		/// <param name="objects"></param>
		/// <param name="database"></param>
		private void ProcessObjects(Database database, List<string> objects)
        {
	        for (int retry = 1; retry <= MaxRetries; retry++)
			{
				try
				{
					var command = $"{{\"refresh\": {{\"type\": \"full\", \"objects\": [{string.Join(",", objects)}]}}}}";

					var fireAgain = true;
					Dts.Events.FireInformation(0, _location, $"EXECUTE:\n{database.Name} -> {database.Parent.ConnectionString}\n{command}", string.Empty, 0, ref fireAgain);

					var result = database.Parent.Execute(command);

					if (result.ContainsErrors)
						throw new Exception($"{database.Name} -> {database.Parent.ConnectionString}\n{command}\n{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}");

					Dts.Events.FireInformation(0, _location, $"COMPLETE:\n{database.Name} -> {database.Parent.ConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
					break;
				}
				catch (Exception ex)
				{
					if (retry >= MaxRetries)
					{
						Dts.Events.FireError(0, _location, $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}", string.Empty, 0);
						SendMail($"ERROR - ({_location})", $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}");
						throw;
					}
					else
					{
						Dts.Events.FireWarning(0, _location, $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}", string.Empty, 0);
						SendMail($"WARNING - ({_location})", $"{database.Name} -> {database.Parent.ConnectionString}\n{ex}");
					}
					Thread.Sleep(1000 * 30);
				}
			}
		}

        private List<string> GetDatabaseNames(string tabularConnectionString)
        {
            Server server = new Server();
            try
            {
                server.Connect(tabularConnectionString);
                return server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_")).Select(d => d.Name).ToList();
            }
            finally
            {
                server.Disconnect();
            }
        }
        
        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            try
            {
	            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:DisplayName>
    <msb:ProjectId>{830E544A-C3B0-4D7E-A73E-615CB12B4D54}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_589451501c0a4de7b0e22ca56d1c813b.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.dll">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
b38AAAqiJRpyqwMAcKIoZQAACioTMAMAVQAAAA0AABFzLAAABgoGAn0fAAAEBgN9HgAABAZ7HgAA
BG97AAAKfgsAAAQlLRcmfggAAAT+BhoAAAZzlAAACiWACwAABCgVAAArBv4GLQAABnOVAAAKKBYA
ACsqOgNvlgAACgJ7HAAABFsqEzAEAFYAAAAAAAAAHY00AAABJRZycQMAcKIlFwJ7HwAABHsbAAAE
b2IAAAqiJRhyjwMAcKIlGQJ7HgAABG9/AAAKoiUacrEDAHCiJRsDb38AAAqiJRxyqwMAcKIoZQAA
CioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALQNAAAjfgAAIA4AAOgPAAAj
U3RyaW5ncwAAAAAIHgAA2AMAACNVUwDgIQAAEAAAACNHVUlEAAAA8CEAANgIAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkPAAAA+gEzABYAAAEAAABWAAAADQAAACoAAAAtAAAAIAAAAJYAAAABAAAAHwAA
AA0AAAADAAAABQAAAAYAAAAlAAAAAQAAAAkAAAABAAAACAAAAAIAAAAWAAAAAAAuCQEAAAAAAAYA
FwdDDAYApgdDDAYAMAYfDA8A0gwAAAYAeAYoCgYA+gYoCgYA2wYoCgYAjQcoCgYANwcoCgYAUAco
CgYAjwYoCgYAqgYhCAYA+AVDDAYAsQ5oCQYAtwUfDAYARAYfDAYAwwYfDAoAaweyCAoAUAWyCAYA
pgpoCQ4AhAUiCw4AwAsiCwYA1givDQYAzQGdAwYAvwGdAwYANwJoCRIAhwpjDA4ADgQiCw4AnAoi
CwYAlgJoCRYAPgIACxIA8g5jDAYAfgGdAxIA8wNjDAYAoQRoCQYAZQJJDwYAbwn+BwYAlQloCRYA
oQFDDAYAwgJoCRYA7wVDDAYA0gRoCRoADA8NCQYACANoCQYAEwYfDAYAlAt+DAYAygrdCRoAzgX3
CBoAXwb3CBoAbAXICQYArAGdAwYAdghoCQYAUgtoCQYAFw9oCQoA5QiyCB4ANw2qBB4AFASqBAYA
fQhDAyIAxwvyCQYAWQRDAwYANQRoCSYAiQtiCxYAgQtDDCYAeA1iCyYA1gpiCyYAYA1iCwoArAuy
CAYA5AFoCRYAHgQACxYAjAEACxIAwAvpBA4AYAoiCw4ABwkiCw4AUAoiCwYA5gv1DQYAKQRoCRIA
Iw9jDAYAHQT1DQYAuAP+BwYAzA8oCg4AcwoiCw4ASgIiCw4A4wUiCw4ApA4iCxIAOgpjDAYAEgpo
CQAAAAA6AwAAAAABAAEAAAEQACECAAA5AAEAAQABABAAnglsA00AAwAHAAAAEACFDPkMOQAFAA8A
AAEQAJIN+QzJAAcAEwADIRAAmQMAADkACAAWAAMBEAABAAAAOQATACIAAwEQANUAAAA5ABgAJQAD
ARAAOQAAADkAGgAnAAMBEABsAAAAOQAbACkAAwEQAOoAAAA5AB4ALACDARAAEwIAADkAIAAuAIMB
EAAvAwAAOQAmAC4AIQDLAysAIQC/Ay8AUYDuDO8FEQCuCXcBEQB9CfIFEQArBfcFEQDXA/wFNgA2
AwAGFgAWAAQGFgBOAAQGFgDqAQ0GFgCdAhYGFgARAyQGFgDqAjEGFgCBAEcGFgD/AFgGFgChAGIG
FgAfAWsGBgClDXQGBgCKDXgGBgAJBYEGBgBcCHcBBgAXDu8FBgB3BHcBBgDUAYYGBgCNBYoGBgCN
BYoGBgAXDu8FBgDJAo4GBgClD5sGBgDUAZ8GFgDOAKMGFgB3AbUGFgAaAqMGFgCPAsUGFgC7AqMG
FgDjAtUGFgDOAKMGFgB3AaMGFgAaAqMGFgCPAusGFgC7AgEHUCAAAAAAhgjECrwDAQBYIAAAAACG
CI0IwQUBAGAgAAAAAIYYAAw+BQEAeCAAAAAAxgDGDRcHAwDFIAAAAADGAOcD+AQEAPwgAAAAAMYA
dAhwAAQAbCEAAAAAhgCkCQYABACAJQAAAACBAD0OHAcEADAmAAAAAIEAzQ0jBwcApCYAAAAAgQBN
DikHCAC4JwAAAACBAFoOMAcKAHwqAAAAAIEAQQ07BwwADCsAAAAAgQAdCUQHDQBsLQAAAACGGAAM
BgAPAHQtAAAAAIMYAAwGAA8AfC0AAAAAkwiQC0oHDwCoLQAAAACTCBMFDgUPAK8tAAAAAJMIHwVQ
Bw8Aty0AAAAAlgjmDlcHEAC+LQAAAACGGAAMBgAQAMYtAAAAAJEYBgxcBxAA0i0AAAAAkRgGDFwH
EAB0LQAAAACGGAAMBgAQAN4tAAAAAIMAHwBgBxAA7i0AAAAAgwBXAGAHEQAALgAAAACDAPMBZgcS
AFIuAAAAAIMApgJsBxMAWy4AAAAAgwDzAncHFQCHLgAAAACDABoDigcWAI8uAAAAAIMAigCUBxcA
nC4AAAAAgwAIAaIHGACkLgAAAACDAKoAqQcZALYuAAAAAIMAKAGvBxoAdC0AAAAAhhgADAYAGwDA
LgAAAACDAMMAtQcbAOAuAAAAAIMAQQG6BxwAdC0AAAAAhhgADAYAHQAILwAAAACDAAgCBgAdAHQt
AAAAAIYYAAwGAB0AqC8AAAAAgwBMAcAHHQB0LQAAAACGGAAMBgAeAOQvAAAAAIMAZAHGBx4ARTAA
AAAAgwDQAtEHHwB0LQAAAACGGAAMBgAgAFQwAAAAAIMAfALbByAAAAABAOcKAAACAJEIAAABAOIH
AAABAFwIAAACAHcEAAADABcOAAABAI0FAAABAI0FAAACABcOAAABAI0FAAACAGkOAAABAFwIAAAB
ALgOAAACAP8DAAABAOIHAAABAKUPAAABAKUPAAABAP4KAAABAOcKAAACAJEIAAABAHsIAAABAIkO
AAABAB0MAAABAHsJAAABANUDAAABANUDAAABANUDAAABAHcEAAABAKUPAAABAKUPAAABAOcKAAAB
AP4KCQAADAEAEQAADAYAGQAADAoAKQAADBAAMQAADBAAOQAADBAAQQAADBAASQAADBAAUQAADBAA
WQAADBAAYQAADBAAaQAADAYAgQAADBUAiQAADAYAkQAADAYAaQEADAYAiQEADBsADADLAysADAC/
Ay8AcQAADAYAFADmDkYAFADGDVAAHADmDkYAHADGDVAAFADnA2AAHADnA2AAcQB0CHAAoQGSDncA
sQFnBI0AoQGkC3AAmQBFDpEAuQEzDZcAwQFWCZ0AyQHMB6QAoQGSDqgA0QHKBLAA2QEADAYA4QGO
D7YA2QHyB7sAUQFHBMYA8QFxD88ANACmBe0ANADaDisACQKmBfoA8QGvDwQBPACmBe0APADaDisA
RAAHBDUBTAAHBEoB4QF8DlMBVAAADAYAuQFxDmoBoQGSDnABoQHgD3cBGQI7CHoBXACmBe0AXADa
DisAZAAHBEoB8QENDAQBbACmBe0AbADaDisAdAAHBDUBfAAADMgBKQIPCM4BhAAADMgBKQLADvUB
KQLADxUCuQAmCSgC2QHoBy8C4QGaDzQCuQH9DgEAoQGSDjoCGQLcC0ACoQGLDkkCsQAADAYAOQLH
DhAAsQBSDVkCQQKEBF8COQLPDgYAqQDbCG8CSQIoDXUCjAAADMgBKQLXBIMClAAADMgBKQJ+D68C
nAAADMgBKQLVD+8CpAAADMgBKQLADhsDrAAADMgBKQK4D0wDtAAADMgBvADyC6kDxAA9D7wDWQKF
D8EDYQKeBQYAoQGpCc8DaQJeBHAAqQAyD9oDOQJHCHAAoQGLDt8DGQK4CeUDOQLEB/AD2QAqDsED
KQJ5D/YDzAAADMgB1AAADMgBoQAADBAAeQLpCjME3AAADMgB5AAADMgB8QFFC2ME7ACmBe0A7ADa
DisA9ACmBe0A9ADaDisA/AAHBDUBBAEHBMoEmQAADAYAUQHID9oEcQEADOAEkQEADAYA4QAIDugE
DAFnD/gE6QCtBQIF6QCPBAgFoQJeBHAAeQE7BQ4FGQGZDhQFGQGbDR8FGQGDDiYFGQGJCS0FFAEA
DD4FHAEADMgBFAHECrwDAQHhDFwFEQGwCnAAoQGCCGgFVADWB3EFsQIADMgBuQDACnoFKQHhDgYA
GQGnD4sFGQEZCpEFMQEyDJ0FVABfCT4FKQGWBfgEJAEADMgBLAEADMgBFAGNCMEFCAAMAOoFIQBr
AM4ILgALAPwHLgATAAUILgAbACQILgAjAC0ILgArAFYILgAzAFYILgA7AFwILgBDAC0ILgBLAGUI
LgBTAFYILgBbAH8IQQBrAM4IQwBjAMkIYABzAMkIYwB7AMkIaQCLACQIgABzAMkIgwCDAMkIiQCL
ACQIoABzAMkIwABzAMkIwwBjAMkI4QBjAMkI4wBjAMkIAwFjAMkIIwFjAMkIQwFjAMkIYwFjAMkI
gwFjAMkIowFjAMkIMwBmAIEAUAJlAsQCxQM4BF0E/ARtBYIFoQUCAAEABAADAAUABQAAAOcK4QcA
AJEI5gcAAJQL6wcAAEgF8QcAAOoO9wcCAAEAAwACAAIABQACABAABwACABEACQABABIACQACABMA
CwAiAD4AWABtAHQA3gAYASkBQAFYAYMBkgGcAbEBwQHtAXsCoQLiAg4DQAN2A54DsgMKBCMERwRP
BIAElQSqBLoE7gQ3BUYFpgWzBQSAAAABAAAAjSLojgAAAAAAAGwDAAAEAAAAAAAAAAAAAADGBZAD
AAAAABAAAAAAAAAAAAAAAM8FkwgAAAAADwAAAAAAAAAAAAAAzwUiCwAAAAAPAAAAAAAAAAAAAADP
BekEAAAAAAQAAAAAAAAAAAAAAMYF3QQAAAAABAAAAAAAAAAAAAAAxgVoCQAAAAAQAAAAAAAAAAAA
AADPBU0DAAAAAAQAAAAAAAAAAAAAANgF3w0AAAAABAAAAAAAAAAAAAAA4QXvCgAAAAAAAAAAAQAA
AI8MAAAGAAMABwADAAgAAwAJAAMACgADAAsAAwAMAAMADQADAAAAAAAEABcLAQAAAAQADAtPAMIA
TwBgAYEA6AGFAA8ChwAjAqcAnAKFAKkCqwDAAq8AqQKzADYDtwBsA4UAiwPTAAQErwAaBIUALATT
AEIEpwBCBIUAVwSFAFIF0wBiBacArgWFALsFAAAAPD5jX19EaXNwbGF5Q2xhc3MyXzAAPD45X180
XzAAPFByb2Nlc3NEaW1lbnNpb25zPmJfXzRfMAA8PmNfX0Rpc3BsYXlDbGFzczRfMAA8PjlfXzVf
MAA8UHJvY2Vzc0ZhY3RzPmJfXzVfMAA8PmNfX0Rpc3BsYXlDbGFzczVfMAA8PjlfXzZfMAA8UHJv
Y2Vzc09iamVjdHM+Yl9fNl8wADw+OV9fN18wADxHZXREYXRhYmFzZU5hbWVzPmJfXzdfMAA8TWFp
bj5iX18wADw+cF9fMAA8PmNfX0Rpc3BsYXlDbGFzczJfMQA8PmNfX0Rpc3BsYXlDbGFzczVfMQA8
PjlfXzZfMQA8UHJvY2Vzc09iamVjdHM+Yl9fNl8xADw+OV9fN18xADxHZXREYXRhYmFzZU5hbWVz
PmJfXzdfMQA8TWFpbj5iX18xADxQcm9jZXNzRGltZW5zaW9ucz5iX18xADxQcm9jZXNzRmFjdHM+
Yl9fMQA8PnBfXzEASUVudW1lcmFibGVgMQBJT3JkZXJlZEVudW1lcmFibGVgMQBDYWxsU2l0ZWAx
AEVxdWFsaXR5Q29tcGFyZXJgMQBJRW51bWVyYXRvcmAxAExpc3RgMQBDUyQ8PjhfX2xvY2FsczEA
SW50MzIAPD45X181XzIAPFByb2Nlc3NGYWN0cz5iX181XzIAPE1haW4+Yl9fMgA8Pm9fXzIAPD5w
X18yADw+Zl9fQW5vbnltb3VzVHlwZTBgMgBGdW5jYDIASUdyb3VwaW5nYDIATWV0YWRhdGFPYmpl
Y3RDb2xsZWN0aW9uYDIAQ29uY3VycmVudERpY3Rpb25hcnlgMgA8UHJvY2Vzc0ZhY3RzPmJfXzMA
PD5wX18zAEZ1bmNgMwA8PjlfXzVfNAA8UHJvY2Vzc0ZhY3RzPmJfXzVfNAA8PnBfXzQARnVuY2A0
ADw+OV9fNQA8UHJvY2Vzc0ZhY3RzPmJfXzUAPD5wX181ADw+OV9fNV82ADxQcm9jZXNzRmFjdHM+
Yl9fNV82AEFjdGlvbmA2ADw+OV9fNV83ADxQcm9jZXNzRmFjdHM+Yl9fNV83ADw+b19fOAA8PjkA
PE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBTVF81ODk0
NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYgBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMAVGhyZWFkADxpPmlfX0ZpZWxkADxvPmlfX0ZpZWxkAGRlZmF1bHRJbnN0YW5j
ZQBHZXRIYXNoQ29kZQBYbWxhTWVzc2FnZQBtZXNzYWdlAEludm9rZQBUYWJsZQBWYXJpYWJsZQBJ
RW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBGaWxlAGdldF9OYW1lAGdldF9NYWNoaW5lTmFtZQBkYXRhYmFzZU5hbWUARmluZEJ5TmFtZQBn
ZXRfUmVmcmVzaGVkVGltZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AENvbWJpbmUAVHlwZQBXaGVyZQBTeXN0ZW0uQ29yZQBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNl
cy5Db3JlAHNlbWFwaG9yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
Z2V0X0ludmFyaWFudEN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAGRhdGFiYXNlAFJlbGVhc2UARGlzcG9zZQBDcmVhdGUA
Z2V0X1N0YXRlAERlYnVnZ2VyQnJvd3NhYmxlU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAT2Jq
ZWN0U3RhdGUAQ2FsbFNpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAERlYnVnZ2VyQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dl
ckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVlAFRyeUdldFZhbHVlAHZhbHVl
AFNlcmlhbGl6ZQBEZXNlcmlhbGl6ZQBTeXN0ZW0uVGhyZWFkaW5nAE9yZGVyQnlEZXNjZW5kaW5n
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdhcm5pbmcAZ2V0X0Nvbm5lY3Rpb25TdHJp
bmcAdGFidWxhckNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAUGF0aABTdGFydHNXaXRoAGdldF9p
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAGdldF9Nb2RlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFdhaXRBbGwAU1RfNTg5NDUxNTAxYzBh
NGRlN2IwZTIyY2E1NmQxYzgxM2IuZGxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBTZW1hcGhv
cmVTbGltAHJlc291cmNlTWFuAG9wX0xlc3NUaGFuAFRpbWVTcGFuAFNjcmlwdE1haW4ASm9pbgBf
bG9jYXRpb24ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AQWN0aW9uAG9wX1N1YnRy
YWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFhtbGFNZXNzYWdlQ29sbGVjdGlvbgBUYWJsZUNvbGxl
Y3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9uAFBhcnRpdGlvbkNvbGxlY3Rpb24AWG1sYVJlc3VsdENv
bGxlY3Rpb24AUGFydGl0aW9uAEV4Y2VwdGlvbgBnZXRfRGVzY3JpcHRpb24AUnVuAGdldF9vAEN1
bHR1cmVJbmZvAENTaGFycEFyZ3VtZW50SW5mbwBTbGVlcABNaWNyb3NvZnQuQ1NoYXJwAFN5c3Rl
bS5MaW5xADxpPmpfX1RQYXIAPG8+al9fVFBhcgBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNlcy5U
YWJ1bGFyAEludm9rZU1lbWJlcgBJRm9ybWF0UHJvdmlkZXIATWljcm9zb2Z0LkNTaGFycC5SdW50
aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgBFdmVu
dHNPYmplY3RXcmFwcGVyAFNlcnZlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBGaXJlRXJyb3IASUVu
dW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IASW52b2tlQ29uc3RydWN0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAGdldF9Ub3RhbFNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4
OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfTWVzc2FnZXMATWF4UmV0cmllcwBTVF81ODk0NTE1MDFj
MGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxl
cwBHZXREYXRhYmFzZU5hbWVzAGdldF9EYXRhYmFzZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MA
Q1NoYXJwQmluZGVyRmxhZ3MAdGltaW5ncwBTZXR0aW5ncwBBZGRNb250aHMAPD40X190aGlzAFN5
c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAFByb2Nlc3NEaW1lbnNpb25zAFN5c3RlbS5XZWIu
RXh0ZW5zaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcnRpdGlvbnMAcGFyYWxsZWxQYXJ0
aXRpb25zAGdldF9Db250YWluc0Vycm9ycwBQcm9jZXNzAGdldF9EdHMAUHJvY2Vzc0ZhY3RzAFBy
b2Nlc3NPYmplY3RzAG9iamVjdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQWRkRGF5cwBDb25jYXQARm9y
bWF0AFBhcnNlRXhhY3QATmFtZWRNZXRhZGF0YU9iamVjdABzdWJqZWN0AFNlbGVjdABDb25uZWN0
AERpc2Nvbm5lY3QAVGFyZ2V0AFdhaXQAZ2V0X0RlZmF1bHQAWG1sYVJlc3VsdABzZXRfVGFza1Jl
c3VsdABTbXRwQ2xpZW50AEVudmlyb25tZW50AE5hbWVkQ29tcG9uZW50AGdldF9QYXJlbnQAZ2V0
X0N1cnJlbnQAU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQAZ2V0X0NvdW50AENvbnZlcnQA
Q2FzdABUb0xpc3QATW92ZU5leHQAUmVhZEFsbFRleHQAV3JpdGVBbGxUZXh0AGdldF9Ob3cAR2V0
SW5kZXgAR3JvdXBCeQBUb0FycmF5AGdldF9Bc3NlbWJseQBTZWxlY3RNYW55AEVtcHR5AAAAAC17
AHsAIABvACAAPQAgAHsAMAB9ACwAIABpACAAPQAgAHsAMQB9ACAAfQB9AAAXewAwAH0AOgB7ADEA
fQA6AHsAMgB9AAAnUwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAIVMAeQBz
AHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC0kAFAAcgBvAGoAZQBjAHQAOgA6AFMAZQB0AHQA
aQBuAGcAcwBQAGEAdABoAAAbUwBlAHQAdABpAG4AZwBzAC4AagBzAG8AbgAAGVQAaQBtAGkAbgBn
AHMALgBqAHMAbwBuAAAvdABhAGIAdQBsAGEAcgBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkA
bgBnAAAlVABpAG0AaQBuAGcAcwAgAC0APgAgAHsAMAB9AAoAewAxAH0AASVwAGEAcgBhAGwAbABl
AGwAUABhAHIAdABpAHQAaQBvAG4AcwAAD3QAaAByAGUAYQBkAHMAAAd7ADAAfQAAE0UAUgBSAE8A
UgAgAC0AIAAoAAEDKQAAHXsAMAB9ACAALQA+ACAAewAxAH0ACgB7ADIAfQABU3sAIgByAGUAZgBy
AGUAcwBoACIAOgAgAHsAIgB0AHkAcABlACIAOgAgACIAZgB1AGwAbAAiACwAIAAiAG8AYgBqAGUA
YwB0AHMAIgA6ACAAWwAAAywAAAddAH0AfQAAE0UAWABFAEMAVQBUAEUAOgAKAAAJIAAtAD4AIAAB
AwoAABVDAE8ATQBQAEwARQBUAEUAOgAKAAAXVwBBAFIATgBJAE4ARwAgAC0AIAAoAAEJUwBlAG4A
ZAAAFXMAbQB0AHAAUwBlAHIAdgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQAZAByAGUAcwBz
AAAhdABvAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5ADQANQAxADUA
MAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAD3kAeQB5AHkALQBNAE0AARtWAGUA
cgBpAGYAaQBjAGEAdABpAG8AbgBfAAAdewAiAGQAYQB0AGEAYgBhAHMAZQAiADoAIAAiAAAbIgAs
ACAAIgB0AGEAYgBsAGUAIgA6ACAAIgAABSIAfQAAIyIALAAgACIAcABhAHIAdABpAHQAaQBvAG4A
IgA6ACAAIgAAAAAATpz49ylpsUaWZna9izVmXwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERPQYg
AQERgMEIFRIIAhMAEwEDBhMAAwYTAQoHARUSCAITABMBBxUSgM0BEwAJAAAVEoDNARMAByACAhMA
EwAHFRKAzQETAQUgAQgTAAYHAhMAEwECEwADIAAOAhMBCQADDhKA1Q4dHAsHBhIcDg4cElESUQMA
AA4FIAASgN0FIAASgOEGIAESgOUcAyAAHAcABA4OHBwcBQACDg4OBAABDg4GMAEBHgAOAwoBHAgA
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
ABMBBQgAEoC5BQgAEoC9BAgAEhQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAAAFAQAA
AAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEA
AAAIAQAAAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGBcAAAAAAAAAAAAAHpcAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABsXAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAA
AAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAmBAAAAAAAAAAAAAAm
BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA6I6NIgAA
AQDojo0iPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu
AGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEhgMAAAEAUwB0AHIA
aQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBv
AG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAVABWAEEA
AABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANQA4ADkANAA1
ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAAAA
PgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAOAA0ADUALgAzADYANQA4
ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQA4ADkANAA1ADEA
NQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AZABs
AGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAx
AGMAOAAxADMAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBj
ADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgA
OAA0ADUALgAzADYANQA4ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADgAOAA0ADUALgAzADYANQA4ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAjDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RemoveCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{7466608a-32ca-4111-bfda-0dc1bfdcb510}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="RemoveCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Collections.Generic;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];

                Remove(tabularConnectionString, Directory.GetFiles(bimPath, "*.bim").ToList());
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, _location, $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Remove
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="bimFiles"></param>
		/// <returns></returns>
		private void Remove(string tabularConnectionString, List<string> bimFiles)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
					server.Connect(tabularConnectionString);
					var databases= bimFiles.ToDictionary(b => Path.GetFileNameWithoutExtension(b));
                    server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_") && !databases.ContainsKey(d.Name)).ToList().ForEach(d => {
                        var command = $"{{\"delete\": {{\"object\": {{\"database\": \"{d.Name}\"}}}}}}";
                        server.Execute(command);

						bool fireAgain = true;
						Dts.Events.FireInformation(0, _location, $"{d.Name} -> {tabularConnectionString}\n{command}", string.Empty, 0, ref fireAgain);
					});                    
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, _location, $"{string.Join(",", bimFiles)} -> {tabularConnectionString}\n{ex}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }

		/// <summary>
		/// SendMail
		/// </summary>
		/// <param name="subject"></param>
		/// <param name="message"></param>
		private void SendMail(string subject, string message)
		{
			try
			{
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
				new SmtpClient(settings["smtpServer"]).Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
			}
			catch (Exception ex)
			{
				Dts.Events.FireWarning(0, _location, $"{ex}", string.Empty, 0);
			}
		}
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:DisplayName>
    <msb:ProjectId>{C262DEBD-67ED-437B-ACDA-A2F35EF4C1CD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.dll">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
BgA4BKQGBgCPA6QGBgCqA+gECgBTBGYFCgCxAmYFBgCuCQEGBgDeBgEGDgDlAioHDgC4ByoHBgCA
AJIBBgATAxcIBgDHAAEGBgDOAJIBEgBsABcIBgD3AAEGEgAKAxcIBgDiAAEGBgBSAgEGFgDyCbcF
BgD+AAEGBgAuAwQIBgCMB1IIBgDoBm8GFgD1AqEFFgBfA6EFFgDNAloGBgD9CQEGBgAoBQEGCgCP
BWYFGgDzCCoCGgDTASoCHgDGB4QGBgA3BTgBBgAMAjgBBgDoAQEGIgCBB1oHEgB5BxcIIgA/CVoH
IgD0BloHIgAnCVoHBgBeAJIBBgBnCjgBEgDdAR4HCgCkB2YFJgC4B2kCDgC2BioHBgDcAXoJBgB3
AAEGBgCtAdcEBgBRCqQGJgAJCjcIJgDJBjcIAAAAAC8BAAAAAAEAAQABABAAFAZhATkAAQABAAAA
EABZCMAIPQADAAUAAAEQAFEJwAiNAAUACQADIRAAjgEAAD0ABgAMAAMBEAAZAAAAPQAIAA8AAwEQ
ADUAAAA9AAoAEAADARAAlwAAAD0ADAASAIMBEAC5AAAAPQANABQAgwEQAOkAAAA9ABEAFABRgLUI
lwIBAEAGDQERAAgGmgIRAKECngIRALQBowI2ACsBpwIWAAEAqwIGAFoJswIGAA4FDQEGAL8HtwIG
AIcAuwIGAB0JvwIWAC4AxwIWAFcA1gIWAMAAxwIWANsA1gIWAC4AxwIWAFcAxwIWAMAAxwIWANsA
5AIWAPAA9QJQIAAAAACGABoGBgABALAiAAAAAIEAxAQHAwEA+CMAAAAAgQDHBREDAwBcJgAAAACG
GOUHBgAFAGQmAAAAAIMY5QcGAAUAbCYAAAAAkwiIBxcDBQCYJgAAAACTCIkCHAMFAJ8mAAAAAJMI
lQIiAwUApyYAAAAAlgjXCSkDBgCuJgAAAACGGOUHBgAGALYmAAAAAJEY6wcuAwYAwiYAAAAAkRjr
By4DBgBkJgAAAACGGOUHBgAGAM4mAAAAAIMACgAyAwYAZCYAAAAAhhjlBwYABwBkJgAAAACGGOUH
BgAHANgmAAAAAIMArAA3AwcAZCYAAAAAhhjlBwYACABzJwAAAACDAEoAPQMIAAAAAQAOBQAAAgD9
CAAAAQC1CQAAAgDEAQAAAQC+BAAAAQCMAQAAAQCyAQAAAQCyAQkA5QcBABEA5QcGABkA5QcKACkA
5QcQADEA5QcQADkA5QcQAEEA5QcQAEkA5QcQAFEA5QcQAFkA5QcQAGEA5QcQAGkA5QcGAKEA5QcG
APEA5QcGABEB5QcVACEBGgIkACkBnAcoAHEAjQksADEB7wgyADkB+AU4AEEBtAQ/ACkBpwlDAEkB
5QcGAHkAJgUoAFEBSgJLAFkBLApRAEkBywRWANkA+gFhAGkBGAppAAwA7gKDAAwA0AmPAIEB7gKT
AGkBOAqdABQA7gKDABQA0AmPABwAzAHIACQAzAHcAJkBBgnlAKEBJQrsADEB4wkBADEBlQkBASkB
pwkHASkBcQoNAakB2wcQASkBoAkZAZEA5QcGALEBvQkQACwA5QczAaEBWgo5AZEADwlZAaEBIApf
ATQA5QczAaEBVwJ6ATwA5QczAUQALwWiASkBHwatAakBAgW4AdEBBwfBAbEBxQkGAGkBTQfMAUwA
7gKDAEwA0AmPAGkB8gedAFQA7gKDAFQA0AmPAFwAzAHIAGQAzAEhAnEA5QcGAHkA5QcGANkATQox
AvkA5Qc3AhkB5QcGAFEBJAZRAOEBEQIoALEBrAREAikBoAlLAqkBSgZRAikBPAVcAmwAQQpoAggA
BACSAikAewB7Ay4ACwBTAy4AEwBcAy4AGwB7Ay4AIwCEAy4AKwCtAy4AMwCtAy4AOwCzAy4AQwCE
Ay4ASwC8Ay4AUwCtAy4AWwDWA0MAYwAgBEkAewB7A2MAcwAgBKEAawAgBKMAawAgBMMAawAgBOMA
awAgBAMBawAgBCMBawAgBEMBawAgBBwAIAHGAT8CAwABAAQAAwAAAIwHQwMAAKkCSAMAANsJTgMC
AAYAAwACAAcABQABAAgABQACAAkABwB2ALAAvgDTACwBcgGTAZsB5wH4AQgCFAJhAgSAAAABAAAA
giKaUQAAAAAAAAcBAAAEAAAAAAAAAAAAAABuAoUBAAAAABAAAAAAAAAAAAAAAHcCRwUAAAAADwAA
AAAAAAAAAAAAdwIqBwAAAAAEAAAAAAAAAAAAAABuAl0CAAAAAAQAAAAAAAAAAAAAAG4CAQYAAAAA
EAAAAAAAAAAAAAAAdwJCAQAAAAAEAAAAAAAAAAAAAACAAmQJAAAAAAQAAAAAAAAAAAAAAIkCDQcA
AAAADwAAAAAAAAAAAAAAdwJpAgAAAAAAAAAAAQAAAGMIAAAFAAIABgACAAcAAgAIAAIACQACAAoA
AgA3AF0ATwD9AGMAVAFnAG0BawBtAU8AbQEAAAA8PjlfXzNfMAA8UmVtb3ZlPmJfXzNfMAA8PmNf
X0Rpc3BsYXlDbGFzczNfMAA8PnBfXzAAPD5jX19EaXNwbGF5Q2xhc3MzXzEAPFJlbW92ZT5iX18x
ADw+cF9fMQBJRW51bWVyYWJsZWAxAENhbGxTaXRlYDEAQWN0aW9uYDEATGlzdGAxAENTJDw+OF9f
bG9jYWxzMQA8PmNfX0Rpc3BsYXlDbGFzczNfMgA8UmVtb3ZlPmJfXzIAPD5vX18yADw+cF9fMgBG
dW5jYDIARGljdGlvbmFyeWAyADw+cF9fMwBGdW5jYDMAPD5vX180ADw+cF9fNABGdW5jYDQAQWN0
aW9uYDYAU1RfOWExZDMzYzdlOGM5NGFmMDg5YTg0YzBmYTMwZmNiYzYAPD45ADxNb2R1bGU+AFN5
c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1RfNTg5NDUxNTAxYzBhNGRl
N2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
AFRocmVhZABkZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UAVmFyaWFibGUASUVudW1lcmFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTmFtZQBnZXRf
TWFjaGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUA
V2hlcmUAU3lzdGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERhdGFiYXNlAENyZWF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDYWxsU2l0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAdmFsdWUAUmVtb3Zl
AERlc2VyaWFsaXplAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBG
aXJlV2FybmluZwB0YWJ1bGFyQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBGb3JFYWNoAFBhdGgA
U3RhcnRzV2l0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFNUXzlhMWQzM2M3ZThjOTRhZjA4OWE4
NGMwZmEzMGZjYmM2LmRsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBK
b2luAEdldEZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbgBfbG9jYXRpb24ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2Ny
aXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9uAFht
bGFSZXN1bHRDb2xsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBBcmd1bWVudElu
Zm8AU2xlZXAATWljcm9zb2Z0LkNTaGFycABTeXN0ZW0uTGlucQBNaWNyb3NvZnQuQW5hbHlzaXNT
ZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVCaW5k
ZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2ZW50c09iamVj
dFdyYXBwZXIAU2VydmVyAHNlcnZlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAEludm9rZUNvbnN0cnVjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAE1heFJldHJpZXMAU1RfNTg5NDUxNTAx
YzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAGJpbUZpbGVz
AEdldEZpbGVzAGdldF9EYXRhYmFzZXMAZGF0YWJhc2VzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdz
AENTaGFycEJpbmRlckZsYWdzAFNldHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uV2ViLkV4dGVuc2lv
bnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AE9i
amVjdABzdWJqZWN0AENvbm5lY3QARGlzY29ubmVjdABUYXJnZXQAZ2V0X0RlZmF1bHQAc2V0X1Rh
c2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVudABDb252ZXJ0AENh
c3QAVG9MaXN0AFJlYWRBbGxUZXh0AEdldEluZGV4AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBU
b0RpY3Rpb25hcnkARGlyZWN0b3J5AEVtcHR5AAAAF3sAMAB9ADoAewAxAH0AOgB7ADIAfQAAJ1MA
eQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAVABh
AHMAawBOAGEAbQBlAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAdAB0AGkAbgBnAHMAUABhAHQA
aAAAG1MAZQB0AHQAaQBuAGcAcwAuAGoAcwBvAG4AAA9iAGkAbQBQAGEAdABoAAAvdABhAGIAdQBs
AGEAcgBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAALKgAuAGIAaQBtAAAHewAwAH0A
ABNFAFIAUgBPAFIAIAAtACAAKAABAykAAB17ADAAfQAgAC0APgAgAHsAMQB9AAoAewAyAH0AAQMs
AAAJUwBlAG4AZAAAFXMAbQB0AHAAUwBlAHIAdgBlAHIAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQA
ZAByAGUAcwBzAAAhdABvAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5
ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMA
YgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAASXsAIgBkAGUAbABl
AHQAZQAiADoAIAB7ACIAbwBiAGoAZQBjAHQAIgA6ACAAewAiAGQAYQB0AGEAYgBhAHMAZQAiADoA
IAAiAAAJIgB9AH0AfQAACSAALQA+ACAAAQMKAAAbVgBlAHIAaQBmAGkAYwBhAHQAaQBvAG4AXwAA
AGKRem2BpbFAh7gAIMP1+h8ABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCFBwcEHA4OEkEDAAAO
AyAADgUgABKAmQUgABKAnQYgARKAoRwDIAAcBwAEDg4cHBwFAAIODg4EAAEODgYwAQEeAA4DCgEc
BwABEm0RgLEMAAMSgLkRgL0SbRJtDBUSXQEVEmkDEmUcDgsAARUSXQETABKAuQMGEwAJAAISgMER
gMUOEgADEoC5EYC9Em0VEoDJARKAwQ0VEl0BFRJhBBJlHA4cCRUSYQQSZRwOHAogAxMDEwATARMC
CBUSaQMSZRwOCCACEwITABMBBgACHQ4ODhAQAQEVEk0BHgAVEoDJAR4AAwoBDgUgABKA1QUAAg4O
HAIGDgggBQIIDg4OCAYAAw4ODg4LBwUSGAgSHBIgEkEGFRJVAg4OBSACARwYGhACAhUSWQIeAR4A
FRKAyQEeABUSVQIeAB4BBAoCDg4FIAASgN0NEAEBFRKAyQEeABKA4QQKARJFBxUSVQISRQIYEAEC
FRKAyQEeABUSgMkBHgAVElUCHgACBxUSgOUBEkUGFRJNARJFCiABARUSgOUBEwAKAAIODhUSgMkB
DgggBQEIDg4OCAQAAQEIBQcCHBJBGgAFEoC5EYC9DhUSgMkBEm0SbRUSgMkBEoDBEBUSXQEVEnUG
EmUScRwcDg4PFRJdARUSYQQSZRJtHBJxCxUSYQQSZRJtHBJxDBUSdQYSZRJxHBwODg8gBgETABMB
EwITAxMEEwUFIAASgO0HIAIBDhKA7QQHAg4CBiABEoD1DgUAAQ4dDgogBgEIDg4OCBACBCABAg4G
FRJZAg4OBSABAhMACLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6BAUAAAACBggD
BhJ9BAYSgIEDBhIQAwYSFAcGFRJVAg4OAwYSCAMGEkkDBhIYBwYVElkCDg4OBhUSXQEVEmEEEmUc
DhwNBhUSXQEVEmkDEmUcDhAGFRJdARUSYQQSZRJtHBJxEQYVEl0BFRJ1BhJlEnEcHA4OCSACAQ4V
Ek0BDgUgAgEODgQAABJ9BQAAEoCBBgABARKAgQQAABIQAwAAAQQgAQ4OBSABARJFBSABAhJFBAgA
En0FCAASgIEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAAAUBAAAAAAgBAANU
VkEAABkBABRDb3B5cmlnaHQgQCBUVkEgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAMQgAAAAAAAAAAAAAmQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEIAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
JgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAJpRgiIAAAEAmlGCIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAFQAVgBBAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAx
AGMAOAAxADMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADgA
MwA0AC4AMgAwADgAOQAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAYQAxAGQAMwAzAGMANwBlADgAYwA5ADQAYQBmADAAOAA5AGEAOAA0AGMAMABmAGEAMwAwAGYA
YwBiAGMANgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAVABWAEEAIAAyADAAMgA0AAAAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA5AGEAMQBkADMAMwBjADcAZQA4AGMAOQA0AGEAZgAwADgAOQBhADgA
NABjADAAZgBhADMAMABmAGMAYgBjADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIA
YwBhADUANgBkADEAYwA4ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADgAOQAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADgAMwA0AC4AMgAwADgAOQAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAADgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B3D59A90-C09B-499A-BE5C-FE6269149BEA}"
      DTS:From="Package\RemoveCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ProcessCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{42B88B4A-FDD5-46A9-BBB5-F348D5FAB45D}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::Execute]"
      DTS:From="Package\Execute"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DeployCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C6A539D4-C8B4-413F-A65A-700E946D8222}"
      DTS:From="Package\ProcessCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Complete" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{37FF383C-1C25-489E-852A-76C94EEA9038}"
      DTS:From="Package\DeployCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\RemoveCubes" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="190,42"
          Id="Package\Complete"
          TopLeft="122.311111111111,380" />
        <NodeLayout
          Size="190,42"
          Id="Package\DeployCubes"
          TopLeft="122.311111111111,170" />
        <NodeLayout
          Size="190,42"
          Id="Package\Execute"
          TopLeft="122.311111111111,100" />
        <NodeLayout
          Size="190,42"
          Id="Package\ProcessCubes"
          TopLeft="122.311111111111,310" />
        <NodeLayout
          Size="190,42"
          Id="Package\RemoveCubes"
          TopLeft="122.311111111111,240" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="217.311111111111,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="217.311111111111,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="217.311111111111,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="217.311111111111,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>