<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/16/2024 2:38:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CHADWHH01"
  DTS:CreatorName="TVA\emroush-wa"
  DTS:DTSID="{2A1E5369-7B7A-452D-859A-AF9AF3DC4000}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessCubes"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="69"
  DTS:VersionGUID="{1EB409D3-D3EE-4C2E-8F8F-C9F80ECE020A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3376DF3A-C5DA-4BD3-B830-3B635FACC292}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Execute">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Complete"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{13df2463-f766-487d-b83e-7d3db944e768}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Complete"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f21f1a3ffa864259a3e934608f1397dd"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        /// <summary>
        /// 
        /// </summary>
        private string _location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                _location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                var settingsPath = Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json");
				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(settingsPath));
                
                Complete(settings, settingsPath);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, $"ERROR - ({_location})", $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({_location})", $"{ex}");
			}
		}

		/// <summary>
		/// Complete
		/// </summary>
		/// <param name="settings"></param>
		/// <param name="settingsPath"></param>
		/// <returns></returns>
		private void Complete(dynamic settings, string settingsPath)
        {
            settings["execute"] = false;
			File.WriteAllText(settingsPath, new JavaScriptSerializer().Serialize(settings));
		}

        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
            try
            {
                string smtpServer = settings["smtpServer"];
                SmtpClient smtpClient = new SmtpClient(smtpServer);
                smtpClient.Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, $"ERROR - ({_location})", $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_f21f1a3ffa864259a3e934608f1397dd</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f21f1a3ffa864259a3e934608f1397dd</msb:DisplayName>
    <msb:ProjectId>{023AABA3-111D-465E-8DAC-4735570F419F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f21f1a3ffa864259a3e934608f1397dd.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f21f1a3ffa864259a3e934608f1397dd.dll">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
iAIDAHAlAAAAAIYYMwYGAAUAeCUAAAAAgxgzBgYABQCAJQAAAACTCOQFjgIFAKwlAAAAAJMIsQGT
AgUAsyUAAAAAkwi9AZgCBQC7JQAAAACWCJwHngIGAMIlAAAAAIYYMwYGAAYAyiUAAAAAkRg5BqMC
BgAAAAEARgcAAAIAJAQAAAEAjQcAAAIAJwEAAAEA7wMJADMGAQARADMGBgAZADMGCgApADMGEAAx
ADMGEAA5ADMGEABBADMGEABJADMGEABRADMGEABZADMGEABhADMGEABpADMGBgCJADMGBgCZADMG
BgDpADMGBgAJATMGFQAZAWgBIwAhAfgFJwBxAGUHKwApAQUHMQAxAeIENwA5AeUDPgAhAX8HQgB5
ABsEJwBBAZgBSgDJADMGBgBJAdYHUADJAPUDVQDRAFEBYABZAQ0CaABpAakFcgAMAA0CnAAMAJUH
qAAUAC8BtwApAagHAQApAW0HwwAhAXgHyQAhAX8H0AAhAQEI1gCJASkG2QBpAesH4gAcAA0CnAAc
AJUHqAAkAC8BDwEsAA0CnAAsAJUHqAA0AA0CnAA0AJUHqAA8AC8BRQFEAC8BtwBpAc4HYwFMAA0C
nABMAJUHqABpAeIH4gBUAA0CnABUAJUHqABcAC8BRQFkAC8BngGRADMGEABsAA0CnABsAJUHqAB0
AC8BxQFxADMGBgB5ADMGBgDRAPQH1QHxADMG2wERATMGBgAkAGsAgwMpAIMA3gIuAAsAtgIuABMA
vwIuABsA3gIuACMA5wIuACsAEAMuADMAEAMuADsAFgMuAEMA5wIuAEsAHwMuAFMAEAMuAFsAOQND
AGMAgwNJAIMA3gJjAHsAgwOBAHMAgwOjAHMAgwPDAHMAgwPjAHMAgwMcAFsBAwABAAQAAwAAAOgF
pwIAANEBrAIAAKAHsQICAAYAAwACAAcABQABAAgABQACAAkABwCNAKwA9QAEARwBKwE6AVABcAF9
AYsBlQGnAbgBBIAAAAEAAABfItNIAAAAAAAA8wAAAAQAAAAAAAAAAAAAAOMBzwAAAAAAEAAAAAAA
AAAAAAAA7AExBAAAAAAEAAAAAAAAAAAAAADjAaUBAAAAAAQAAAAAAAAAAAAAAOMB6wQAAAAABAAA
AAAAAAAAAAAA9QFPBwAAAAAQAAAAAAAAAAAAAADsAYwAAAAAAAQAAAAAAAAAAAAAAP4BmAUAAAAA
AAAAAAEAAACEBgAABQACAAYAAgAHAAIAOQBcAAAAAAAAPD5wX18wADw+b19fMQA8PnBfXzEASUVu
dW1lcmFibGVgMQBDYWxsU2l0ZWAxADw+b19fMgA8PnBfXzIAPD5vX18zADw+cF9fMwBGdW5jYDMA
PD5wX180AEZ1bmNgNABBY3Rpb25gNABGdW5jYDUAQWN0aW9uYDYAPE1vZHVsZT4AU3lzdGVtLklP
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJj
YTU2ZDFjODEzYgBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBTVF9mMjFmMWEz
ZmZhODY0MjU5YTNlOTM0NjA4ZjEzOTdkZABkZWZhdWx0SW5zdGFuY2UAbWVzc2FnZQBJbnZva2UA
VmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfTWFj
aGluZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAU3lz
dGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDcmVhdGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGxldGUAQ2FsbFNpdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAZ2V0X1ZhbHVlAHZhbHVlAERlc2VyaWFsaXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VG9TdHJpbmcAc2V0dGluZ3NQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1haWwAU1RfZjIxZjFhM2Zm
YTg2NDI1OWEzZTkzNDYwOGYxMzk3ZGQuZGxsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAF9sb2NhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uV2ViLlNjcmlwdC5TZXJpYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4
Y2VwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBBcmd1bWVudEluZm8ATWljcm9zb2Z0LkNTaGFycABJ
bnZva2VNZW1iZXIATWljcm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVy
AGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgBFdmVudHNPYmplY3RXcmFwcGVyAEphdmFTY3Jp
cHRTZXJpYWxpemVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81ODk0NTE1
MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVy
dGllcwBnZXRfVmFyaWFibGVzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdzAENTaGFycEJpbmRlckZs
YWdzAFNldHRpbmdzAHNldHRpbmdzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBnZXRfRHRzAGdldF9F
dmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAc3ViamVjdABUYXJnZXQAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABDb252ZXJ0AFJlYWRBbGxUZXh0AEdl
dEluZGV4AFNldEluZGV4AGdldF9Bc3NlbWJseQBFbXB0eQAAABd7ADAAfQA6AHsAMQB9ADoAewAy
AH0AACdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0A
OgA6AFQAYQBzAGsATgBhAG0AZQAALSQAUAByAG8AagBlAGMAdAA6ADoAUwBlAHQAdABpAG4AZwBz
AFAAYQB0AGgAABtTAGUAdAB0AGkAbgBnAHMALgBqAHMAbwBuAAARQwBvAG0AcABsAGUAdABlAAAT
RQBSAFIATwBSACAALQAgACgAAQMpAAAHewAwAH0AAA9lAHgAZQBjAHUAdABlAAAZVwByAGkAdABl
AEEAbABsAFQAZQB4AHQAABNTAGUAcgBpAGEAbABpAHoAZQAAFXMAbQB0AHAAUwBlAHIAdgBlAHIA
AAlTAGUAbgBkAAAhZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBFAG0AYQBp
AGwAQQBkAGQAcgBlAHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQA
ZQA3AGIAMABlADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAADohEmInjEPRL+t1f7/W5//AAQgAQEIAyAAAQUgAQEREQQg
AQEOBiABARGAgQYHAw4cEkEDAAAOAyAADgUgABKAlQUgABKAmQYgARKAnRwDIAAcBwAEDg4cHBwF
AAIODg4EAAEODgYwAQEeAA4DCgEcBwABEmkRgKkJAAISgK0RgLEOGgAFEoC5EYC9DhUSgMEBEmkS
aRUSgMEBEoCtDhUSUQEVElUEElkSCBwOCwABFRJRARMAEoC5AwYTAAoVElUEElkSCBwOCyAEARMA
EwETAhMDBSAAEoDFBgADDg4ODgUAAg4OHAIGDgggBQIIDg4OCBIAAxKAuRGAvRJpFRKAwQESgK0O
FRJRARUSXQUSWRwOAhwKFRJdBRJZHA4CHAwgBBMEEwATARMCEwMOFRJRARUSVQQSWRJpDhwOFRJR
ARUSYQQSWRJlHBwKFRJhBBJZEmUcHAogAxMDEwATARMCChUSVQQSWRJpDhwHBwMcEkkSQQwAAxKA
uRGAvRJpEmkMFRJRARUSbQMSWRwODRUSUQEVEmEEElkcDhwJFRJhBBJZHA4cCBUSbQMSWRwOCCAC
EwITABMBEBUSUQEVEnEGElkSSRwcDg4MFRJxBhJZEkkcHA4ODyAGARMAEwETAhMDEwQTBQUgABKA
yQcgAgEOEoDJCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6AwYSeQMGEn0DBhIQ
DwYVElEBFRJVBBJZEggcDg8GFRJRARUSXQUSWRwOAhwPBhUSUQEVEmEEElkSZRwcDwYVElEBFRJV
BBJZEmkOHA4GFRJRARUSYQQSWRwOHA0GFRJRARUSbQMSWRwOEQYVElEBFRJxBhJZEkkcHA4OBSAC
ARwOBSACAQ4OBAAAEnkEAAASfQUAAQESfQQAABIQAwAAAQQIABJ5BAgAEn0ECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNTg5NDUxNTAx
YzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAAAUBAAAAAAgBAANUVkEAABkBABRDb3B5cmlnaHQgQCBU
VkEgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADUOgAAAAAAAAAAAADu
OgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4DoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQDTSF8iAAABANNIXyI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABUAFYAQQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA3ADkAOQAuADEAOAA2ADQAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBmADIAMQBmADEAYQAzAGYAZgBhADgANgA0ADIANQA5AGEAMwBlADkAMwA0ADYAMAA4AGYA
MQAzADkANwBkAGQALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAVgBBACAAMgAwADIANAAAAAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AZgAyADEAZgAxAGEAMwBmAGYAYQA4ADYANAAyADUAOQBhADMA
ZQA5ADMANAA2ADAAOABmADEAMwA5ADcAZABkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUA
MgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOAA3ADkAOQAuADEAOAA2ADQAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA3ADkAOQAuADEAOAA2ADQAMwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAAOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DeployCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{07483abf-6af0-4671-960a-4fb6f7df47c8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DeployCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5b6adba25bc54be0be84d43b4b60cb08"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_5b6adba25bc54be0be84d43b4b60cb08</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];

                Directory.GetFiles(bimPath, "*.bim").ToList().ForEach(bimFile => Deploy(tabularConnectionString, bimFile));
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({location})", $"{ex}");
			}
		}

        /// <summary>
        /// Deploy
        /// </summary>
        /// <param name="tabularConnectionString"></param>
        /// <param name="bimFile"></param>
        /// <returns></returns>
        private void Deploy(string tabularConnectionString, string bimFile)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
                    server.Connect(tabularConnectionString);
                    var databaseName = Path.GetFileNameWithoutExtension(bimFile);
                    var bim = File.ReadAllText(bimFile);

                    dynamic cube = new JavaScriptSerializer().Deserialize<dynamic>(bim);
                    var database = server.Databases.FindByName(databaseName);

                    if (!UpdateCapable(cube, database))
                        server.Execute($"{{\"delete\": {{\"object\": {{\"database\": \"{databaseName}\"}}}}}}");

                    var command = $"{{\"createOrReplace\": {{\"object\": {{\"database\": \"{databaseName}\"}}, \"database\": {bim}}}}}";
                    var result = server.Execute(command);
                    if (result.ContainsErrors)
                        throw new Exception($"{command}\n{bimFile} -> {tabularConnectionString}\n\n{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}");
                    
                    bool fireAgain = true;
                    Dts.Events.FireInformation(0, location, $"{command}\n{bimFile} -> {tabularConnectionString}", string.Empty, 0, ref fireAgain);
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, $"WARNING - ({location})", $"{ex}\n\n{bimFile} -> {tabularConnectionString}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }
        
        /// <summary>
        /// UpdateCapable
        /// </summary>
        /// <param name="cube"></param>
        /// <param name="database"></param>
        /// <returns></returns>
        private bool UpdateCapable(dynamic cube, Database database)
        {
            var compatibilityLevel = (int)cube["compatibilityLevel"];
            var clientCompatibilityLevel = cube["model"]["annotations"][0]["value"];

            var existingCompatibilityLevel = database?.CompatibilityLevel;
            var existingClientCompatibilityLevel = database?.Model.Annotations.Find("ClientCompatibilityLevel").Value;

            return database == null || compatibilityLevel == existingCompatibilityLevel && clientCompatibilityLevel == existingClientCompatibilityLevel;
        }

        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
            try
            {
                string smtpServer = settings["smtpServer"];
                SmtpClient smtpClient = new SmtpClient(smtpServer);
                smtpClient.Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5b6adba25bc54be0be84d43b4b60cb08</msb:DisplayName>
    <msb:ProjectId>{3D5035D8-5B8F-42A5-986E-9F47F807506D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5b6adba25bc54be0be84d43b4b60cb08.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5b6adba25bc54be0be84d43b4b60cb08.dll">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
CioucwsAAAaABQAABCoucw4AAAaABgAABCoyA29qAAAKKAYAACsqHgNvawAACipOAnsJAAAEAnsK
AAAEAygCAAAGKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAsCQAAI34AAJgJ
AACgCwAAI1N0cmluZ3MAAAAAOBUAALgDAAAjVVMA8BgAABAAAAAjR1VJRAAAAAAZAABkBQAAI0Js
b2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAASQAAAAoAAAAgAAAAEgAAAAoAAABrAAAA
AQAAABcAAAAEAAAAAgAAAAMAAAAEAAAAGAAAAAEAAAAJAAAAAQAAAAYAAAAGAAAAAABeBgEAAAAA
AAYAcQT9CAYAAAX9CAYAvQPqCA8AjAkAAAYA6gNjBwYAVARjBwYANQRjBwYA5wRjBwYAkQRjBwYA
qgRjBwYAAQRjBwYAHARgBQoAxQTTBQoACQPTBQYAyQqPBgYAzQePBg4APQMpCA4AtwgpCBIAuAcd
CRYAdAP9CAYAXwCPBhoAMQtFBgYAhQP9CAYApwCPBhIAFwsdCQYAagC9ARIA+QEdCRYAeAD9CAYA
8QCPBhYAawP9CAYA3ACPBgYABgGPBgYAFAGPBgYAoAPqCAYAiwg4CQYA5wcuBxoAVgMYBhoA0QMY
BhoAJQMOBwYAPAuPBgYAoAWPBgoABgbTBR4A5gl+Ah4AFAJ+AiIAvghDBwYArwVjAQYAXgJjAQYA
sAKPBgYANwKPBiYAgAhZCBYAeAj9CCYAHwpZCCYA8wdZCCYABwpZCAYAkAtjARYALAIdCAYAjAC9
AQYAgwCPBgoAowjTBRIAtwjBAg4AiwcpCBYApgJaCgYAKwKCCgYA2AFPBQYAkwCPBhIAPQPBAg4A
KAYpCA4AngcpCA4ArgApCA4AIwcpCAYAogaPBgYAdQtjBxIAdQcdCQAAAABaAQAAAAABAAEAAQAQ
AKoGjAE5AAEAAQAAABAAPwmzCT0AAwAGAAABEAAxCrMJnQAFAAoAAyEQALkBAAA9AAYADQADARAA
AQAAAD0ACQARAIMBEACZAAAAPQALABMAgwEQAM4AAAA9AA8AEwCDARAA4wAAAD0AEgATAIMBEAD4
AAAAPQAcABMAUYCoCYoDAQDWBjcBEQCWBo0DEQD5ApIDEQDpAZcDNgBPAZsDFgAWAJ8DFgBAAK0D
BgA6CrYDBgCGBTcBFgA5ALoDFgBYAMkDFgCgALoDFgDVAMkDFgA5ANcDFgBYAOoDFgCgAPgDFgA5
ALoDFgBYAAYEFgCgALoDFgDVALoDFgDqABQEFgD/ALoDFgANAboDFgAdASMEFgBIASMEFgBTAfgD
FgA5ALoDFgBYAMkDFgCgALoDFgDVALoDFgDqADIEUCAAAAAAhgCwBgYAAQDYIgAAAACBAIkLRQQB
AOQlAAAAAIEAHQJLBAMAiCkAAAAAgQBVBkUEBQDoKwAAAACGGN0IBgAHAPArAAAAAIMY3QgGAAcA
+CsAAAAAkwiHCFIEBwAkLAAAAACTCOECWAQHACssAAAAAJMI7QJeBAcAMywAAAAAlgj5CmUECAA6
LAAAAACGGN0IBgAIAEIsAAAAAJEY4whqBAgATiwAAAAAkRjjCGoECADwKwAAAACGGN0IBgAIAFos
AAAAAIMAHwBuBAgAZywAAAAAgwBJAHkECQDwKwAAAACGGN0IBgAKAG8sAAAAAIMALgAQAAoAAAAB
AIYFAAACAFsCAAABAOQBAAACAEYDAAABANAKAAACAAUCAAABAD0FAAABAOgIAAABAJQGAAABAFsC
CQDdCAEAEQDdCAYAGQDdCAoAKQDdCBAAMQDdCBAAOQDdCBAAQQDdCBAASQDdCBAAUQDdCBAAWQDd
CBAAYQDdCBAAaQDdCAYAoQDdCAYAuQDdCAYAEQHdCAYAMQHdCBUAQQFjAiUASQGbCCkAcQCoCi0A
UQHiCTMAWQGGBjkAYQEmBUAASQHCCkQAaQHdCAYAeQCeBSkAcQGeAkwAeQFcC1IAaQFDBVcAgQFJ
AmIAkQFIC2sADABPA4cADADyCpMAqQFPA5cAkQFoC6EAFABPA4cAFADyCpMAHAANAswAJAANAuAA
uQHwCekAwQFVC/AALADdCAwBNACnBRkBUQEiCwEAUQGwCiQBSQG7CioBSQHCCjEBSQGaCzcB2QHT
CDoBkQDdCAYA4QHfChAAcQG6BlIAkQD5CVQB6QFzAloBkQHvBmABPABPA4cAPADyCpMARABPA4cA
RADyCpMAkQFMCJABTABPA4cATADyCpMAVAANAssBXAANAuAAZAANAuAA4QEeBeoBSQG7CvABmQCV
CvYBwQFQC/oBbADdCAwBwQF+CxkCdADdCAwBwQHYCkQCSQG1BmICgQDdCBAA2QHfBmwC2QF6BXcC
AQIGCIAC4QHnCgYAfABPA4cAfADyCpMAhAANAuAAjABPA4cAjADyCpMAlAANAswAEQIuBssCnADd
CM8CiQD8BdUCGQJyCtsCpADfAe0CMQImBSkAkQH+BmABrABPA4cArADyCpMAnAAFCwEDnAAwBfYB
tAANAswAsQDdCBAAvABPA4cAvADyCpMAxAANAjgDcQDdCAYAeQDdCAYAgQFxC0gDGQHdCE4DOQHd
CAYAyQCbCVYD2QDXBykACAAEAIUDKQCDALgELgALAJAELgATAJkELgAbALgELgAjAMEELgArAOoE
LgAzAOoELgA7APAELgBDAMEELgBLAPkELgBTAOoELgBbABMFQwBjAF0FSQCDALgEYwB7AF0FZABr
AF0FoQBzAF0FowBzAF0FwwBzAF0F4wBzAF0FAwFzAF0FIwFzAF0FQwFzAF0FHABDAYUCEAMDAAEA
BAADAAAAiwh/BAAAAQOFBAAADwuLBAIABwADAAIACAAFAAEACQAFAAIACgAHAHoAtADCANcABQES
AXYBgwGrAb0B2AHhAQwCPAKXAqQCrQK7AsUC4QLzAgYDGAMqAwSAAAABAAAATyJYewAAAAAAACQB
AAAEAAAAAAAAAAAAAABhA7ABAAAAABAAAAAAAAAAAAAAAGoDtAUAAAAADwAAAAAAAAAAAAAAagMp
CAAAAAAPAAAAAAAAAAAAAABqA8ECAAAAAAQAAAAAAAAAAAAAAGEDtQIAAAAABAAAAAAAAAAAAAAA
YQOPBgAAAAAQAAAAAAAAAAAAAABqA20BAAAAAAQAAAAAAAAAAAAAAHMDRAoAAAAABAAAAAAAAAAA
AAAAfAMMCAAAAAAAAAAAAQAAAEkJAAAFAAIABgACAAcAAgAIAAIACQACAAoAAgA5AF4AUQABAYkA
BwKNADUCkQBcAokAXAMAAAA8PmNfX0Rpc3BsYXlDbGFzczJfMAA8PjlfXzNfMAA8RGVwbG95PmJf
XzNfMAA8TWFpbj5iX18wADw+cF9fMAA8PjlfXzNfMQA8RGVwbG95PmJfXzNfMQA8PnBfXzEATnVs
bGFibGVgMQBJRW51bWVyYWJsZWAxAENhbGxTaXRlYDEAQWN0aW9uYDEATGlzdGAxAEludDMyADw+
b19fMgA8PnBfXzIARnVuY2AyAE5hbWVkTWV0YWRhdGFPYmplY3RDb2xsZWN0aW9uYDIAPD5vX18z
ADw+cF9fMwBGdW5jYDMAPD5vX180ADw+cF9fNABGdW5jYDQAPD5vX181ADw+cF9fNQBGdW5jYDUA
PD5wX182AEFjdGlvbmA2ADw+cF9fNwBTVF81YjZhZGJhMjViYzU0YmUwYmU4NGQ0M2I0YjYwY2Iw
OAA8PnBfXzgAPD45ADw+cF9fOQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAG1zY29ybGli
ADw+YwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBUaHJlYWQARmluZABjdWJlAGRlZmF1bHRJ
bnN0YW5jZQBYbWxhTWVzc2FnZQBtZXNzYWdlAEludm9rZQBWYXJpYWJsZQBVcGRhdGVDYXBhYmxl
AElFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGJpbUZpbGUA
Z2V0X01hY2hpbmVOYW1lAEZpbmRCeU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBDb21iaW5lAEV4cHJlc3Npb25UeXBlAFN5c3RlbS5Db3JlAE1pY3Jvc29mdC5BbmFseXNpc1Nl
cnZpY2VzLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEYXRhYmFzZQBk
YXRhYmFzZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ2FsbFNpdGUARHluYW1pY0F0dHJp
YnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAZ2V0X0hhc1ZhbHVlAHZhbHVlAERlc2Vy
aWFsaXplAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBGaXJlV2Fy
bmluZwB0YWJ1bGFyQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBGb3JFYWNoAFBhdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAZ2V0X01vZGVsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABnZXRfQ29tcGF0aWJpbGl0eUxldmVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABTVF81YjZh
ZGJhMjViYzU0YmUwYmU4NGQ0M2I0YjYwY2IwOC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNl
TWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBKb2luAEdldEZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbgBs
b2NhdGlvbgBGaXJlSW5mb3JtYXRpb24AVW5hcnlPcGVyYXRpb24AQmluYXJ5T3BlcmF0aW9uAFN5
c3RlbS5Db25maWd1cmF0aW9uAEFubm90YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBYbWxhTWVzc2FnZUNv
bGxlY3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9uAE1vZGVsQW5ub3RhdGlvbkNvbGxlY3Rpb24AWG1s
YVJlc3VsdENvbGxlY3Rpb24ARXhjZXB0aW9uAGdldF9EZXNjcmlwdGlvbgBDdWx0dXJlSW5mbwBD
U2hhcnBBcmd1bWVudEluZm8AU2xlZXAATWljcm9zb2Z0LkNTaGFycABTeXN0ZW0uTGlucQBNaWNy
b3NvZnQuQW5hbHlzaXNTZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1No
YXJwLlJ1bnRpbWVCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1Vw
cGVyAEV2ZW50c09iamVjdFdyYXBwZXIAU2VydmVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEZpcmVF
cnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X01lc3NhZ2VzAE1heFJldHJpZXMAU1RfNTg5NDUx
NTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZp
bGVzAGdldF9EYXRhYmFzZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxh
Z3MAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBTeXN0ZW0uTGlucS5F
eHByZXNzaW9ucwBnZXRfQW5ub3RhdGlvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db250YWlu
c0Vycm9ycwBnZXRfRHRzAGdldF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAc3ViamVjdABT
ZWxlY3QAQ29ubmVjdABEaXNjb25uZWN0AFRhcmdldABnZXRfRGVmYXVsdABHZXRWYWx1ZU9yRGVm
YXVsdABYbWxhUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNtdHBDbGllbnQARW52aXJvbm1lbnQAQ29u
dmVydABDYXN0AFRvTGlzdABSZWFkQWxsVGV4dABHZXRJbmRleABnZXRfQXNzZW1ibHkAU2VsZWN0
TWFueQBEZXBsb3kARGlyZWN0b3J5AEVtcHR5AAAXewAwAH0AOgB7ADEAfQA6AHsAMgB9AAAnUwB5
AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAIVMAeQBzAHQAZQBtADoAOgBUAGEA
cwBrAE4AYQBtAGUAAC0kAFAAcgBvAGoAZQBjAHQAOgA6AFMAZQB0AHQAaQBuAGcAcwBQAGEAdABo
AAAbUwBlAHQAdABpAG4AZwBzAC4AagBzAG8AbgAAD2IAaQBtAFAAYQB0AGgAAC90AGEAYgB1AGwA
YQByAEMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAAAsqAC4AYgBpAG0AABNFAFIAUgBP
AFIAIAAtACAAKAABAykAAAd7ADAAfQAAG1UAcABkAGEAdABlAEMAYQBwAGEAYgBsAGUAAEl7ACIA
ZABlAGwAZQB0AGUAIgA6ACAAewAiAG8AYgBqAGUAYwB0ACIAOgAgAHsAIgBkAGEAdABhAGIAYQBz
AGUAIgA6ACAAIgAACSIAfQB9AH0AAFt7ACIAYwByAGUAYQB0AGUATwByAFIAZQBwAGwAYQBjAGUA
IgA6ACAAewAiAG8AYgBqAGUAYwB0ACIAOgAgAHsAIgBkAGEAdABhAGIAYQBzAGUAIgA6ACAAIgAA
ISIAfQAsACAAIgBkAGEAdABhAGIAYQBzAGUAIgA6ACAAAAV9AH0AAAMKAAAJIAAtAD4AIAABBQoA
CgAAF1cAQQBSAE4ASQBOAEcAIAAtACAAKAABH3sAMAB9AAoACgB7ADEAfQAgAC0APgAgAHsAMgB9
AAElYwBvAG0AcABhAHQAaQBiAGkAbABpAHQAeQBMAGUAdgBlAGwAAAttAG8AZABlAGwAABdhAG4A
bgBvAHQAYQB0AGkAbwBuAHMAAAt2AGEAbAB1AGUAADFDAGwAaQBlAG4AdABDAG8AbQBwAGEAdABp
AGIAaQBsAGkAdAB5AEwAZQB2AGUAbAAAFXMAbQB0AHAAUwBlAHIAdgBlAHIAAAlTAGUAbgBkAAAh
ZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBFAG0AYQBpAGwAQQBkAGQAcgBl
AHMAcwBlAHMAAHFTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIA
MgBjAGEANQA2AGQAMQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAo2ZDWT337Tq6a2dAvT9UIAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAlQgH
BBIYHA4SQQMAAA4DIAAOBSAAEoCpBSAAEoCtBiABEoCxHAMgABwHAAQODhwcHAUAAg4ODgQAAQ4O
BjABAR4ADgMKARwIAAESgMERgMUOAAMSgM0RgNESgMESgMEMFRJxARUSfQMSeRwOCwABFRJxARMA
EoDNAwYTAAkAAhKA1RGA2Q4SAAMSgM0RgNESgMEVEmkBEoDVDRUScQEVEnUEEnkcDhwJFRJ1BBJ5
HA4cCiADEwMTABMBEwIIFRJ9AxJ5HA4IIAITAhMAEwEGAAIdDg4OEBABARUSgOUBHgAVEmkBHgAD
CgEOBhUSgOkBDgUgAgEcGAYVEoDlAQ4KIAEBFRKA6QETAAUgABKA7QYAAw4ODg4FAAIODhwCBg4I
IAUCCA4ODggQBwoIEkkODhwSRQ4STQISQQUgABKA9QUgARJFDhUABBKAzRGA0RGA+RKAwRUSaQES
gNUMFRJxARUSfQMSeRwCDBUScQEVEn0DEnkcHBoABRKAzRGA0Q4VEmkBEoDBEoDBFRJpARKA1REV
EnEBFRKAgQUSeRIIHBJFHA0VEoCBBRJ5EggcEkUcDCAEEwQTABMBEwITAwgVEn0DEnkcHAgVEn0D
EnkcAgUgARJNDgUAAQ4dDgMgAAIMEAEBFRJpAR4AEoD9BAoBEmUMFRJhAhJlFRJpARJtGxACAhUS
aQEeARUSaQEeABUSYQIeABUSaQEeAQYKAhJlEm0HFRJhAhJtDhcQAgIVEmkBHgEVEmkBHgAVEmEC
HgAeAQUKAhJtDgkAAg4OFRJpAQ4KIAYBCA4ODggQAgggBQEIDg4OCAQAAQEIEQcHCBwVEVUBCA4V
EVUBCAICDBUScQEVEn0DEnkcCAgVEn0DEnkcCA0VEnEBFRJ1BBJ5HAgcCRUSdQQSeRwIHAUVEVUB
CAMgAAgFIAEBEwAFIAASgQ0FIAASgRELFRKBFQISgRkSgQ0FIAETAA4NFRJxARUSdQQSeQIcHAQg
ABMACRUSdQQSeQIcHAcHAxwSWRJBERUScQEVEoCFBhJ5ElkcHA4ODRUSgIUGEnkSWRwcDg4PIAYB
EwATARMCEwMTBBMFBSAAEoEhByACAQ4SgSEFIAASgSUECgESbQi3elxWGTTgiQiJhF3NgIDMkQgx
vzhWrTZONQiwP19/EdUKOgQFAAAAAgYIBAYSgI0EBhKAkQMGEhADBhIUDQYVEmECEmUVEmkBEm0I
BhUSYQISbQ4DBhIIDgYVEnEBFRJ1BBJ5HA4cDQYVEnEBFRJ9AxJ5HA4SBhUScQEVEoCBBRJ5Eggc
EkUcDQYVEnEBFRJ9AxJ5HBwNBhUScQEVEn0DEnkcAg0GFRJxARUSfQMSeRwIDgYVEnEBFRJ1BBJ5
HAgcDgYVEnEBFRJ1BBJ5AhwcEgYVEnEBFRKAhQYSeRJZHBwODgUgAgEODgYgAgIcEkUFAAASgI0F
AAASgJEGAAEBEoCRBAAAEhADAAABCiABFRJpARJtEmUFIAEOEm0FCAASgI0FCAASgJEECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNTg5
NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAAAUBAAAAAAgBAANUVkEAABkBABRDb3B5cmln
aHQgQCBUVkEgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMhLAAAA
AAAAAAAAAOJLAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUSwAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAmBAAA
AAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAWHtPIgAAAQBYe08iPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEhgMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAVABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
NQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4
ADEAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgANwA4ADMA
LgAzADEANQA3ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQBi
ADYAYQBkAGIAYQAyADUAYgBjADUANABiAGUAMABiAGUAOAA0AGQANAAzAGIANABiADYAMABjAGIA
MAA4AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADUAYgA2AGEAZABiAGEAMgA1AGIAYwA1ADQAYgBlADAAYgBlADgANABkADQA
MwBiADQAYgA2ADAAYwBiADAAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEA
NQA2AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgANwA4ADMALgAzADEANQA3ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgANwA4ADMALgAzADEANQA3ADYAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA9DsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{4e6b99fc-19ee-4f34-bc50-7101e6970b40}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_bfca5fc1f2354faca5c43958c60d9504"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath"
          ReadWriteVariables="User::Execute">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Net.Mail;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private string location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";
                dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                
                Execute(settings);
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({location})", $"{ex}");
			}
		}

		/// <summary>
		/// Execute
		/// </summary>
		/// <param name="settings"></param>
		/// <returns></returns>
		private void Execute(dynamic settings)
        {
             Dts.Variables["User::Execute"].Value = settings["execute"];
		}

        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
            try
            {
                string smtpServer = settings["smtpServer"];
                SmtpClient smtpClient = new SmtpClient(smtpServer);
                smtpClient.Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_bfca5fc1f2354faca5c43958c60d9504</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_bfca5fc1f2354faca5c43958c60d9504</msb:DisplayName>
    <msb:ProjectId>{14E673B2-07FD-4D16-B59A-FA763319C708}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_bfca5fc1f2354faca5c43958c60d9504.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_bfca5fc1f2354faca5c43958c60d9504.dll">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
djQuMC4zMDMxOQAAAAAFAGwAAADABQAAI34AACwGAAD4BwAAI1N0cmluZ3MAAAAAJA4AAOABAAAj
VVMABBAAABAAAAAjR1VJRAAAABQQAAD8AgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAW
AAABAAAAMQAAAAcAAAALAAAACwAAAAQAAAA6AAAAFAAAAAIAAAACAAAAAwAAAAQAAAAIAAAAAQAA
AAcAAAABAAAAAwAAAAEAAAAAALQEAQAAAAAABgAoA0wGBgC3A0wGBgB0AjkGDwDABgAABgChAlYF
BgALA1YFBgDsAlYFBgCeA1YFBgBIA1YFBgBhA1YFBgC4AlYFBgDTAgMECgB8A0oECgDSAUoEBgB/
B+UEBgBoBeUEDgArAkwGEgCwB5sEBgA8AkwGDgAkAEwGBgBSAOUEDgAiAkwGBgCGAOUEBgBLAOUE
BgCNAOUEBgBXAjkGBgDhBWwGBgByBSEFEgANAoUEEgCIAoUEEgDuAQwFBgC7B+UEBgAfBOUECgBz
BEoEFgACB3EBFgAvAXEBGgANBjYFBgAmBJ8ABgBcAZ8ABgCZAeUEBgA4AeUEHgB+Ba8FHgAMB68F
HgDWBa8FDgDOBUwGHgAkB68FBgAWAPUACgD5BUoEBgDoB1YFAAAAAJYAAAAAAAEAAQABABAA+ATI
ADkAAQABAAAAEABzBs8GPQACAAUAAAEQADYHzwZ9AAQACQCDARAACAAAAD0ABQAMAIMBEAAvAAAA
PQAGAAwAgwEQAD0AAAA9AAcADAABAAMF0wARAOwEsQERAMIBtQERABABuQEWAAEAvQEWAAEAzAEW
AAEAzAEWAA8A2wEWADYAzAEWAEQAzAEWAH8A6QFQIAAAAACGAP4EBgABAMwhAAAAAIEA1QMWAQEA
SCIAAAAAgQCrBPsBAgCoJAAAAACGGCwGBgAEALAkAAAAAIMYLAYGAAQAuCQAAAAAkwjdBQECBADk
JAAAAACTCKoBBgIEAOskAAAAAJMItgELAgQA8yQAAAAAlgiVBxECBQD6JAAAAACGGCwGBgAFAAIl
AAAAAJEYMgYWAgUAAAABAD8HAAABAIYHAAACACABAAABAPEDCQAsBgEAEQAsBgYAGQAsBgoAKQAs
BhAAMQAsBhAAOQAsBhAAQQAsBhAASQAsBhAAUQAsBhAAWQAsBhAAYQAsBhAAaQAsBgYAiQAsBgYA
mQAsBgYA0QAsBgYA8QAsBhUAAQFhASEACQHxBSUAcQBeBykAEQH+Bi8AGQHcBDUAIQHdAzwACQF4
B0AAKQEsBgYAeQAdBCUAMQGRAUgAOQHPB04AKQH3A1MAQQFKAV4AUQEGAmcAYQGiBXEADAAGApwA
DACOB6gAFAAoAbYAEQGhBwEAEQFmB8AACQFxB8YACQF4B80ACQHxB9MAgQEiBtYAYQHbB98AHAAG
ApwAHACOB6gAJAAoAQsBIQHnAxYBYQHHByMBLAAGApwALACOB6gANAAoAUgBkQAsBhAAPAAGApwA
PACOB6gARAAoAW8BcQAsBgYAeQAsBgYAQQHkB38B2QAsBoUB+QAsBgYAJABrAPYCKQCDAFECLgAL
ACkCLgATADICLgAbAFECLgAjAFoCLgArAIMCLgAzAIMCLgA7AIkCLgBDAFoCLgBLAJICLgBTAIMC
LgBbAKwCQwBjAPYCSQCDAFECYwB7APYCgQBzAPYCowBzAPYCwwBzAPYC4wBzAPYCGwAbAQMAAQAE
AAMAAADhBRoCAADKAR8CAACZByQCAgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcAjgCsAPMAAQEyAT8B
UQFiAQSAAAABAAAAUCLkSQAAAAAAAFsAAAAEAAAAAAAAAAAAAACNAewAAAAAABAAAAAAAAAAAAAA
AJYBKwQAAAAABAAAAAAAAAAAAAAAjQGeAQAAAAAEAAAAAAAAAAAAAACNAeUEAAAAABAAAAAAAAAA
AAAAAJYBqQAAAAAABAAAAAAAAAAAAAAAnwFIBwAAAAAEAAAAAAAAAAAAAACoAZEFAAAAAAAAAAAB
AAAAfQYAAAUAAgAGAAIABwACADkAWgAAAAA8PnBfXzAAPD5vX18xADw+cF9fMQBJRW51bWVyYWJs
ZWAxAENhbGxTaXRlYDEAPD5vX18yADw+cF9fMgA8Pm9fXzMAPD5wX18zAEZ1bmNgMwBBY3Rpb25g
MwBTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5NThjNjBkOTUwNAA8PnBfXzQARnVuY2A0AEFjdGlv
bmA2ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAU1Rf
NTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNlAG1lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAZ2V0X01hY2hpbmVOYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENhbGxTaXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVlAHNl
dF9WYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3Ry
aW5nAFBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABTVF9iZmNhNWZjMWYyMzU0ZmFjYTVjNDM5
NThjNjBkOTUwNC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AbG9j
YXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldl
Yi5TY3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVy
ZUluZm8AQ1NoYXJwQXJndW1lbnRJbmZvAE1pY3Jvc29mdC5DU2hhcnAASW52b2tlTWVtYmVyAE1p
Y3Jvc29mdC5DU2hhcnAuUnVudGltZUJpbmRlcgBDYWxsU2l0ZUJpbmRlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAFRvVXBwZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIy
Y2E1NmQxYzgxM2IuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBDU2hhcnBBcmd1bWVudEluZm9GbGFncwBDU2hhcnBCaW5kZXJGbGFncwBTZXR0aW5ncwBz
ZXR0aW5ncwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAZ2V0X0R0cwBnZXRfRXZlbnRzAENvbmNhdABG
b3JtYXQAT2JqZWN0AHN1YmplY3QAVGFyZ2V0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFNt
dHBDbGllbnQARW52aXJvbm1lbnQAQ29udmVydABSZWFkQWxsVGV4dABHZXRJbmRleABnZXRfQXNz
ZW1ibHkARW1wdHkAAAAXewAwAH0AOgB7ADEAfQA6AHsAMgB9AAAnUwB5AHMAdABlAG0AOgA6AFAA
YQBjAGsAYQBnAGUATgBhAG0AZQAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC0k
AFAAcgBvAGoAZQBjAHQAOgA6AFMAZQB0AHQAaQBuAGcAcwBQAGEAdABoAAAbUwBlAHQAdABpAG4A
ZwBzAC4AagBzAG8AbgAAD0UAeABlAGMAdQB0AGUAABNFAFIAUgBPAFIAIAAtACAAKAABAykAAAd7
ADAAfQAAG1UAcwBlAHIAOgA6AEUAeABlAGMAdQB0AGUAAA9lAHgAZQBjAHUAdABlAAAVcwBtAHQA
cABTAGUAcgB2AGUAcgAACVMAZQBuAGQAACFmAHIAbwBtAEUAbQBhAGkAbABBAGQAZAByAGUAcwBz
AAAhdABvAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAGUAcwAAcVMAVABfADUAOAA5ADQANQAxADUA
MAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAxAGMAOAAxADMAYgAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAABCV6ATl4vlCpUtNK+N1rcAABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEXUFBwIcEkEDAAAOAyAADgUgABKAiQUgABKAjQYgARKAkRwD
IAAcBwAEDg4cHBwFAAIODg4EAAEODgYwAQEeAA4DCgEcCAABEoChEYClCQACEoCpEYCtDhwABRKA
tRGAuQ4VEoC9ARKAoRKAoRUSgL0BEoCpDRUSUQEVElUDElkSCBwLAAEVElEBEwASgLUDBhMACRUS
VQMSWRIIHAkgAwETABMBEwIFIAASgMEGAAMODg4OBQACDg4cAgYOCCAFAggODg4IEwADEoC1EYC5
EoChFRKAvQESgKkNFRJRARUSXQQSWRwOHAkVEl0EElkcDhwKIAMTAxMAEwETAgQgAQEcBwcDHBJJ
EkEOAAMSgLURgLkSgKESgKEMFRJRARUSYQMSWRwOCBUSYQMSWRwOCCACEwITABMBEBUSUQEVEmUG
ElkSSRwcDg4MFRJlBhJZEkkcHA4ODyAGARMAEwETAhMDEwQTBQUgABKAxQcgAgEOEoDFCLd6XFYZ
NOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6AwYSbQMGEnEDBhIQDgYVElEBFRJVAxJZEggc
DgYVElEBFRJdBBJZHA4cDQYVElEBFRJhAxJZHA4RBhUSUQEVEmUGElkSSRwcDg4FIAIBDg4EAAAS
bQQAABJxBQABARJxBAAAEhADAAABBAgAEm0ECAAScQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJj
YTU2ZDFjODEzYgAABQEAAAAACAEAA1RWQQAAGQEAFENvcHlyaWdodCBAIFRWQSAyMDI0AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAAOQAAAAAAAAAAAAAaOQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAADDkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA5ElQIgAAAQDkSVAiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAVABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUA
NgBkADEAYwA4ADEAMwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgANwA4ADQALgAxADgAOQAxADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYgBmAGMAYQA1AGYAYwAxAGYAMgAzADUANABmAGEAYwBhADUAYwA0ADMAOQA1ADgAYwA2
ADAAZAA5ADUAMAA0AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfAGIAZgBjAGEANQBmAGMAMQBmADIAMwA1ADQAZgBhAGMAYQA1
AGMANAAzADkANQA4AGMANgAwAGQAOQA1ADAANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABl
ADIAMgBjAGEANQA2AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgANwA4ADQALgAxADgAOQAxADYAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgANwA4ADQALgAxADgAOQAxADYAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAALDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProcessCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{B6E07C53-B81E-4748-9710-C370A55DE0A4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProcessCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_589451501c0a4de7b0e22ca56d1c813b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_589451501c0a4de7b0e22ca56d1c813b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Microsoft.AnalysisServices;
using Microsoft.AnalysisServices.Tabular;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Globalization;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private static string location;

        /// <summary>
        /// Main
        /// </summary>
        public async void Main()
		{
            try
            {
                location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string tabularConnectionString = settings["tabularConnectionString"];

                var semaphore = new SemaphoreSlim(settings["threads"]);
                var tasks = GetDatabaseNames(tabularConnectionString).Select(async databaseName => { 
                    await semaphore.WaitAsync();
                    try
                    {
                        Process(tabularConnectionString, databaseName);
					}
                    finally 
                    { 
                        semaphore.Release(); 
                    }
                });

                await System.Threading.Tasks.Task.WhenAll(tasks);

                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
                Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
                SendMail($"ERROR - ({location})", $"{ex}");
            }
		}

        /// <summary>
        /// Process
        /// </summary>
        /// <param name="tabularConnectionString"></param>
        /// <param name="databaseName"></param>
        /// <returns></returns>
        private void Process(string tabularConnectionString, string databaseName)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
                    server.Connect(tabularConnectionString);
                    var database = server.Databases.FindByName(databaseName);
                    var objects = 
                        database.Model.Tables.Where(t => t.Partitions.Count == 1).Select(t => $"{{\"database\": \"{databaseName}\", \"table\": \"{t.Name}\"}}").Concat(
                        database.Model.Tables.Where(t => t.Partitions.Count > 1).SelectMany(t => t.Partitions.Where(p => p.State != ObjectState.Ready || p.RefreshedTime < DateTime.ParseExact(p.Name, "yyyy-MM", CultureInfo.InvariantCulture).AddMonths(1).AddDays(7)).Select(p => $"{{\"database\": \"{databaseName}\", \"table\": \"{t.Name}\", \"partition\": \"{p.Name}\"}}")));
					var command = $"{{\"refresh\": {{\"type\": \"full\", \"objects\": [{string.Join(",", objects)}]}}}}"; 
                    var result = server.Execute(command);

                    
					if (result.ContainsErrors)
						throw new Exception($"{command}\n{databaseName} -> {tabularConnectionString}\n\n{string.Join("\n", result.Cast<XmlaResult>().SelectMany(r => r.Messages.Cast<XmlaMessage>()).Select(m => m.Description))}");

					bool fireAgain = true;
                    Dts.Events.FireInformation(0, location, $"{command}\n{databaseName} -> {tabularConnectionString}", string.Empty, 0, ref fireAgain);
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, $"WARNING - ({location})", $"{ex}\n\n{databaseName} -> {tabularConnectionString}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }

        private List<string> GetDatabaseNames(string tabularConnectionString)
        {
            Server server = new Server();
            try
            {
                server.Connect(tabularConnectionString);
                return server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_")).Select(d => d.Name).ToList();
            }
            finally
            {
                server.Disconnect();
            }
        }
        
        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
            try
            {
                string smtpServer = settings["smtpServer"];
                SmtpClient smtpClient = new SmtpClient(smtpServer);
                smtpClient.Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_589451501c0a4de7b0e22ca56d1c813b</msb:DisplayName>
    <msb:ProjectId>{C41E34E7-1F6A-49D8-8DBC-60990B61F492}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_589451501c0a4de7b0e22ca56d1c813b.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_589451501c0a4de7b0e22ca56d1c813b.dll">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
K955AnsnAAAEDAJ8JwAABP4VJAAAAQIVJQp9IwAABBICKHMAAAoHew4AAAQHexAAAAQCeyYAAAQo
AgAABt4RBhYvDAd7DwAABG96AAAKJtzeFw0CH/59IwAABAJ8JAAABAkoewAACt4TAh/+fSMAAAQC
fCQAAAQofAAACioAAAABHAAAAgBuABmHABEAAAAAAAAOAIyaABcXAAABNgJ8JAAABAMofQAACioA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQLAAAjfgAA8AsAAMwNAAAjU3Ry
aW5ncwAAAAC8GQAAIAMAACNVUwDcHAAAEAAAACNHVUlEAAAA7BwAAPAGAAAjQmxvYgAAAAAAAAAC
AAABVx+iCwkLAAAA+gEzABYAAAEAAABQAAAADAAAACcAAAAgAAAAEwAAAAIAAAB9AAAAAQAAABsA
AAAJAAAAAgAAAAMAAAAEAAAABAAAABMAAAABAAAACQAAAAEAAAAIAAAAFAAAAAAA1QcBAAAAAAAG
APgFywoGAIcGywoGABEFuAoPAFoLAAAGAD4FpggGANsFpggGALwFpggGAG4GpggGABgGpggGADEG
pggGAHAFpggGAIsF2gYKAEwGWQcKAE4EWQcGANADBggGAFUFywoOAIIEgwkOAHMKgwkGANIAVwIS
AAUJ6woGADQBBggOAOMCgwkGACcJBggGAOsAVwIGANoMBggWAEQNtAcGANkEywoOABoJgwkSABYN
6woSAMgC6woGAGoDBggGAA0IyQYGAH0HLwwGAMsDBggGAJsDywoGAFwKywoGANoJywoGAKQFuAoa
AOAAywoGAJkBBggaANAEywoGAHIBBggGANkBBggGAMMJywoGAPQEuAoGADAKBgsGAEEJcQgWAKQE
ngcWACUFngcWAGoEXAgSAHMK5wMOAN4IgwkOAK4HgwkOAM4IgwkaAPMCdwkGABoHBggGAPICXAwK
AIwHWQcKAEgKWQcGAIoCyQYeAHoKhggiAL8LcwMiAOkCcwMGACEH/QEGACID/QEGAP4CBggmACUK
/gkaAB0KywomAAAM/gkmAE0J/gkmAOgL/gkGALANpggOAPEIgwkOADsBgwkOALkEgwkOAM0MgwkG
ALMJBggSALgI6woSAFsN6woGAE8NBggAAAAA9AEAAAAAAQABAAEAEAAzCCYCOQABAAEAAAAQAA0L
gQtlAAMABgAAARAAEgyBC8kABQAKAAMhEABTAgAAZQAGAA0AAwEQAAEAAABlAA4AFgADARAALwAA
AGUAEQAYAAMBEAB4AAAAZQAUABsAgwEQACYBAABlABYAHQCDARAAuQEAAGUAGgAdAAMBEAAbAQAA
iQAfAB0AAwEQAHwCAACJACMAHwBRgHYLMwQRAEMIcwERABsINgQRACkEOwQRALgCQAQ2APABRAQW
ABYASAQWAAIBSAQWAMABUQQWAHkBWgQWAKABaAQWAEQAcQQWAI0AegQGACUMgwQGAAcEhwQGAAAH
cwEGAEADcwEGAK8AjAQGAFYBlQQGAKENogQGAPIApgQWAHEAqgQWAMQAvAQWAC0BqgQWAGsBzQQW
AHEAqgQWAMQAvAQWAC0BqgQWAGsBqgQWAJIB4gQGAMUEMwQGAPEJ9wQGACUMgwQBAMsA/AQGAMUE
MwQGAPEJAQUGACUMBgUGAEADcwEBAMsA/ARQIAAAAACGADkIBgABAIggAAAAAIEAkQwKBQEALCMA
AAAAgQDJCxAFAwC8IwAAAACBAMQHCgUEABgmAAAAAIYYmQoGAAYAICYAAAAAgxiZCgYABgAoJgAA
AACTCCwKGQUGAFQmAAAAAJMIEQQaAwYAWyYAAAAAkwgdBB8FBgBjJgAAAACWCAoNJgUHAGomAAAA
AIYYmQoGAAcAciYAAAAAkRifCisFBwB+JgAAAACRGJ8KKwUHACAmAAAAAIYYmQoGAAcAiiYAAAAA
gwAfAC8FBwCaJgAAAACDAAsBLwUIAKwmAAAAAIMAyQE1BQkA/iYAAAAAgwCCATsFCgALJwAAAACD
AKkBRgULABMnAAAAAIMATQBMBQwAJScAAAAAgwCWAFIFDQAgJgAAAACGGJkKBgAOADAnAAAAAIMA
ZgBYBQ4AICYAAAAAhhiZCgYADwB7JwAAAACDALYAXwUPALQnAAAAAIMAXQFlBRAAICYAAAAAhhiZ
CgYAEQAYKAAAAACDAOIBbwURAHgoAAAAAOEBjg0GABIA3CsAAAAA4QGuAxsAEgDsKwAAAADhAY4N
BgATANwsAAAAAOEBrgMbABMAAAABAAAHAAACAEADAAABAAAHAAABAOEMAAACANQCAAABALcGAAAB
AKENAAABAKENAAABAHUJAAABALYKAAABABkIAAABALYCAAABALYCAAABAEADAAABAKENAAABAKEN
AAABAHUJAAABAL4DAAABAL4DCwCNAAwAjQAJAJkKAQARAJkKBgAZAJkKCgApAJkKEAAxAJkKEAA5
AJkKEABBAJkKEABJAJkKEABRAJkKEABZAJkKEABhAJkKEABpAJkKBgCBAJkKFQDZAJkKBgAZAY4N
BgAZAa4DGwAxAZkKBgBpAZkKBgCJAZkKIgBhAZMELgBhAXQNNACRAJkKBgCZAfAMEACRANoLaACh
AU0DbgCJAIIHdACpAbALegAMAJkKiAC5AdUDjgAUAJkKiAC5AekMsgAcAJkKiAC5AbkN3AC5AbQM
+ADBAT4IEgHBAbQMHAGZAaUGIwGhAH4MKQG5AYINLQEkAJkKiAAsAJkKiADBAbQMYQG5AJkKEABx
AJkMZwHRAaEMbQHBAcQNcwHZAUwIdgHBAbsMgQHZAfQGiQHhAWAJkgGZAfgMBgA0AJkKiAA8AJkK
iAC5AYcNvAHpAZkKBgDRAbsL1AHxAf0H2gH5Aa0G4QHJABgH5QEBApMD6QEJApcN7wHpAb0G9AF5
ABAD/wEZAnoNBwJEAJMEJAJEAAMNMQIxApMENQIZAqMNPwJMAJMEJAJMAAMNMQJUANwCbgJcANwC
hALRAJkKEAAZAqYJjQJkAJMEJAJkAAMNMQJsANwCyQLBAbsM2QLZAY8K3wJxAJkKBgDJAJkKBgB5
AKwN6AJxAZkK7gKRAZkKBgCxAG8M9gJ0AGoNBgPhAJoEDwPhAFgDFQNhAicD5QF5ATkEGgP5AMIM
IAP5ABsMKgP5AKwMMAP5ACcINgPpAGkLPgPxADEJ5QF5AicD5QHBASYHSQMpAZMEUwMpAXQNNAAp
ATEHXgN8AJkKiACEAJkKiACBAjADlAPBAUAK5QEZAqYKPwKMAJMEJAKMAAMNMQKUANwCbgKcAJkK
iAAJAc0HywMJAWgK2AMhAagCKQFhAZEC3gMhATANBgDRASENAQBhASQJ8QNhAToNBgBhAa4DGwAB
AXICXgMpAZEC3gMBAYsEBgMpASQJ8QMpAToNBgApAa4DGwAIAAQALgQgAGsAUwYpAJsArgUuAAsA
hgUuABMAjwUuABsArgUuACMAtwUuACsA4AUuADMA4AUuADsA5gUuAEMAtwUuAEsA7wUuAFMA4AUu
AFsACQZDAGMA6QZJAJsArgVjAJMA6QahAHMA6QajAHMA6QbDAHMA6QbjAHMA6QYDAXMA6QYjAXMA
6QZDAXMA6QZjAXMA6QbgAmsAkgbAA4sA6QYABIsA6QYpAEEAlwHMAQoDTgNkA4QD9wMDAAEABAAD
AAAAMAp1BQAARgR7BQAADg2BBQIABwADAAIACAAFAAEACQAFAAIACgAHAAsAOgAfAAsAPAAhAAwA
PgAfAAwAQAAhAIAAqgDQAD8BUwGmAa4BFAJRAmICeQKmAroC/AJpA3YDmAOsA7sDBIAAAAEAAABQ
IkRhAAAAAAAAJgIAAAQAAAAAAAAAAAAAAAoESgIAAAAAEAAAAAAAAAAAAAAAEwQ6BwAAAAAPAAAA
AAAAAAAAAAATBIMJAAAAAA8AAAAAAAAAAAAAABME5wMAAAAABAAAAAAAAAAAAAAACgQGCAAAAAAE
AAAAAAAAAAAAAAAKBNsDAAAAAAQAAAAAAAAAAAAAABwERgwAAAAAEAAAAAAAAAAAAAAAEwQHAgAA
AAAEAAAAAAAAAAAAAAAlBGYJAAAAAAAAAAABAAAAFwsAAAUAAgAGAAIABwACAAgAAgAJAAIACgAC
AAsAAgAMAAYAKwA8ADsApQA/AMoAQwDKAEUADgFPADoBQwBMAT8AWwFPAKEBOwChAT8AtgFtAA4B
fQD7AU8ARAPJAFkDOwBxAz8AfgM/AMQD5QDpA/MAAgQAAAAAADw+Y19fRGlzcGxheUNsYXNzMl8w
ADw+OV9fM18wADxQcm9jZXNzPmJfXzNfMAA8PmNfX0Rpc3BsYXlDbGFzczNfMAA8PjlfXzRfMAA8
R2V0RGF0YWJhc2VOYW1lcz5iX180XzAAPE1haW4+Yl9fMAA8PnBfXzAAPD5jX19EaXNwbGF5Q2xh
c3MzXzEAPD45X180XzEAPEdldERhdGFiYXNlTmFtZXM+Yl9fNF8xADw+OV9fMQA8UHJvY2Vzcz5i
X18xADw+cF9fMQA8PnVfXzEASUVudW1lcmFibGVgMQBDYWxsU2l0ZWAxAExpc3RgMQBDUyQ8Pjhf
X2xvY2FsczEAPD45X18zXzIAPFByb2Nlc3M+Yl9fM18yADxNYWluPmRfXzIAPD5vX18yADw+cF9f
MgBGdW5jYDIATWV0YWRhdGFPYmplY3RDb2xsZWN0aW9uYDIAPD45X18zADxQcm9jZXNzPmJfXzMA
PD5wX18zAEZ1bmNgMwA8PjlfXzNfNAA8UHJvY2Vzcz5iX18zXzQAPD5wX180AEZ1bmNgNAA8Pjlf
XzNfNQA8UHJvY2Vzcz5iX18zXzUAPD5vX181ADw+OV9fM182ADxQcm9jZXNzPmJfXzNfNgBBY3Rp
b25gNgA8UHJvY2Vzcz5iX183ADw+OQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiAG1zY29y
bGliADw+YwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBXYWl0QXN5bmMAPDxNYWluPmJfXzA+
ZABUaHJlYWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAZGVmYXVsdElu
c3RhbmNlAFhtbGFNZXNzYWdlAG1lc3NhZ2UASW52b2tlAFRhYmxlAFZhcmlhYmxlAElFbnVtZXJh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAZ2V0X05hbWUAZ2V0
X01hY2hpbmVOYW1lAGRhdGFiYXNlTmFtZQBGaW5kQnlOYW1lAGdldF9SZWZyZXNoZWRUaW1lAERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBJQXN5bmNTdGF0
ZU1hY2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBWYWx1ZVR5cGUAV2hlcmUAU3lz
dGVtLkNvcmUATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMuQ29yZQBzZW1hcGhvcmUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAGdldF9JbnZhcmlhbnRDdWx0dXJlAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEYXRhYmFz
ZQBSZWxlYXNlAENyZWF0ZQBnZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAT2JqZWN0U3Rh
dGUAPD4xX19zdGF0ZQBDYWxsU2l0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERl
YnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAdmFsdWUARGVzZXJp
YWxpemUAU3lzdGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJu
aW5nAHRhYnVsYXJDb25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAFBhdGgAU3RhcnRzV2l0aABnZXRf
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBnZXRfTW9kZWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABXaGVuQWxsAFNUXzU4OTQ1MTUw
MWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNiLmRsbABnZXRfSXRlbQBTeXN0ZW0AU2VtYXBob3JlU2xp
bQByZXNvdXJjZU1hbgBvcF9MZXNzVGhhbgBTY3JpcHRNYWluAEpvaW4AbG9jYXRpb24ARmlyZUlu
Zm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AWG1sYU1lc3NhZ2VD
b2xsZWN0aW9uAFRhYmxlQ29sbGVjdGlvbgBEYXRhYmFzZUNvbGxlY3Rpb24AUGFydGl0aW9uQ29s
bGVjdGlvbgBYbWxhUmVzdWx0Q29sbGVjdGlvbgBQYXJ0aXRpb24AU2V0RXhjZXB0aW9uAGdldF9E
ZXNjcmlwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBBcmd1bWVudEluZm8AU2xlZXAATWljcm9zb2Z0
LkNTaGFycABTeXN0ZW0uTGlucQBNaWNyb3NvZnQuQW5hbHlzaXNTZXJ2aWNlcy5UYWJ1bGFyAElu
dm9rZU1lbWJlcgBJRm9ybWF0UHJvdmlkZXIAQXN5bmNWb2lkTWV0aG9kQnVpbGRlcgBBc3luY1Rh
c2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVCaW5k
ZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2ZW50c09iamVj
dFdyYXBwZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRlcgBTZXJ2ZXIASmF2YVNjcmlwdFNlcmlhbGl6
ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBJbnZva2VDb25zdHJ1Y3RvcgBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNyb3NvZnQuQW5hbHlzaXNT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4
MTNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfTWVz
c2FnZXMATWF4UmV0cmllcwBTVF81ODk0NTE1MDFjMGE0ZGU3YjBlMjJjYTU2ZDFjODEzYi5Qcm9w
ZXJ0aWVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxlcwBHZXREYXRhYmFzZU5hbWVzAGdldF9EYXRh
YmFzZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0dGluZ3MA
QWRkTW9udGhzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAFN5c3RlbS5XZWIuRXh0
ZW5zaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcnRpdGlvbnMAZ2V0X0NvbnRhaW5zRXJy
b3JzAFByb2Nlc3MAZ2V0X0R0cwBnZXRfRXZlbnRzAEFkZERheXMAQ29uY2F0AEZvcm1hdABQYXJz
ZUV4YWN0AE5hbWVkTWV0YWRhdGFPYmplY3QAc3ViamVjdABTZWxlY3QAQ29ubmVjdABEaXNjb25u
ZWN0AFRhcmdldABnZXRfRGVmYXVsdABYbWxhUmVzdWx0AHNldF9UYXNrUmVzdWx0AEdldFJlc3Vs
dABTZXRSZXN1bHQAU210cENsaWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVudABnZXRfQ291
bnQAU3RhcnQAQ29udmVydABDYXN0AFRvTGlzdABNb3ZlTmV4dABSZWFkQWxsVGV4dABHZXRJbmRl
eABnZXRfQXNzZW1ibHkAU2VsZWN0TWFueQBFbXB0eQAAAABTewAiAHIAZQBmAHIAZQBzAGgAIgA6
ACAAewAiAHQAeQBwAGUAIgA6ACAAIgBmAHUAbABsACIALAAgACIAbwBiAGoAZQBjAHQAcwAiADoA
IABbAAADLAAAB10AfQB9AAADCgAACSAALQA+ACAAAQUKAAoAABdXAEEAUgBOAEkATgBHACAALQAg
ACgAAQMpAAAfewAwAH0ACgAKAHsAMQB9ACAALQA+ACAAewAyAH0AAS0kAFAAcgBvAGoAZQBjAHQA
OgA6AFMAZQB0AHQAaQBuAGcAcwBQAGEAdABoAAAbUwBlAHQAdABpAG4AZwBzAC4AagBzAG8AbgAA
FXMAbQB0AHAAUwBlAHIAdgBlAHIAAAlTAGUAbgBkAAAhZgByAG8AbQBFAG0AYQBpAGwAQQBkAGQA
cgBlAHMAcwAAIXQAbwBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwBlAHMAABNFAFIAUgBPAFIAIAAt
ACAAKAABB3sAMAB9AABxUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAA
ZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAAPeQB5AHkAeQAtAE0ATQABG1YAZQByAGkAZgBpAGMAYQB0AGkAbwBuAF8A
AB17ACIAZABhAHQAYQBiAGEAcwBlACIAOgAgACIAABsiACwAIAAiAHQAYQBiAGwAZQAiADoAIAAi
AAAFIgB9AAAjIgAsACAAIgBwAGEAcgB0AGkAdABpAG8AbgAiADoAIAAiAAAXewAwAH0AOgB7ADEA
fQA6AHsAMgB9AAAnUwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAIVMAeQBz
AHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC90AGEAYgB1AGwAYQByAEMAbwBuAG4AZQBjAHQA
aQBvAG4AUwB0AHIAaQBuAGcAAA90AGgAcgBlAGEAZABzAAAAbkZX4CPHpUulLV/ye6YM2AAEIAEB
CAMgAAEFIAEBEREEIAEBDgUgAQESPQYgAQESgI0GIAEBEYDBBAcBESwFAAARgLEHMAEBARAeAAQK
AREsJgcLEhwIEkkSRRUSTQEODhJRAhUSVQISWQ4VElUCElkVEk0BDhJdBSAAEoDRBSABEkUOBSAA
EoDVBSAAEoDZBxUSVQISWQIFIAIBHBgWEAECFRJNAR4AFRJNAR4AFRJVAh4AAgQKARJZBxUSVQIS
WQ4XEAICFRJNAR4BFRJNAR4AFRJVAh4AHgEFCgISWQ4LFRJVAhJZFRJNAQ4bEAICFRJNAR4BFRJN
AR4AFRJVAh4AFRJNAR4BFRABAhUSTQEeABUSTQEeABUSTQEeAAMKAQ4JAAIODhUSTQEOBgADDg4O
DgUgARJRDgMgAAIMEAEBFRJNAR4AEoDlBAoBEnUMFRJVAhJ1FRJNARJ5BgoCEnUSeQcVElUCEnkO
BQoCEnkOBQABDh0OBSAAEoDpBSAAEoDtAgYOCiAGAQgODg4IEAIHAAQODhwcHAggBQEIDg4OCAQA
AQEICQcCEkkVEmEBDgQKARJFBxUSVQISRQIHFRJVAhJFDgUKAhJFDg8QAQEVEmEBHgAVEk0BHgAH
BwMcEmkSXQUgABKA+QYgARKA/RwDIAAcAyAADgUAAg4ODgQAAQ4OBjABAR4ADgMKARwHAAESPRGB
CQwAAxKBERGBFRI9Ej0PFRKAnQEVEoCpAxKApRwODAABFRKAnQETABKBEQMGEwAJAAISgRkRgR0O
EQADEoEREYEVEj0VEk0BEoEZEBUSgJ0BFRKAoQQSgKUcDhwLFRKAoQQSgKUcDhwKIAMTAxMAEwET
AgoVEoCpAxKApRwOCCACEwITABMBGAAFEoEREYEVDhUSTQESPRI9FRJNARKBGRMVEoCdARUSgK0G
EoClEmkcHA4ODhUSgK0GEoClEmkcHA4ODyAGARMAEwETAhMDEwQTBQUAAg4OHAggBQIIDg4OCAUg
ABKBIQcgAgEOEoEhBSAAEoElCRUSgSkCEnESWQMgAAgEBwERfQUgABGBLQQgABF9BQAAEoC9CQAD
EX0ODhKBNQUgARF9CAUgARF9DQcAAgIRfRF9BSAAEoE5BAoBEnkEIAECDgQHAREwBQAAEYCVBAoB
ETAFIAASgIUEBwESIAcVElUCEnECBAoBEnEHFRJVAhJxDgUKAhJxDg8HBwgSCBIYHBGAkRJdEl0D
AAAOExUSgJ0BFRKAoQQSgKUSPRwSgIEOFRKAoQQSgKUSPRwSgIEIFRJVAg4SgIUGCgIOEoCFDAAB
EoCFFRJNARKAhQUgABGAkQowAgIBEB4AEB4BBwoCEYCRESwFIAEBEl0KBwQIEhgRgJESXQcKAhGA
kREwCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41CLA/X38R1Qo6BAUAAAACBggEBhKAuQQGEoC9
AwYSEAMGEhQIBhUSVQISWQIIBhUSVQIScQINBhUSVQISdRUSTQESeQgGFRJVAhJ5DggGFRJVAhJF
AggGFRJVAhJFDgMGEggEBhKAgQgGFRJVAhJZDgwGFRJVAhJZFRJNAQ4DBhJZAwYSHBEGFRKAnQEV
EoChBBKApRwOHBAGFRKAnQEVEoCpAxKApRwOFAYVEoCdARUSgKEEEoClEj0cEoCBFAYVEoCdARUS
gK0GEoClEmkcHA4OBAYRgLEEBhGAkQQGEYCVAwYSGAUgAgEODgggARUSYQEODgUAABKAuQYAAQES
gL0EAAASEAMAAAEFIAECElkFIAECEnEKIAEVEk0BEnkSdQUgAQ4SeQUgAQISRQUgAQ4SRQYgARKA
hQ4FIAEOElkJIAEVEk0BDhJZBSABDhJxBQgAEoC5BQgAEoC9BAgAEhAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdi
MGUyMmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC43PgEAOVNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZkMWM4MTNi
LlNjcmlwdE1haW4rPE1haW4+ZF9fMgAAVgEAUVNUXzU4OTQ1MTUwMWMwYTRkZTdiMGUyMmNhNTZk
MWM4MTNiLlNjcmlwdE1haW4rPD5jX19EaXNwbGF5Q2xhc3MyXzArPDxNYWluPmJfXzA+ZAAABAEA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAACoUQAAAAAAAAAAAADCUQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
tFEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAmBAAAAAAA
AAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
RGFQIgAAAQBEYVAiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEhgMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
VABWAEEAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANQA4
ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEA
MwBiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgANwA4ADQALgAy
ADQAOQAwADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQA4ADkA
NAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIAYwBhADUANgBkADEAYwA4ADEAMwBi
AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABUAFYAQQAgADIAMAAyADQAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1
ADYAZAAxAGMAOAAxADMAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2
AGQAMQBjADgAMQAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADgANwA4ADQALgAyADQAOQAwADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADgANwA4ADQALgAyADQAOQAwADAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA1DEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RemoveCubes"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{7466608a-32ca-4111-bfda-0dc1bfdcb510}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="RemoveCubes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,$Project::SettingsPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TVA")]
[assembly: AssemblyProduct("ST_589451501c0a4de7b0e22ca56d1c813b")]
[assembly: AssemblyCopyright("Copyright @ TVA 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18CF0574-16F3-4CF0-BEE5-8893A1BE3311}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_589451501c0a4de7b0e22ca56d1c813b</RootNamespace>
    <AssemblyName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Tabular.Json, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files\Microsoft SQL Server\160\SDK\Assemblies\Microsoft.AnalysisServices.Tabular.Json.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Web.Extensions" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Tasks.ScriptTask;
using System.IO;
using System.Web.Script.Serialization;
using System.Linq;
using System.Net.Mail;
using System.Threading;
using Database = Microsoft.AnalysisServices.Tabular.Database;
using Server = Microsoft.AnalysisServices.Tabular.Server;
using System.Collections.Generic;

namespace ST_589451501c0a4de7b0e22ca56d1c813b
{
    [SSISScriptTaskEntryPoint]
	public class ScriptMain : VSTARTScriptObjectModelBase
    {
        private const int MaxRetries = 5;

        private string location;

        /// <summary>
        /// Main
        /// </summary>
        public void Main()
		{
            try
            {
                location = $"{Environment.MachineName.ToUpper()}:{Dts.Variables["System::PackageName"].Value}:{Dts.Variables["System::TaskName"].Value}";

				dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
                string bimPath = settings["bimPath"];
                string tabularConnectionString = settings["tabularConnectionString"];

                Remove(tabularConnectionString, Directory.GetFiles(bimPath, "*.bim").ToList());
                
                Dts.TaskResult = (int)DTSExecResult.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)DTSExecResult.Failure;
				Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
				SendMail($"ERROR - ({location})", $"{ex}");
			}
		}

		/// <summary>
		/// Remove
		/// </summary>
		/// <param name="tabularConnectionString"></param>
		/// <param name="bimFiles"></param>
		/// <returns></returns>
		private void Remove(string tabularConnectionString, List<string> bimFiles)
        {
            for (int retry = 1; retry <= MaxRetries; retry++)
            {
                Server server = new Server();
                try
                {
					server.Connect(tabularConnectionString);
					var databases= bimFiles.ToDictionary(b => Path.GetFileNameWithoutExtension(b));
                    server.Databases.Cast<Database>().Where(d => d.Name.StartsWith("Verification_") && !databases.ContainsKey(d.Name)).ToList().ForEach(d => {
                        var command = $"{{\"delete\": {{\"object\": {{\"database\": \"{d.Name}\"}}}}}}";
                        server.Execute(command);

						bool fireAgain = true;
						Dts.Events.FireInformation(0, location, $"{command}\n{d.Name} -> {tabularConnectionString}", string.Empty, 0, ref fireAgain);
					});                    
                    break;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireWarning(0, $"WARNING - ({location})", $"{ex}\n\n{string.Join(",", bimFiles)} -> {tabularConnectionString}", string.Empty, 0);
                    if (retry >= MaxRetries)
                        throw;
                    Thread.Sleep(1000 * 30);
                }
                finally
                {
                    server.Disconnect();
                }
            }
        }

        /// <summary>
        /// SendMail
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="message"></param>
        private void SendMail(string subject, string message)
        {
            dynamic settings = new JavaScriptSerializer().Deserialize<dynamic>(File.ReadAllText(Path.Combine(Dts.Variables["$Project::SettingsPath"].Value.ToString(), "Settings.json")));
            try
            {
                string smtpServer = settings["smtpServer"];
                SmtpClient smtpClient = new SmtpClient(smtpServer);
                smtpClient.Send(settings["fromEmailAddress"], settings["toEmailAddresses"], subject, message);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, $"ERROR - ({location})", $"{ex}", string.Empty, 0);
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9a1d33c7e8c94af089a84c0fa30fcbc6</msb:DisplayName>
    <msb:ProjectId>{754DE334-C7AD-469F-BBE5-D88A557ED0ED}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Settings.get_Default():ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Sett" +
    "ings")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_589451501c0a4de7b0e22ca56d1c813b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_589451501c0a4de7b0e22ca56d1c813b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9a1d33c7e8c94af089a84c0fa30fcbc6.dll">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
BgDiA6MGBgDDA6MGBgB1BKMGBgAfBKMGBgA4BKMGBgCPA6MGBgCqA+gECgBTBGYFCgCxAmYFBgCb
CQEGBgDdBgEGDgDlAikHDgC3BykHBgCAAJIBEgDfCbcFBgATAwQIBgDHAAEGBgDOAJIBFgBsAAQI
BgD3AAEGFgAKAwQIBgDiAAEGBgD+AAEGBgAuA/EHBgCLBz8IBgDnBm4GEgD1AqEFEgBfA6EFEgDN
AlkGBgDqCQEGBgAoBQEGCgCPBWYFGgDgCCoCGgDTASoCHgDFB4MGBgA3BTgBBgAMAjgBBgBSAgEG
BgDoAQEGIgCAB1kHFgB4BwQIIgAsCVkHIgDzBlkHIgAUCVkHBgBeAJIBBgBUCjgBFgDdAR0HCgCj
B2YFJgC3B2kCDgC1BikHBgDcAWcJBgB3AAEGBgCtAdcEBgA+CqMGJgD2CSQIJgDIBiQIAAAAAC8B
AAAAAAEAAQABABAAFAZhATkAAQABAAAAEABGCK0IPQADAAUAAAEQAD4JrQiJAAUACQADIRAAjgEA
AD0ABgAMAAMBEAAZAAAAPQAIAA8AAwEQADUAAAA9AAoAEAADARAAlwAAAD0ADAASAIMBEAC5AAAA
PQANABQAgwEQAOkAAAA9ABEAFABRgKIIgwIBAEAGGAERAAgGhgIRAKECigIRALQBjgI2ACsBkgIW
AAEAlgIGAEcJngIGAA4FGAEGAL4HogIGAIcApgIGAAoJqgIWAC4AsgIWAFcAwQIWAMAAsgIWANsA
wQIWAC4AsgIWAFcAwQIWAMAAsgIWANsAsgIWAPAAzwJQIAAAAACGABoGBgABALwiAAAAAIEAxATh
AgEAFCQAAAAAgQDHBesCAwB0JgAAAACGGOQHBgAFAHwmAAAAAIMY5AcGAAUAhCYAAAAAkwiHB/EC
BQCwJgAAAACTCIkC9gIFALcmAAAAAJMIlQL7AgUAvyYAAAAAlgjECQEDBgDGJgAAAACGGOQHBgAG
AM4mAAAAAJEY6gcGAwYA2iYAAAAAkRjqBwYDBgB8JgAAAACGGOQHBgAGAOYmAAAAAIMACgAKAwYA
fCYAAAAAhhjkBwYABwB8JgAAAACGGOQHBgAHAPAmAAAAAIMArAAPAwcAfCYAAAAAhhjkBwYACACL
JwAAAACDAEoAFQMIAAAAAQAOBQAAAgDqCAAAAQCiCQAAAgDEAQAAAQC+BAAAAQCMAQAAAQCyAQAA
AQCyAQkA5AcBABEA5AcGABkA5AcKACkA5AcQADEA5AcQADkA5AcQAEEA5AcQAEkA5AcQAFEA5AcQ
AFkA5AcQAGEA5AcQAGkA5AcGAKkA5AcGAOkA5AcGAAkB5AcVABkBGgIkACEBmwcoAHEAegksACkB
3AgyADEB+AU4ADkBtAQ/ACEBlAlDAEEB5AcGAHkAJgUoAEkBSgJLAFEBGQpRAEEBywRWAFkB+gFh
AGkBBQpqAAwA7gKGAAwAvQmSAIEB7gKWAGkBJQqgABQA7gKGABQAvQmSABwAzAHMACQAzAHgAJkB
8wjpAKEBEgrwACkB0AkBACkBggkFASEBjQkLASEBlAkSASEBXgoYAakB2gcbAZEA5AcGALEBqgkQ
ACwA5Ac3AaEBRwo9AZEA/AhdAaEBDQpjATQA5Ac3AaEBVwJ+ATwA5Ac3AUQALwWmASEBHwaxAakB
AgW8AdEBBgfFAbEBsgkGAKEA5AcQAGkBTAfSAUwA7gKGAEwAvQmSAFQAzAENAnEA5AcGAHkA5AcG
AFkBOgodAvEA5AcjAhEB5AcGAEkBJAZRAOEBEQIoALEBrAQwAiEBjQk3AqkBSQY9AiEBPAVIAlwA
LgpUAggABAB+AikAewBSAy4ACwAqAy4AEwAzAy4AGwBSAy4AIwBbAy4AKwCEAy4AMwCEAy4AOwCK
Ay4AQwBbAy4ASwCTAy4AUwCEAy4AWwCtA0MAYwD3A0kAewBSA2MAcwD3A6EAawD3A6MAawD3A8MA
awD3A+MAawD3AwMBawD3AyMBawD3A0MBawD3AxwAJAHKASsCAwABAAQAAwAAAIsHGwMAAKkCIAMA
AMgJJQMCAAYAAwACAAcABQABAAgABQACAAkABwB5ALQAwgDXADABdgGXAZ8B7wEAAk0CBIAAAAEA
AABQIkJNAAAAAAAABwEAAAQAAAAAAAAAAAAAAFoChQEAAAAAEAAAAAAAAAAAAAAAYwJHBQAAAAAP
AAAAAAAAAAAAAABjAikHAAAAAAQAAAAAAAAAAAAAAFoCAQYAAAAABAAAAAAAAAAAAAAAWgJdAgAA
AAAQAAAAAAAAAAAAAABjAkIBAAAAAAQAAAAAAAAAAAAAAGwCUQkAAAAABAAAAAAAAAAAAAAAdQIM
BwAAAAAPAAAAAAAAAAAAAABjAmkCAAAAAAAAAAABAAAAUAgAAAUAAgAGAAIABwACAAgAAgAJAAIA
CgACADcAXQBPAAEBYwBYAWcAcQFrAHEBTwBxAQAAAAAAPD45X18zXzAAPFJlbW92ZT5iX18zXzAA
PD5jX19EaXNwbGF5Q2xhc3MzXzAAPD5wX18wADw+Y19fRGlzcGxheUNsYXNzM18xADxSZW1vdmU+
Yl9fMQA8PnBfXzEASUVudW1lcmFibGVgMQBDYWxsU2l0ZWAxAEFjdGlvbmAxAExpc3RgMQBDUyQ8
PjhfX2xvY2FsczEAPD5jX19EaXNwbGF5Q2xhc3MzXzIAPFJlbW92ZT5iX18yADw+b19fMgA8PnBf
XzIARnVuY2AyAERpY3Rpb25hcnlgMgA8PnBfXzMARnVuY2AzADw+b19fNAA8PnBfXzQARnVuY2A0
AEFjdGlvbmA2AFNUXzlhMWQzM2M3ZThjOTRhZjA4OWE4NGMwZmEzMGZjYmM2ADw+OQA8TW9kdWxl
PgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFNUXzU4OTQ1MTUwMWMw
YTRkZTdiMGUyMmNhNTZkMWM4MTNiAG1zY29ybGliADw+YwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
ZXJpYwBUaHJlYWQAZGVmYXVsdEluc3RhbmNlAG1lc3NhZ2UASW52b2tlAFZhcmlhYmxlAElFbnVt
ZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAZ2V0X05hbWUA
Z2V0X01hY2hpbmVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBU
eXBlAFdoZXJlAFN5c3RlbS5Db3JlAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzLkNvcmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEYXRhYmFzZQBDcmVhdGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ2FsbFNpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAFJl
bW92ZQBEZXNlcmlhbGl6ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcARmlyZVdhcm5pbmcAdGFidWxhckNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcARm9yRWFjaABQ
YXRoAFN0YXJ0c1dpdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABTVF85YTFkMzNjN2U4Yzk0YWYw
ODlhODRjMGZhMzBmY2JjNi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4ASm9pbgBHZXRGaWxlTmFtZVdpdGhvdXRFeHRlbnNpb24AbG9jYXRpb24ARmlyZUluZm9ybWF0
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIu
U2NyaXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YWJhc2VDb2xsZWN0aW9u
AFhtbGFSZXN1bHRDb2xsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBDU2hhcnBBcmd1bWVu
dEluZm8AU2xlZXAATWljcm9zb2Z0LkNTaGFycABTeXN0ZW0uTGlucQBNaWNyb3NvZnQuQW5hbHlz
aXNTZXJ2aWNlcy5UYWJ1bGFyAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVC
aW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAEV2ZW50c09i
amVjdFdyYXBwZXIAU2VydmVyAHNlcnZlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBGaXJlRXJyb3IA
LmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNTg5
NDUxNTAxYzBhNGRlN2IwZTIyY2E1NmQxYzgxM2IuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAE1heFJldHJpZXMAU1RfNTg5NDUxNTAxYzBhNGRlN2IwZTIyY2E1
NmQxYzgxM2IuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAGJpbUZpbGVzAEdldEZpbGVzAGdldF9E
YXRhYmFzZXMAZGF0YWJhc2VzAENTaGFycEFyZ3VtZW50SW5mb0ZsYWdzAENTaGFycEJpbmRlckZs
YWdzAFNldHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAU3lzdGVtLkNvbGxl
Y3Rpb25zAGdldF9EdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AE9iamVjdABzdWJqZWN0AENv
bm5lY3QARGlzY29ubmVjdABUYXJnZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENs
aWVudABFbnZpcm9ubWVudABOYW1lZENvbXBvbmVudABDb252ZXJ0AENhc3QAVG9MaXN0AFJlYWRB
bGxUZXh0AEdldEluZGV4AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBUb0RpY3Rpb25hcnkARGly
ZWN0b3J5AEVtcHR5AAAXewAwAH0AOgB7ADEAfQA6AHsAMgB9AAAnUwB5AHMAdABlAG0AOgA6AFAA
YQBjAGsAYQBnAGUATgBhAG0AZQAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC0k
AFAAcgBvAGoAZQBjAHQAOgA6AFMAZQB0AHQAaQBuAGcAcwBQAGEAdABoAAAbUwBlAHQAdABpAG4A
ZwBzAC4AagBzAG8AbgAAD2IAaQBtAFAAYQB0AGgAAC90AGEAYgB1AGwAYQByAEMAbwBuAG4AZQBj
AHQAaQBvAG4AUwB0AHIAaQBuAGcAAAsqAC4AYgBpAG0AABNFAFIAUgBPAFIAIAAtACAAKAABAykA
AAd7ADAAfQAAF1cAQQBSAE4ASQBOAEcAIAAtACAAKAABH3sAMAB9AAoACgB7ADEAfQAgAC0APgAg
AHsAMgB9AAEDLAAAFXMAbQB0AHAAUwBlAHIAdgBlAHIAAAlTAGUAbgBkAAAhZgByAG8AbQBFAG0A
YQBpAGwAQQBkAGQAcgBlAHMAcwAAIXQAbwBFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwBlAHMAAHFT
AFQAXwA1ADgAOQA0ADUAMQA1ADAAMQBjADAAYQA0AGQAZQA3AGIAMABlADIAMgBjAGEANQA2AGQA
MQBjADgAMQAzAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEl7
ACIAZABlAGwAZQB0AGUAIgA6ACAAewAiAG8AYgBqAGUAYwB0ACIAOgAgAHsAIgBkAGEAdABhAGIA
YQBzAGUAIgA6ACAAIgAACSIAfQB9AH0AAAMKAAAJIAAtAD4AIAABG1YAZQByAGkAZgBpAGMAYQB0
AGkAbwBuAF8AAAAAAFf06vyClqpItgP1TNxX660ABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCB
BwcEHA4OEkEDAAAOAyAADgUgABKAlQUgABKAmQYgARKAnRwDIAAcBwAEDg4cHBwFAAIODg4EAAEO
DgYwAQEeAA4DCgEcCAABEoCtEYCxDgADEoC5EYC9EoCtEoCtDBUSYQEVEm0DEmkcDgsAARUSYQET
ABKAuQMGEwAJAAISgMERgMUOEwADEoC5EYC9EoCtFRKAyQESgMENFRJhARUSZQQSaRwOHAkVEmUE
EmkcDhwKIAMTAxMAEwETAggVEm0DEmkcDgggAhMCEwATAQYAAh0ODg4QEAEBFRJNAR4AFRKAyQEe
AAMKAQ4FIAASgNUGAAMODg4OBQACDg4cAgYOCCAFAggODg4ICwcFEhgIEhwSIBJBBhUSWQIODgUg
AgEcGBoQAgIVEl0CHgEeABUSgMkBHgAVElkCHgAeAQQKAg4OBSAAEoDdDRABARUSgMkBHgASgOEE
CgESRQcVElkCEkUCGBABAhUSgMkBHgAVEoDJAR4AFRJZAh4AAgcVEoDlARJFBhUSTQESRQogAQEV
EoDlARMACgACDg4VEoDJAQ4IIAUBCA4ODggEAAEBCAcHAxwSURJBHAAFEoC5EYC9DhUSgMkBEoCt
EoCtFRKAyQESgMEQFRJhARUScQYSaRJRHBwODgwVEnEGEmkSURwcDg4PIAYBEwATARMCEwMTBBMF
BSAAEoDtByACAQ4SgO0EBwIOAgYgARKA9Q4FAAEOHQ4KIAYBCA4ODggQAgQgAQIOBhUSXQIODgUg
AQITAAi3elxWGTTgiQiJhF3NgIDMkQgxvzhWrTZONQiwP19/EdUKOgQFAAAAAgYIAwYSeQMGEn0D
BhIQAwYSFAcGFRJZAg4OAwYSCAMGEkkDBhIYBwYVEl0CDg4OBhUSYQEVEmUEEmkcDhwNBhUSYQEV
Em0DEmkcDhEGFRJhARUScQYSaRJRHBwODgkgAgEOFRJNAQ4FIAIBDg4EAAASeQQAABJ9BQABARJ9
BAAAEhADAAABBCABDg4FIAEBEkUFIAECEkUECAASeQQIABJ9BAgAEhAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4OTQ1MTUwMWMwYTRkZTdi
MGUyMmNhNTZkMWM4MTNiAAAFAQAAAAAIAQADVFZBAAAZAQAUQ29weXJpZ2h0IEAgVFZBIDIwMjQA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC43BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA7EEAAAAAAAAAAAAABkIAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAPhBAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
JgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAEJNUCIAAAEAQk1QIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAFQAVgBBAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADUAOAA5ADQANQAxADUAMAAxAGMAMABhADQAZABlADcAYgAwAGUAMgAyAGMAYQA1ADYAZAAx
AGMAOAAxADMAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADcA
OAA0AC4AMQA5ADcANwA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAYQAxAGQAMwAzAGMANwBlADgAYwA5ADQAYQBmADAAOAA5AGEAOAA0AGMAMABmAGEAMwAwAGYA
YwBiAGMANgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAVABWAEEAIAAyADAAMgA0AAAAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA5AGEAMQBkADMAMwBjADcAZQA4AGMAOQA0AGEAZgAwADgAOQBhADgA
NABjADAAZgBhADMAMABmAGMAYgBjADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8ANQA4ADkANAA1ADEANQAwADEAYwAwAGEANABkAGUANwBiADAAZQAyADIA
YwBhADUANgBkADEAYwA4ADEAMwBiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA4ADcAOAA0AC4AMQA5ADcANwA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADcAOAA0AC4AMQA5ADcANwA4AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAABgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B3D59A90-C09B-499A-BE5C-FE6269149BEA}"
      DTS:From="Package\RemoveCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ProcessCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{42B88B4A-FDD5-46A9-BBB5-F348D5FAB45D}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::Execute]"
      DTS:From="Package\Execute"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DeployCubes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C6A539D4-C8B4-413F-A65A-700E946D8222}"
      DTS:From="Package\ProcessCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Complete" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{37FF383C-1C25-489E-852A-76C94EEA9038}"
      DTS:From="Package\DeployCubes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\RemoveCubes" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="190,42"
          Id="Package\Complete"
          TopLeft="122.311111111111,380" />
        <NodeLayout
          Size="190,42"
          Id="Package\DeployCubes"
          TopLeft="122.311111111111,170" />
        <NodeLayout
          Size="190,42"
          Id="Package\Execute"
          TopLeft="122.311111111111,100" />
        <NodeLayout
          Size="190,42"
          Id="Package\ProcessCubes"
          TopLeft="122.311111111111,310" />
        <NodeLayout
          Size="190,42"
          Id="Package\RemoveCubes"
          TopLeft="122.311111111111,240" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="217.311111111111,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="217.311111111111,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="217.311111111111,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="217.311111111111,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>